1. 好现在来录制一个用help库实现led闪烁的例子啊。 在实现之前。 我们先打开简写。 用标准库它实现LED闪烁。 它是怎么实现的。 先打开嗯。 JS的实现方法啊。 这个就是用标准库实现一个led闪烁的例子。 这里用pp c13。 因为PC13的话就是控制。 用来控制那个开发板上自带的一个LED。 我们先下载。 然后看一下它的效果。 好。 已经下载完成了。 然后看到它的效果。 就是啊这个LED一直在闪烁。 它主要的原理就是。 大概GPIOC的第13号点设置为推网输出。 初始化IO之后呢。 然后就间隔100ms。 通过这个GPIOCBBS。 来设置这个点的高低电平。 然后实现达到嗯闪烁的一个效果好。 现在我先把这个呃标准库先关掉嗯。 然后用用help库来实现它这个功能嗯。 先打开我做了一个笔记记录。 然后就通过上面的方法来操作。 用号库实现啊l e led闪烁啊。 这个安装这个就不用看了。 从第二个点亮LLED开始。 然后我们就按照里面的步骤来实现。 用号库点亮一个led啊。 首先打开cube ide的软件。 呃文件呀。 应该是通过项目文件新建STM32的项目啊。 我这里应该是没有下载。 可能要等一会。 好可以了。 之后呢。 这里就输入我们芯片的型号。 F103C8T啊。 已经有了C8T6嗯。 C 8t6。 它这边又有两个可以选择的。 我们用的是这一款芯片。 然后点下一步嗯。 给项目起个名字叫做led。 L e d。 然后存放的位置的话。 我就先在我电脑的D盘里面新建一个文件夹。 LED的文件夹存放到这里。 啊DESIG就默认就好了。 然后下一步完成。 好新建模。 它完全是这样的。 右边就是C8T6的芯片的引脚图啊。 其实就是打开这个点IOC文件就可以看到它了。 呃我们先设置PC13为推广输出。 因为啊只能通过PC13。 才能控制板上的l e led灯。 这个是PC13。 然后设置为输出模式。 设置输出模式之后。 左边找到它的分类。 分类是GPIO的分类。 然后这里就有详细的设置嗯。 首先选中PC13。 因为刚刚我在这边已经设置PC13为输出模式。 所以他这里就有一个更详细的输出。 输GPIO输出的一个设置啊。 首先输出的默认亮平是低电平。 我可以给他一个高电平。 然后输出模式上面这个是推网输出。 底下这个是开路输出啊。 由于要控制LEDE的呃闪烁。 我们要用推网输出呃。 这个速度的话我们选一个最高的。 然后底下是一个用户标签。 用户标签就是用来标记这个JPPC13的一个。 另外一个名称叫做北名吧。 P叫做LED。 P好我们就起这个名字。 然后啊保存后呢。 他就啊它就自动生成相关的代码啊。 这这一部分就是用来配置配置IO的。 我们打开啊。 may点四里面。 may点C里面。 看一下他是怎么一怎么样的一个操作。 它自动帮我们生成了一些代码啊。 这个是help库的初始化。 这个是时钟的初始化配置啊。 刚刚我们写的代码其实就是包含在GPIO。 in need的这个函数里面。 打开转到定义啊。 转到定义的话里面就可以看到呃。 他对他对这个GPIO。 这初始化的大概一个过程啊。 其实跟标准库那边也是类似的。 也是设置推广输出啊。 速率啊啊这种东西啊。 然后啊他其实设置GBIO的高低电平的话。 就是用这个函数。 我们可以先拷贝。 然后把它回到C这边。 may点C这边啊的外循环里面设置一下好。 我们就用就用他的这个代码。 然后编译看下效果。 俺没问题。 然后把它下载进去啊。 下载进去。 这里选择好。 每次下下载前自动编译确定。 啊现在已经下载完了。 我们打开啊。 打开那个摄像头看看啊。 这个是点亮的效果。 现在我们把那个状态调到另外一个状态。 好调到这个下载状态。 然后把它放在这里。 就设置另外一个亮片。 它应该就是熄灭了。 然后加沙展啊。 下载进去。 这边对应它就熄灭了。 然后然后这里就可以做闪烁了。 延时延时一号库里面有专门的延时函数。 不用那个嗯。 不用标准库那边和那个演示函数了。 这个是毫秒级的100ms。 然后底下的话我设置另外一种状态。 一个下一个铝线。 然后也是100ms好。 现在应该就可以达到一个闪烁的效果。 哦这个应该是拼错了。 我看一下它里面是嗯用的是什么哪一个哪一个。 我是用小写的。 后面的。 DELAY好在现在重新编译啊。 是没报错了。 再下载进去。 好已经可以了。 再看下效果啊。 发现它是跟嗯标准库那边是一样的。 效果是不断的在闪烁。 好现在这个视频就到这里。 就是用help库实现同样的功能。
2. 呃前面已经录完GPIO输出。 控制l e led闪烁的粒子。 然后这一这个视频的话。 就录制一个GPL输入的视频。 GPL输入简写那边是怎么操作呢。 就是绑上连接一个LED。 然后通过这个LED来控制板上PC13。 LED的电还灭。 按下的话它就亮。 放开的话就灭它主要是吸烟这个功能啊。 我们先打开之前闪烁的例子。 然后在闪烁的例子的基础上修改。 嗯这个是led闪烁的粒子线间歇。 标准库那边的话。 假如说在一个代码的基础上修改的话。 一个项目的基础上修改。 一般的做法是啊。 在标准库那边的话。 一般的做法是弄一个副本。 然后在副本上面直接打开就行了。 但在help库中这样是不行的。 假如说这样解进点进去的话。 它是会报错的。 报什么命名空间是啊存在有冲突。 所以这个方法是在这里实行不通。 我们可以通过另外一个办法啊。 首先把这个给删掉。 啊然后你要新建一个啊新项目存放的路径。 比如说我给这个GPL输入的那个啊名称。 下面名文件夹名名称。 然后选二。 然后LED。 in put啊。 一一定要注意的是。 这个路径是不能存在有中文中文的假。 假如说存在有中文的话。 它编译是会报错的。 好等一下我们就把那个项目存放在这里啊。 然后下一步的话就是找到这个闪烁的。 闪烁的项目。 然后复制。 从这里复制闪烁的项目。 然后在这边空白的地方粘贴。 粘贴之后写一个新项目的名字。 然后给它起一个名字。 Input input。 然后嗯。 新项目存放的位置。 就存放在刚刚新建的那个文件夹那里。 然后确定之后啊。 他就会把把上面的这个项目完整复制一个。 到底下的这个项目。 所以我底下这个啊代码基础的话。 就是在上面的代码上修改的嗯。 复制完之后还是不行的。 因为这里跟这个它是它是名字是不一样的。 导出点这个它是打不开的。 因为啊它这这个项目管理器中有两个名字。 一样的。 它也是不行的。 他需要把这个的名字改成跟这个名字一样。 他说我重命名重命名。 这个把他的名字拷贝一下出来。 要取消把那个名字拷贝到这里重命名。 然后把那个名字拷贝到这里。 然后确定。 啊然后这个时候就可以打开打开它了。 好想把这个边关掉。 嗯开发板上我在pa7的地方连了一个按钮。 我们就初始化pa7的这个GPL。 把它设置为上拉输入。 然后去检测PA7的电瓶。 然后通过这个电瓶来设置来设置嗯。 PC13的高低电平。 达到控制PC13的效果好。 首先打到PA7。 发到PA7。 然后设置成GPI输入模式啊。 找到详细分类中的GPRIOPA7。 把它设置为输入模式。 然后是上拉输入额底下的用户标签的话。 就写成led。 import吧。 啊这边就对应把l e d input写在这里。 这个标签显示在这里。 然后点一下CTRLS保存之后。 它就会自动生成相关代码。 啊还是来看一下他呃这个GPL的初始化。 我们按住CTRL键。 然后鼠标放在这里。 然后点一下它就可以转到定义。 转到定义的话。 它就它里面的代码。 就比前面的话就多增加了一个啊。 输入模式的设置。 P1PPAPA7输入啊。 可以转到这个。 这个只是我们设置的标签啊。 其他是一个宏定义。 就是七并期。 然后前面还有一个红利益。 就是呃GPIOG的。 就是就是这里GPIAA的pin7。 好像我们这个他是把所有代码的话都放在main。 main函数may点C这里了。 比如说这个啊初始化的话。 它就是放在媚点C的最底上。 这个就不太方便我们管理。 所以我们可以在它这个IOC里面设置。 它为每个外设。 就每个GBI。 每个IO啊。 每个外设。 比如说DNAGBIO啊。 这种这种的话都生成一个单独的文件。 在这里会每个外设生成一个点C。 还有点H的文件。 我把这个勾上。 然后再保存。 然后现在去G嗯may点C里面看的话。 他那个文件应该这这个初始化的函数。 实体应该就不在这里面了啊。 底下是没有了。 我们按住CTRL键转到定义看一下啊。 它就跳到GBIO点C这里啊。 他就为每个外设生成了一个GPL点C。 还有GPIO点H。 这就方便我们做这个代码的管理。 就分类它因为分每个文件都。 每个外设都生成一个点C点H文件啊。 这也是一样的。 功能一样的。 只不过说是啊它一响数啊。 那么分开放到单独的文件里面去。 我们还是回到魅点C里面啊。 去写一个读取按键的函数呃。 参考下这边的这个例子。 把这个读取的函数放在啊GPL外面啊。 放到min min点C里面啊。 一定要把这用户自定义代码放在这种啊。 begin还有and之间啊。 要是放在这之外的话。 等一下他假如说重新啊打开这个编辑后保存它。 就会把这些代码给删掉的。 用户自定义代码就把它放在这里啊。 可能这个地方还要稍微修改一下。 这个可能名字刚起的不一样。 就是读取读读取嗯。 读取pa7的状态。 PA7状态。 我们看下pa7状态。 定义PA7。 这个是输入的PA7。 是是把这两个先复制出来。 然后回到刚刚编辑那里。 就是GPROA。 G pro。 然后的话就是pin7。 就是这个是我们设置的用户标签。 那就读取。 通过这个函数去读取。 GPLA的pin7的一个状态啊。 把这个状态的话返回去。 然后while循环中就可以通过这个状态来。 来来设置改设置PC13的电瓶了。 就是这里读取状态。 就是前面我的写的这个函数啊。 假如说是g p r reset的话。 它就写PC13的这个RECEL的状态好的。 否则的话就把它写成写的状态好。 现在我编译一次还有错误哦。 这个可能我的名称跟这个例子里面不一样。 我们去找一下PCPCPCC3是怎么定义的。 转到这里是这个我们PS3是这样定义的。 我们把它先记下来。 然后又回到刚刚那里啊。 应该是这样。 宏定义。 把这个当做成pg p I/O c。 然后底下的话就是。 这个。 啊因为之前的命名跟我这里的命名不太一样。 所以我要把它改成。 我刚刚设置用户标签的那个命名。 然后再重新编译好可以了。 然后下载进去啊。 选择这个input自动下载。 好没问题了。 我们看一下效果。 唉还没啊。 可以了。 啊上面的呃状态的话。 他现在是没有没有亮了。 假如说我按下这个按键啊。 它就它就亮了。 放开就没按上再亮好。 这个就演示了一个GPL输入。
3. 前面已经录制完GPIO的输入。 还有输出了。 然后这个视频的话就开始录制啊。 OLED屏幕的显示。 因为后续所有的例子的话。 都需要把相关的一些数据显示到OLED屏幕上啊。 首先我们先打开简写里面的那个标准库。 代码是如何操作OLED显示的。 好想把他的那个代码下载到开发板上。 看一下效果啊。 首先的话它是可以把啊。 对应的一些字符显示到这个OLED屏幕上的啊。 他主要的额思想的话就是嗯。 定义了两个GPIO。 然后把这两个GPIO啊。 就是GPB8。 还有PB9设置为开漏输出的模式。 然后后面就用软件I软件IPHONEC啊。 对这两个引脚进行操作。 然后进行通讯。 就把相关的一些数据发给OOLED。 屏幕显示啊。 所以说我们只需要替换前面这部分就可以了。 就是GPIO的初始化。 就用要用help库的GPIO的初始化。 然后啊读写这个GPIO啊。 读通过通过写读写这两个引脚的电平模拟软件。 IPHONEC把数据发送出去就行了。 只需要替换这一部分。 好像现在是先啊先关掉这个。 然后我们来新建一个help库来实现这个功能啊。 先放这里。 然后新建个文件夹。 3OLED给我放在这里。 打开cube ide1。 好打开qq id之前的话。 我先打开一下我之前做的一个简单的说明文档。 然后我们是在啊。 LED的这个项目的基础上进行修改吧。 啊因它是跟之前一样。 在这里先copy。 然后先粘贴。 然后粘贴。 然后这里用LED位置的话。 就存放在刚刚我新建的那个位置上。 电脑D盘软件。 放在这个文件夹上。 否则。 还有要把点IOC要改。 跟这个项目名称一样。 前面已经说过这个了。 先把这个复制。 然后这里再重命名。 把粘贴确定。 啊然后就可以打开这里了啊。 然后就按我这边的这个步骤来操作啊。 间歇的这个代码刚刚已经分析了。 其实就是三个文件。 把它首先要需要把它先拷过去。 然后只需要对啊。 前面这部分按GPIL的初始化。 还有啊据两个IPHONEC软件。 IPHONE11的GPL进行啊。 写入写入就行了。 然后现在这一步的话是初始化两个区。 pl在跳库中呃。 因因为他那边用的是呃PBPB8。 还有PB9。 所以这边也是对应的一些需要用PV8。 还有PB9啊。 PV8还有PP9。 需要开漏输出模式。 PB8在这里输出。 然后这个也是输出。 然后找到GPR分类。 要进行进行详细设置。 啊PC13的话可以暂时不要了。 因为这个PC13的话是用来控制开发板上的。 那个LED的。 这个可以不要。 然后我们点好把这个给删掉啊。 然后的话PV8还有PV9需要啊。 设置成开漏输出。 然后这里给一个用户标签就是PV8吧。 然后底下也是一样的。 然后开到输出PBPB9由CTRLS保存。 然后它就会生成代码。 啊。 因为前面我已经勾了。 那个为每个外设生成单独的文件。 所以说哦这个没有。 我们在区里面勾一下。 发现他那个还是应该是没勾选。 为每个外设生成单独的文件啊。 然后再保存。 这样代码的话就方便管理一点。 方便查看。 因为全部都塞到那个点c may。 点C里面的话很难去找啊。 所以说我们假如说要这样的话。 需要找GPL的相关代码的话。 我们只需要在这里打开GPL。 点C就可以看到它的一个代码了。 好首先初始化完了之后。 我们再按这边的步骤。 然后配置文件已经配置好了。 然后第三个生成代码啊。 也已经生成了。 然后复制呃。 复制标准库中的LOLED的三个文件好。 首先我们打开这里。 好先看这个能不能直接复制。 用键盘看到row直接复制OLED点C啊。 这样也复制不了。 我还是要到要到里面去找OLLED。 去到标准库那个工程对应的文件夹里面。 去找这个点C。 然后把它复制在粘贴在这里。 然后两个H然后放在上面。 好然后这个就复制完成了。 然后打开OLED点C这里啊。 这个标准库前面肯定是没有了。 所以要把这个删掉啊。 然后往下的话就是啊。 需要把初始化还有额GPL设置的函数改成对应。 改成help库的设置。 啊首先是这两个。 这两个是啊先注释掉。 先不要叫这个。 因为这个是标准库对IO进行读写的一个操作。 我们要用跳库中对GPL进行读一个多选操作。 要把它对后替换的这两个函数啊。 这两个函数实现的功能跟前面是一样的。 只不过前面是标准库中实现。 然后这个是help库中实现。 然后GPL初始化的话。 这个也要注释掉。 因为help库对GPL的初始化不是这样子的。 其实这两个GPIO的初始化。 我们已经生成了代码。 我就去找一下就行了啊。 在main函数中啊。 这个就是对它一个初始化的一个函数。 往多拉定义啊。 其实他已经初始化过了。 我们为了跟这边对应。 所以要把把这里的初始化也拷到那边去吧。 GPIGPL点C这里哎。 不是OLED这里啊。 这个就可以跟它对应起来。 就前面是标准库的。 对这两个GPL的初始化。 这个是啊help库中对GPL的初始化。 我们转到定义就可以看到了啊。 前面就是啊两个引脚软件。 IPHONE是零二引脚的。 写设置好。 现在编译一下。 看看有什么错误。 呃应该这里还要包含一下头文件。 包含他这边的头文件。 应该要包含GPRO那个头文件。 要把这个GPL点C。 因为里面对GPL进行了操作。 所以OOL一点C这里要包含啊。 这个对GBIO初始化的一个头文件好。 现在已经还剩六个错误了。 然后。 这个看下是什么抽。 Gpl8。 哦他这里的话。 我把这个定义给拷上来。 看看他是不是写错了。 这里。 GPL8的话。 B这个没错啊。 ping8这里应该写错了。 ping8应该用这个哎拼八应该是用这个。 要拼九的话。 应该PP9的话应该是这个。 可能前面的命名跟我现在重新做的命名不一样。 所以改一下这里就好了。 啊还有四个错误。 再看是什么错误。 哦因为PC13那个我应该也注释掉了。 所以把那个控制PC13那个led的代码给删掉。 好现在是没问题了。 现在没问题之后。 我们就可以直接对它进行一个使用。 怎么使用呢。 参考这边。 然后help库值使用。 首先的话要在main函数中添加OLED点H啊。 才知道标准库边。 这也是一样的。 他也要包含这个OLEDDH的啊。 这里嘛应该是这里他也要把这个OVAZ。 这是在help库中也是一样啊。 这个代码一定要放在这个begin还有end之间。 否则的话等下有可能会打自动再生成的话。 会帮你帮帮你把这个代码给删掉。 然后底下的话就直接可以考这个函数过来了。 然后放在may的这个地方啊。 放在前面吧。 不用每次循环。 因为我只需要显示一次就行了。 然后编译。 然后初始化啊。 然后下载OOLED编译器。 下载前自动编译。 好现在看一下效果好。 它显示出来了。 我啊重发。 把它放在边重新下载一遍。 重新下载一遍。 啊输出的数据是一样的。 但是它有没有发现这个啊反应有点慢。 就是他一行一行的输入反应啊。 一行一行相当于一行一行打印。 但是啊标准库那边的话。 一瞬间就把全部显示完好。 我们看一下我这边的这个例子。 就有对这个的说明。 呃先看问题点一眼啊。 他说有警告。 比如说啊啊我这个没有假说。 你里面有这个警告的话。 可以到这里设置一下它的编码格式。 就是在。 啊我看下在哪个地方项目资源。 有其他聊项目项目好。 然后属性资源。 其他要把它设置这个模式啊。 应用并关闭。 假如说你这里有个叹号的话。 可以通过这样的一个设置啊。 然后第二个的话设置PPPLL啊。 他为什么会这么慢呢。 肯定是因为它的时钟还没有配置。 它始终还是应该是用的啊。 内部的时钟没有用外部的这个啊。 高速高速高速时钟啊。 怎么修改时钟呢。 然后打开IOC这里啊。 对应上我这边看着我这边怎么改的。 嗯然后选中先打开这个。 然后啊选择四种四种配置。 呃这个应该写72。 哦应该现在还设置不了。 此时需要把呃这边的这个外部时钟可以先打开。 外部外部高速时钟啊。 选这个陶瓷电梯啊。 然后这样就可以了。 他就可以把外部高速时钟打开。 打开之后呢。 然后就可以在这边设置啊。 就这里选中外部高速时钟。 然后这里写72。 然后就可以了。 就可以打开这个外部高速时钟了。 然后我们现在再保存一次。 由开撒。 我在编译下载。 看这边的显示还是不是像刚刚那样缓慢的。 一行一行的逐行显示。 啊发现它的话一闪而过。 它就相当于一次性显示完了。 就没有刚刚那么慢。 主要是因为刚刚那个时钟。 用的内部的那个时钟啊。 还我们再看下一个问题。 刷新慢的问题。 这个已经解决了。 然后设置PL啊。 还有这里下载的话。 再次下载的话。 它就会失败了。 看到这里。 啊它就会失败了。 主要原因是什么呢。 因为我们没有设置那个下载方式。 额先我们先把这个给去除掉。 去除的话就跟啊先把这个去除掉去除掉。 这是呃先打开一个Q5IDE1。 然后啊其实你那边下载失败的话。 这边对应应该也是杀杀失败的。 可以试一下啊。 也是下载失败了。 怎么解除呢。 解除办法的话就是跟啊。 解除睡眠模式的办法是一样的啊。 这持睡眠模式在Q下载之前按住按钮。 然后按住不放。 然后点下载的时候马上封开。 放开放开就行了。 好我们看下看下这边。 先打开一个Q。 随便打开一个都可以。 然后按住这个reset键。 然后按住。 然后点这个下载。 马上放开好。 再来一次。 那我再试试。 哦这样还是不行。 我们还是继续往下走吧。 先把这个啊。 主要是因为help库中没有设置。 这个JTG的下载模式。 啊怎么设置呢。 就是嗯。 我先暂停了哦。 刚刚应该是多试几次就可以了。 然后不行的话。 要把那个啊这个断断掉电。 然后他解除污。 那刚刚那个方式就是跟解除睡眠模式是一样的。 就是先按住它。 然后按住这个design键。 然后点下载。 然后马上重开。 然后他就可以啊。 正常了。 他现在假说放开都可以正常编译了。 然后回到help库中。 我们要把呃下载模式改成JTJTG模式。 应该是在这边这个IOC这边。 然后选择这边啊。 想想这个system。 然后呃debug要显示JTG。 我看这里选的是哪一个啊。 应该选择窗口。 这个应该选这个。 然后再保存。 然后重新编译。 哪是没有错了。 然后再下再重新下载进去。 啊发现是没问题了。 多次下载都没问题了。 刚刚那个首次可以。 然后第二次之后就他会就会有问题。 然后现在的话啊应该是没问题了。 这个是OLLED显示。 那假如说我改一下这个。 诶诶他那边应该也是跟着变化的。 然后下载。 啊这个是OLED的显示。 然后这个视频就到这里了。
4. 好现在开始的录制下一个例子。 先打开标准库呃。 标准库这边的话输出录制了。 然后这个蜂鸣器的话也是输入输出的范围。 然后输入的话就是那个按钮读取按钮。 来控制LED的输出。 OLED屏幕也也录了。 要中断。 这个是中断的理论。 然后理论这里啊不用说。 只是啊看他的实例。 然后中断的第一个例子。 就是对射传感器的计次好。 我们先打开好标准库中是是怎么实现的。 先打开标准库的例子。 啊编译。 然后把它下载进去。 把下载进去之后看一下嗯。 它的一个效果。 然后把它挡住。 这个的话呢他就会啊。 他就会对它进行一个计次的一个功能啊。 打一次他就加一好。 然后现在这个就可以关掉了。 然后我们用help库来实现这个功能嗯。 先在这边存放。 这边先建立一个存放这个项目的文件夹。 四。 叫做一餐it。 啊先SOOR啊。 中断的传感器计计数吧。 就这个名字吧。 然后再打开cube。 爱恋一。 啊呃我们在OLED的这个项目上基础上修改copy。 然后粘贴。 然后名字的话就是用这个名字位置。 就存放在这里。 复制。 好然后还是一样。 跟之前的方法一样。 先把这个名字给复制下来。 然后把这里重命名。 命名跟前面的名字一样。 确定。 在开始之前的话。 我打开我之前做的一个help库的一个笔记啊。 就是这个我们就按这个笔记的步骤来啊。 前面接线的话跟之前一样。 然后这里设置PB14为中断的音效。 就按这个图片来设置好。 我们先打开这个。 PB14就按我里面说这是啊设置为中断模式。 然后再找到详细设置GPIO。 然后选中pp14啊。 然后这里就可以选中上升沿触发还是下降沿。 触发这个总断我现在就选默认上层言。 然后底下的标签我看这边用的是什么名字。 啊用户标签。 这个我直接用这个了。 Sensor co。 然后的话嗯这个是这个是PB是四的。 然后中断的话要打开这个中断。 好然后就可以下一步的话可以。 我还可以设置中断的优先级啊。 这个GPIO的设置。 然后底下还有一个中断的m vs g o n v i c。 然后这里就可以啊对它进行一个前占优先级。 还有嗯前端优先级。 还有那个响应优先级的一个顺序。 这里给设置。 我们就按默认的就好了。 好这里中断中断也打开了。 然后就可以保存。 然后它就会生成一个啊。 垄断的一个点C的一个文件啊。 在这个地方啊就生成了一个中断的点C。 还有中断点H。 因为我们前面已经啊勾选配置了。 为每个外设都生成一个点C还有点H文件好。 现在那再接着这边这个文档啊。 保存LC它就会生成这两个文件嘛。 然后。 我们就只需要在这个文件里面进行操作就行了。 我们打开这个i i it点C就中断点C的文件。 往下拉。 找到中断函数。 咳咳啊。 这个就是它中断函数。 当PB14上上升沿触发中断的时候。 他就会进入这个函数这里。 所以我们就可以在这里进行一个操作。 好在这边的话。 咳咳。 呃在这边的话就就是判断判断它的一个中断。 哦我想把这个代码拷拷过来。 啊就假如说证据中断的话。 这个标志位进入中断的话。 它就这个靠加一。 靠的话要重新定义。 刚好的话我们在前面找个地方给它定义一下。 就在最前面这个文件的最前面给它定义啊。 就随便找一个啊。 begin和end之间的一个啊。 这个地方定义了之后呢。 他就可以他就可以每次进入中断之后。 它这个HH靠就会加一。 然后我们还要调用弄一个函数给他啊。 这个函数的话就是是给may那边调用了。 后面给main那边调用了。 好这是这个函数。 这个函数应该还要再点C里面声明一下。 那个点H文件里面声明一下这个函数。 首先在it点H这边声明一下。 嗯应该写在这里。 好这就完成了。 后面我们就可以在这边may点C这边调用。 就获取刚刚那个变量。 然后在may这边就是OLED初始化。 前面这个就不要了。 只要OLED初始化。 然后弄一个清屏。 还有显示前面的那个靠。 然后调用的是这个函数。 好像我编译看一下。 老师没报错了。 然后下载进去。 打开这边。 哦下载完了我们去感应下。 看的效果跟那边是不是一样的。 好这个是没问题。 这个是也是加一的啊。 这个就是啊。 IO通过IO的一个中断来实现编码呃。 这个对射传感器的计次功能啊。 其实这里还有一个可以优化的。 比如说这边的话。 这是IT点C。 它它调用这个函数。 它电竞卡数的话。 我们先把这个代码还原一下。 先把这个我们用户的先删掉。 这个是我们刚刚添加的。 我们再把它还原回来。 然后前面的这个定义还原这个不要了。 然后点H这边的话也删掉。 刚刚那个函数定义。 我们用回调函数的方法来实现啊。 还是到这里到这里的话。 这个是中断函数。 我们进入这个中断函数这里啊。 它传的话其实就是这个终端进入中断函数里面。 还有一个这个函数。 这个函数他传的参数就是我们的刚刚设置的。 Pb14。 要回到这个地方。 然后去到中断函数里面看的话啊。 他其实会执行一个回调函数。 这个回调函数就是这个地方。 我们再按住CTRL键转到定义的话。 这个就只是是中断的回调函数。 我们可以把这个函数拷到拷贝到M点C这边。 啊COOMMATE4。 这边就是啊。 通过回调函数的方式来实现它这个功能嗯。 实现我把这个定义放在这里。 然后。 如果这个函数的pin等于额那个14PB14。 我们可以在这里面找中断。 应该就是这个等于等于我们定义用户标签的。 这个PB14的话才加一这个。 里面的话才对JK书进行加一。 然后底下的话就显示直接显示这个数就行了。 好我们看一下效果跟刚刚是不是一样的。 下载。 啊FU啊是没问题的啊。 这个的用回调函数的方式的话。 就不用把那个文那个那个那个呃。 中断的这些用户代码写在IT这边啊。 然后我们就可以找到通用重写。 它的中断函数放到CM点C里面就行了啊。 后面的所有的中断的话。 一般都是有这个的。 都有这个回调函数。 这个是它自动生成的。 你可以在这里写你的用户代码也可以。 然后假如说想更进一步的话。 可以转移到定义。 一般都会有里面的话。 都有call back的这个回调函数。 我们转到定义的话就可以啊。 带有这个标识的。 然后就可以在魅点C里面啊。 写这个写一个这个回调数。 后面它就会自动去调用这个函数啊。 这个是啊回调函数编码器自次的一个功能。 好这个视频就录到这里。
5. 好现在来录制下一个视频。 先打开标准库。 这边看。 是应该是大号旋转编码器支持的一个功能啊。 他这里主要的作用就是呃。 利用了编码器的这个规律。 就是A信号会被会比B信号快半个周期啊。 意思就是A下减盐的时候。 去判断B项是高电平还是低电平。 假如说是高电平的话。 它是啊顺时针转。 然后就让那个变量计数字计数的变量差一啊。 然后A下降眼的时候。 假说B是低电平的话。 就是顺时针另外一个方向转动。 然后另外一个方向转动的话。 就操作那个计数的变量减一就行了。 所以说它主要的规律。 主要的核心按原理的话。 就是插件盐的时候判断B的电平好。 看一下。 标准库。 这边它的粒子效果应该是先装编码器支持。 然后打开。 要把程序下载进去。 打开看一下啊。 这个是它标准库的实现哈。 逆时针转的话就是啊减一。 顺时针的话就是加一啊。 这个是没问题的。 然后后面就啊打开用help库来实现一次这个功能。 呃先关掉这个。 然后在例子这边新建一个存放项目的文件夹。 第五。 O d e r。 啊这个就是文件夹就存放在这里。 然后打开cube ide1。 在OLED屏幕的这个项目上基础上修改。 然后粘贴项目名称的话就用啊。 他这里这个名称。 存放位置就存放在刚刚新建的那个文件夹那里。 然后复制。 啊就是这个啊。 还有一个就是要把点IOC文件夹。 要需要改成跟啊项目文件的名称一样。 然后确定啊。 然后就可以了。 然后项目就复制完成了啊。 打开help库中我做的一个笔记过程。 后面我就按这个过程来实现来操作。 接线是已经接好了。 然后他要需要找到PB0。 还有PV1设置为中断模式。 而且是选择为下降沿触发好。 再来个LOC这个文件PB0。 还有PB1。 PB连在这里设为中断。 然后PPP1也是中断中断模式。 然后在详细GBIO这边需要配置为下降沿。 触发。 应该是。 中断模式诶。 为什么选我撞了啊。 这里杀建研究方。 稍减除法。 然后就是啊名称的话。 就是我看下这边我用的是什么名称。 P b 0e x i t。 应该是名称要跟我这边保持的是。 要不等下又要修改那个名称。 PB01叉i it。 然后PB也是一样。 选择选择砂加岩触发。 然后PBEE叉T啊。 这是第二步IO中断。 然后第三步的话要打开中断的通道。 然后这里NVIC把零通道还有E通道都打开。 零通道其实就是PP0。 然后一通道的话就是。 这其实就是PP1的一个中断。 然后保存。 啊保存之后呢。 它应该会生成一个中断的点C文件。 因为我前面已经勾选了。 为每个外设都生成一个点C。 还有点H文件在里面找到啊。 两个通道的中断函数应该在最后啊。 这个就是啊通道零的中断函数。 这个是通道一的中断函数。 通道零的话应该是PB0。 下降沿的时候。 它会触发这个通道零的中端函数。 然后通道一的这个中断函数的话是PB1。 下键眼的时候会触发啊。 根据根据那个编码器的这个原理啊。 我们就可以啊在中断函数里面做一个代码修改。 就是啊在通道零就PB。 PB0下降沿的时候去判断啊。 另外一项就是PB1的一个高低电平。 然后我们把这段代码拷拷到这边。 然后这个放这里。 然后这个这个通道一的时候就是PB1。 上线沿的时候去判断PP0的呃。 给个高点电瓶。 好。 然后啊。 还有一个就是啊需要定义这个计数的一个变量。 这个函数是啊给外部调用的。 然后我们要在前面定义一个。 这个用于技术的变量。 等于零好。 我看下编译有没有报错啊。 编译应该是没有报错的。 然后我把这个函数可以到点C里面去。 定义一下it点C。 后面应该是可以直接给main函数那边调用。 获取调用了。 然后把这些删掉。 OLE初始化要要需要用的。 因为显示显示的时候要用的标妹函数。 那边的话就主要是添加这里清屏。 还有显示这个com。 还有后面获取一个真实的一个数据显示出来。 然后可以的。 编译没问题。 然后下载进去呃。 用的是这个。 这个。 要我打开一下这里。 嗯然后我嗯这个是没问题的。 这旋转的时候他是这个计数是没问题。 逆时针就这个顺时针啊。 这是没问题。 啊发现这里假如说顺序反的话。 比如说我顺时针它是啊。 他是加了逆时针是做是减了。 假如说发现跟那边不一样的话。 可以在这里。 ID点C这里修改一下他的这个逻辑啊。 就是PB0下降下减盐的时候。 这个函数这里放减。 然后这边这边放假。 这边放剪。 然后修改一下这个逻辑就可以了。 然后再再下载。 啊发现这个事已经跟那边能对上了。 逆时针的时候是减要顺时针是加好。 这个视频就先到这里。 哦还有一个的话就是它中断函数里面。 也可以像我前面的那个对射传感器支持那一样。 可以接。 也可以用它的回调函数写在M点C里面。 其实效果是一样的。 我只不过说都是写在这个it点C文件里面了。 也可以通过在M点C里面重写这个回调函数啊。 具体详情的话可以参考一下那个嗯。 红外红外对射传感器自制的这个例子里面。 用回调函数的方法来实现。
6. 好现在开始录制下一个视频。 然后应该到定时器。 定时器的话应该是到这个地址。 定时器外部时钟原哎不对。 应该是定时中断啊。 第十中段主要实现的功能的话。 就使用内部时钟这个模式。 然后把啊外部时钟这个信号传给十几单元。 然后实际单元通过设置预分频器。 还有ARR自动重装器啊。 合适的设置这两个参数。 就使得它一秒钟输出一次中断。 然后中断传给NVIC有总断之后。 在中断函数里面啊啊设置一个自增的变量。 使得每次冲动的杂音。 然后这个就可以啊。 通过它输出一秒钟到我寄出。 直接加也要显示到OLWOREDC屏幕上。 啊然后内部使用语言选择啊。 这直接调用一个函数就行了。 主要是实际单元。 他是怎么设置定时一秒钟输出是中断呢。 主要看这里啊。 两个重要的参数。 我们输入的时钟频率是72兆赫兹。 就是一秒钟有72兆个30元好。 我们先把预防剂师设置为啊7200。 然后这样的话就会把频率降降降到1万。 这是啊一秒钟只有1万个上升烟。 然后我们把自动重装自制者是就设置成1万。 就是每每每每来一次。 上次讲的话。 就对他的数数据加一。 然后刚好加到自动重装自载。 自自动重装寄存器。 1万的时候刚好就是一秒。 然后触发一次中断。 好这个就是呃。 一秒触发一次中断的一个参数设置好。 现在我们用help库来实现一次。 这个功能好。 还要先打开标准库。 看一下它的效果。 要下载要编译下载进去啊。 然后打开摄像头看一下啊。 这个就是它的一页主要实现的效果。 底下的话就是计数字的值。 计数到1万的时候。 他就会触发一次更新。 中断。 更新中断那边的话就对一个计数的变量加一。 然后就一秒钟啊。 自增一看。 这个是他的一个啊。 效果好。 我们现在用cube i d e来实现一次个。 这个功能啊。 先打开这个。 然后新建一个文件夹来存放这个项目。 t timi it吧。 然后打开Q8DE。 然后在OLED的项目上基础上修改。 这个就跟前面一样的。 这面已经操作过好多次了。 这里我就啊快速的操作一次。 把这个名称改到IOC这里。 然后就可以了。 然后下一步怎么操作呢。 我们打开help库的一个操作说明。 就是定时中断。 就按这个方式来这个步骤来操作。 然后先选先选择type2。 先用timer2。 然后时钟模式的话。 使用内部时钟模式。 然后底下就用啊。 预分配率是7200。 然后底下就自动重装寄存器的话。 就用1万内boss的模式。 内部时钟根本算不上好可以了。 然后基本参数设置的话。 这里就是7200-1。 然后中断需要打开一个全局的定时中断。 有保存。 然后底下就可以直接使用了。 使用之前的话。 我们也需要通过代码来啊执行。 执行一下这个代码。 把定时初始化定时器二的一个中断使能。 在Mac里面找一个地方找这里。 然后初始化由底下需要找到中断函数啊。 这个中断函数的回调函数它是怎么找呢。 还是一样。 跟以前在it里面查到定型二者中断中断函数啊。 这这就是这个函数。 我们按住CTRL键转到定义看下啊。 发现他只转到了声明。 没转到定义。 我们手动去找一下这个函数是在哪个地方。 啊这先找到HH是在啊驱动函数help点time点H。 这里应该是在这个地方。 现在所打开这个文件应该是。 然后点time点AH应该是在这里啊。 现在就是这个文件我们需要去到对应的C文件。 点C文件里面找到这个啊。 第十中段的函数应该是在底下后点time dh。 在这个地方。 然后搜索一下啊。 现在在这里啊。 就是说它定时器进入中那个中触发中断的话。 肯他肯定会来执行一次这个函数。 它里面有很多回调函数。 我们去找一下呃。 一个应该是更新事件的一个中断啊。 这个应该是IIC的中那个回调函数。 这个是不用管。 它里面放了很多回调函数。 我们需要找到啊。 定时器更新中断函数。 那就是在这里啊。 就是其实就是这这这个函数。 我们在这个就是它的回调函数。 更新中断的回调函数啊。 就在就是这个数我们在main中。 main函数中去写。 重写一下这个函数。 可以了。 其实原理其实整个过程的话。 大概就是呃它那个定时器达到触发中断的时候。 它就会执行这个函数。 这个函数的话它就会跳到这个函数体里面。 这个函数题里面其实有一个回调函数。 它会去执行那个回调函数。 假如说我们在may点C这边重写这个函数的话啊。 意思就是那个定时器中断触发的时候。 它最终会来执行一次这个函数啊。 我们在这个函数这里写一个判断。 这个是否是定时七二的重装。 啊咋说是要重写一下。 啊激素。 判断它是否是定时期二的。 然后四的话就加一。 然后面我们就可以把显示出这个结果指出来了。 再加点。 还可以显示它的计数值。 CNT就定时器的一个啊。 寄存器获取它定时器当前的技术技数值CNT。 然后编译。 要下载进去。 Time mit。 然后下载。 然后看一下相机这边。 好可以了哎这个没有进来吗。 我看一下。 哦这里写了两次。 这个弄错了。 这个复制的都复制错了。 这函数里面又嵌套了一个函数。 要把这个删掉。 应该是这样子。 刚复制的时候连这个也一直复制了。 我们再编译。 在这下载。 啊这时候就没问题了啊。 这个实现的效果可能标注部那边是一样的啊。 这个主要就是呃。 第一个难点的话就是要设置设置预分频器。 还有自动终端自由器。 使得它一秒钟触发一次更新中断。 然后第二个难点的话就是找到更新中断的啊。 回调函数找的办法的话。 一般是在it这边先找到这种i q handle了。 这个东西。 再去这个函数实体里面找到相关的啊回调函数。 把这个回调函数写到main c里面就行了。 然后就可以通过这个回调函数里面。 写相关的逻辑代码。 然后就可以实现这个一秒钟技术一次。 并且显示到OLLED的屏幕上。 好这个视频就到这里。
7. 哦现在开始录制下一个视频。 打开标准库应该是到。 总段也已经有了。 然后应该是定时器的外部外部时钟源选择好。 外部使用语言选择是什么意思呢。 之前我们用它的内部时钟。 做了一个一秒钟的定时中断啊。 他的这个时钟信号的话是由内部产生的。 就是72兆赫兹。 由这个外部使用原始的。 就是意思就是这个信号不来自于内部。 而是来自于外部的一个啊信号发生器啊。 这个方程器可以是可以是任何东西。 只要它能发出高低电平啊就可以了啊。 而这个套件里面最简单能发出高低电平的东西。 就是一个红外对射传感器。 先看一下这个地形图呢。 看下这个框图啊。 这之前定时一毫秒的话是用的是内部时钟模式。 然后传给十几单元。 然后后面就是让它啊触发中断之后自增一。 然后把它显示到OLED屏幕上。 然后这里嗯嗯这个视频的话主要是介绍啊。 这个模式就是外外界的g pi o啊。 设定一个外部ETR时钟。 然后外部时钟模式二。 然后啊把这个时钟信号给给到十几单元。 然后十几单元再输出啊中断。 然后这个呃就是啊标准库的原理。 然后我们打开标准库实现的一个效果。 啊直接直接编译。 下载。 然后看一下下载的一个效果。 然后这边挡挡一次就扎一二。 两次就扎二啊。 一直扎到啊十。 然后啊自增一。 然后就计数了一次啊。 然后是上面就是二。 这个主要是啊打一次底下这个数就加一。 这是定时器内部的计数器加一。 然后我设定的从自动重装寄存器是十。 就是说底下达到那个十的话。 这个就会触发这种段红色。 黄色这个字体的话就是啊触发中断的次数。 然后我那有里面有一个变量自增增加。 也要把它显示出来啊。 这个是标准库的嗯效果。 然后后面底下好。 底下我们打开啊。 help库的实现过程啊。 先打开外部使用这些选择。 新建一个文件夹。 用于重犯这个项目。 应该是七。 呃应该是。 就是ti。 ETR吧。 就外部的时钟ETR信号。 打开Q5I电音。 要也是在OLED的这个项目基础上修改。 名称的话就是外部时钟时间的外部时钟time。 然后存放路径就刚新建的文件夹。 又还是一样要把这个名称给拷上来。 重命名粘贴确定可以了。 然后就可以打开这个。 然后就可以按照我这边的步骤进行一个操作。 啊还是选择定时器2TIMO。 然后定时器二。 然后选择的是额外部C中ETR应该是。 N a e t r o。 还没选上。 好选了之后呢。 它这里就会这个引脚。 它就会自动增加在这里嗯。 然后底下我再看一下。 底下的话应该就是常数设置预分频器的话。 因为啊外部的信号。 这个高低触发电平我就不让它再降频了。 就原外部的触发一次的话。 内部就让他触发一次。 所以这个分频系数就填零。 D3的话分频次数就填零。 然后技术模式的话。 用线上技术模式。 然后自动重装制源器的话。 那边是用时。 因为啊这里也是用十。 EARLIBALL器分屏啊。 这个就可以先不用了。 影子寄影子寄存器的话。 这里也可以先不用。 啊还有底下篮框的设置。 就是时钟的信号的设置。 这个是对应标准库的啊。 这个函数使用外部时钟模式。 这里的话应该是直接用默认的就可以了。 啊然后就是这样的。 然后直接保存就可以自动生成代码。 后面直接就可以使用了。 在点may点C里面先死能定时器二的中断哦。 前面应该还有一个没设置。 这是第十期二的中断。 没有打开。 现在需要去补打开一次就定时器二。 然后这虽然设置了。 但是中断NVIC这里没打开好。 要打开之后就保存它。 让它重新生成一次。 在被压缩中打开。 打开定时器二的中断。 然后初始化第12阶段。 在这个地方。 啊死人。 中断输出啊。 这个够悬了呃。 这个中断定时器二的回中断函数的话。 那我就直接写了。 其实它是通过在里面去找到这个中断函数。 然后再到这个函数体里面。 去找它的回调函数的啊。 前面的这个啊通断总断掉。 总断这个程序中有介绍这种办法。 我就直接写了。 就直接写这个中断函数了。 直接找的话啊。 有一定的办法去找到这个函数了。 直接在这里may位函数这里去写这个中断函数。 然后中断的时候设置一个变量给它自证。 啊底下就可以直接显示了。 好编译。 下载。 诶打开一下摄像头啊。 这个已经下载进去了。 好我们挡一下看一下。 啊发现这个是没问题的。 好本身没问题。 但是这里还有一个小瑕疵啊。 这个就是我重启之后。 就程序刚下载进去之后。 我其实还没有碰这个啊。 对数传感器。 他这里计数就是一了。 其实这个问题他将谁那边也也会也会存在。 他是怎么处理的呢。 啊看到这里拉到这个抢谁的。 这个最后好。 每次按启动时候马上就计数为一了。 就是标准库这边啊。 因为影子寄存器的存在的话。 预分不计啊。 设置的时候的话。 它就自动去触发了一次这个中断。 所以在啊启动之前。 一定要在编程库这边要清空这个更新标志位。 对应在这边的话。 跳库这边也是一样的。 也有一个专门的是用来清除这个标志位啊。 就是在启动之前一定要调用一下这个函数。 呃就初始化之后。
8. 好现在该开始录下一个视频啊。 应该到下一个例子。 应该是PWM控制呼吸灯的。 然后关于PWM呼吸啊。 PWM的话先看下它的啊。 输入输入比较的一个理论知识。 pp的几个重要常数。 第一个是频率。 额频率的话。 比如说底下底下两个波形的话。 频率的话一个是啊。 一个周期是一毫秒。 一个是100ms。 它的频率是1200只。 还有12只啊。 用这个PWM的这个理论来说啊。 它等效出来的电压是一样的啊。 但是这个高频率的话。 假说应用到呼吸灯上啊。 它你基本看不到它的闪烁。 就是高低电平变化的时间太短了。 但是这就低频率的话应用到呼吸灯上面的话啊。 因为这个高低这个频率啊有点切换的有点慢。 时间太长了。 这肉眼这肯定是可以看到他那个明显在变化的。 所以说频率越高的话啊。 他那个应用到这个呼吸灯上面的话。 那它的效果应该是最好的。 你也看不到啊。 他的闪烁我只能过嗯。 让人的眼睛看的话。 他就以为他是由于视觉暂留了。 就以为他是以一个固定的亮度在亮啊。 但是低频率的话。 他就啊他就看到他一直在闪来闪去。 那这是一个频率的理解。 然后第二个是占空比。 占空比的话就是高电平的时间。 还有除以总的时间啊。 就是一个比值啊。 第三个就是分辨率啊。 分辨率的理解的话。 我们可以看下底下啊。 比如说嗯分辨率设置。 这ARAR是99。 CCR是49啊。 A r s2。 还有CCR42。 然后上面那种连波形的话。 占空比都是50%。 呃但是呢这个假如说应用到这个PWM波形上的话。 第一个AAR是99的时候啊。 分辨率。 它的分辨率就可以有0~99种亮度啊。 所以这个分辨率是1%呃。 底下这个应用到上面的话。 它只有两种值啊。 这要不就是012啊。 应该是三个值50。 它只有三角亮度呃。 这个波形的分辨率是50%啊。 意思就是说分辨率越高的话。 它就有啊。 越多亮度可以调。 分辨率越低的话。 它就只有啊。 这比50%的话就只有三个啊。 这只有三个亮度可以调。 应该说是分辨率越高。 应该是越好的。 啊然后底下呃是一个他的一个计算公式。 就是假如说我要求生成啊。 一个1000HZ占幅公比为50%。 分辨率1%的PWM波形啊。 如何算出它的一个参数。 好想看分辨率1%的话。 分辨率1%就先看这个公式。 前面这个就是1%啊。 然后有这个公式就可以得到a arr的值。 应该是99。 然后占空比是50%啊。 就看这个公式AI已经通过底下已经算出来。 然后占空比10%。 这个CCR也可以算出来是50%还是50。 应该是50嗯。 然后啊频率是1000HZ啊。 这个值是1000HZ。 然后这个啊这个已知就抵上AR已知。 然后呢输入的时钟频率啊。 假如说是使用内部的高速时钟的话。 这个其实只是二兆赫兹啊。 这个也也也也也是一致的。 所以就可以算出这个PSCPS1的话。 可以算出来是719。 好。 后面我们就通过设置。 这把这三个参数来生成一个PWM波形啊。 这个的这个规格的PWM波形来控制好。 呼吸灯好先关掉。 然后先看下标准库这边的实现的一个效果。 下载好编译。 要下载进去好。 打开摄像头看一下。 啊这可以看到这个呼吸灯能正常工作。 好现在关掉。 然后我们用啊help库来实现一遍。 这个功能在实现之前。 先打开我这边这个一个流程。 应该是呼吸灯啊。 后面我就按照这个流程来操作。 建立一个win文件夹来存放啊。 PWPWNLED吧。 要我打开cube爱电音。 还是在OLED屏幕的这个工程项目工程上。 做修改。 然后这边名字的话就用这个。 重放位置。 刚刚新建的文件夹。 二然后这个要重命名。 要把这个名字复制下来。 放到这个点IOC文件这里。 以后就可以进去设置了。 啊首先打开定时器的通道1PWM。 然后就是定时器二的使用的是内部的时钟。 还是使用内部的使用72兆赫兹。 然后通道一的话。 要要它输出PWM。 PWC加一哎。 这里就一直点不了。 对就是这个。 然后底下的参数的话就是啊生成。 刚刚已经算过了。 就直接写填进去就行了。 720-4。 720-1。 这个是PSPSC的值。 然后底下这个是100-1。 好D8-1就是AR的值。 要CCR的话啊。 默认是20。 这个可以先不用管。 后面可以通过一个函数来设置的好。 这个check先保存。 好这个已经生成一个代码了。 然后我们看下这个流程。 这边继续下一步啊。 找到启动PW的函数。 PW函数的话。 一般是在定时器的驱动函数里面找。 去移动函数。 定时器应该是定时器的驱动函数。 要里键找到PWM的启动。 在这边看一个它的一个大纲视图。 啊应该是这个。 看下是不是LTTMPWS大啊。 没问题。 就是这个。 然后在main函数里面调用这个函数啊。 初始化的值应该是在main函数中。 啊在这个之后啊。 再次让他启动启动它的一通道。 计时器的一通道生成p w on b型啊。 这时候调用了这个之后。 他PWM就已经在内部生成啊。 生成了之后呢。 我们要实现呼吸灯的效果。 那就是需要去修改它的占空比。 占空比的话其实就是修改CCR的值啊。 其实可以通过这个把这个复制到这里。 粘贴在这里。 然后就是通过这个来控制控制。 设置它的一通道的啊。 CCR的值好应该就可以实现了。 然后把它编译。 才下载进去。 哎这个好像是有点问题。 我看下。 是哪里问题。 I0到100。 是太快了吗。 我100ms看下。 还是太快了好。 我先暂停找下问题哦。 现在继续应该是没问题的。 我重新打开这个IOC。 然后再重新保存。 让它重新生成一次代码就好了啊。 一我现在我再再来看一下效果。 然后打开摄像头。 然后把它编译重新下载。 啊发现它是啊一个呼吸灯的效果来控制这个啊。 用PW来控制这个号ED。 好这个视频就到这里。
9. 好现在我们来录制下一个视频。 打开标准库。 这边应该是到PWM控制舵机。 UPWM控制舵机的话。 主要是根据P啊舵机的这个协议啊。 舵机这个协议他有好几个要注意点。 第一个是一定要是50HZ。 然后呃。 电电瓶宽度的话是0.5ms到2.5ms。 一直就是占空比只能是2.5%。 到15%。 然后通过通过这两个参数。 通过这个要求的话。 我们可以确定出一个合适的参数啊。 就是预分频器设置71。 然后ARR定定时器的ARR设置成这个数。 然后只需要对CCR设置这个的话就可以啊。 使得占空比是2.5%到15%。 然后就是这个上面这个图的话。 就是每个占空比对应旋转的角度好。 这个先最小化。 我们打开标准库来看下它的实际效果。 下载啊编译要打开摄像头。 然后杀展。 啊发现是没问题的。 我想把这个关掉一下。 太吵了。 然后现在我们用help库来实现一遍啊。 这个功能。 打开help co的说明文档。 然后PWM控制舵机。 我们就按这个流程来操作啊。 这个前面我已经列出来了。 就是刚刚说的那个啊。 PWN生成时设设置的几个重要的参数啊。 这个是根据啊舵机的这个要求来的。 通讯协议来的呃。 首先我们先在这里新建一个控制doge的。 攻击doge的文件夹P。 win door java就用它的拼音首字母。 然后再打开cube ide。 然后我们还是在OLLE这个项目基础上修改。 这个已经弄了好多次了。 直接提前直接操作。 要位置的话就放在我们刚新建的文件夹这里。 然后这个把这个名字给拷上来。 然后把这个名字修改到这里。 确定。 好首先打开定时器二。 慢照里面的这个步骤来啊。 选择PWM模式。 就底下的用。 现在这里用的是通道二。 通道二的话。 他应该是在pa1引脚前面。 呼吸灯的时候用的是定时器二的通道。 通道通道二的话应该是PA1引脚。 我们看一下选择内部时钟。 然后通道二失踪。 内部72兆的四种有通道二咳咳。 啊这里是通道号。 然后这里就显示这个名字在这里了。 呃DESIG就设置一下它的相关参数。 分预分煤气的话就是72-1嘛。 就是减一。 然后计数自动重装寄存器的话。 就是lea2万-1。 啊CCR的这个脉冲宽度。 我们可以先给定个默认值给它。 后面等会我们通过程序来控制。 有保存之后就可以生成代码了。 有找PW的启动函数。 应该是在驱动函数的这个文件里面。 定时器的这个文件里面去找PWM启动。 那应该是这个啊。 把这个函数调用在may中。 may中调用may点C中调用。 这个OLED的不要了。 然后这里是输入一个定时器的指针。 然后这个指针的话就是我们可以因为我用啊。 定时器二。 假如说不知道这个名字怎么写的话。 我们可以去里面去找一下。 定时器二的一个初始化啊。 就是这个它名字是就是就是这个名字。 然后我们把它拷过来啊。 因为是指针要抓到一个取地址符号啊。 这个是定时器的通道。 我们用的是通道二。 我们去里面看一下。 我们去前面看下。 应该可以找到一个通道二的。 哦这里就把这个通道二给拷过去就行了。 啊这个就已经完成了。 已就已经可以启动它的PWM了。 然后底下我们还要啊。 这个启动P的bl已经写完了啊。 还要写一个函数。 这个函数主要是啊输入个角度。 转换成它的一个啊CCR就是占空比。 因为通过。 因为我们可以通过需要想要的人角度。 来计算出它这个CCR的值。 而且设设置到PW里面。 PWM里面。 然后从而控制他的占空比。 那我们在前面找个地方写一下这个函数。 最后就写底下这段代码就可以了。 控制它的嗯。 应该还少了一个诶。 应该是这样的。 看下。 啊发现是没问题了。 我们把它下载进去。 打开摄像头。 啊刚刚那个被我拔掉了。 我再把它插上啊。 这个程序是啊。 标准库那边的是。 我想现在把它重新下载一次。 看一下。 正在下载。 啊发现我发现的话。 这个比标准库那边慢很多啊。 这个就是我们底下的这个问题与Q中对比啊。 我们把这个注释掉。 它可能就跟那边那一样快了。 我尝试下把这个显示到OLED的这个函数给屏蔽掉。 直接先先删掉吧。 啊快一点了啊。 标准库这边我看一下。 控制doge。 好这个只能是优化到这里了。 这个视频就先到这里。
10. 好现在来录制上一个视频啊。 先打开标准库。 应该是到PWM控制直流电机了啊。 我们控制直流电机的话。 是用这个tb6612F这个模块来控制的啊。 他控制的原理的话啊。 主要看这个图啊。 底下是节电机。 然后这边是电源啊。 PA4pa5来控制正反转。 然后这个PA0的话。 应该是用用PW量来控制它的速度啊。 应该这里应该是写错了。 不是PA0。 应该是PA2啊。 因为我们底下点一下真实接线的话。 它这根线是接到PA2的。 用的是定时器的第三个通道输出PWM波形啊。 第17的是第三个通道。 应该是PA2啊。 这个应该是写错了。 它怎么样的一个控制的一个方法呢。 PA4pa5固定一个电瓶。 那就是以及一个正转。 一个反转啊。 比如说底下pa4pa5。 比如说是这里啊。 pa4是低电平。 pa5是高电平的时候呢。 要当LBWM输出啊。 占空比为高的时候呢。 它就是反转。 然后为低的时候呢就是自动啊。 pa5是高电平。 当PWN输出高电平的时候呢。 就是反转。 当PWM输出低电平的时候呢。 就是自动啊。 所以说这个PWM在一直在。 这个占空比一直在变化的时候呢。 它是反转自动反转自动啊。 就是一直不断的切换。 假说占空比大的话。 就是反转的这个时间要比自动的时间要长一点。 所以他这个速度就快一点啊。 当你这个占空比小小一点的话。 这个高电平时间就小啊。 这反串的时间就小。 然后制动时间就长。 所以这个看起来速度就慢一点啊。 这可以通过这个PW来控制它的一个速度啊。 底下就是一个接线图呃。 要第三是没什么看的。 我们看一下。 用标准库来看一下它的效果。 P的实验。 它的效果我们打开摄像头。 然后把这个编译打开摄像头啊。 这个是接好线之后的。 要下载进去。 啊这个是控制它正反转好。 现在我先把这个关掉下。 这个太吵了。 好现在我们用help库来实现相同的功能。 先把标准库给关掉。 啊现在这边例子这边新建一个文件夹。 应该第四个例子PWN就垫几把。 用OTR吧。 用同样的办法打开cube ide e。 啊在这边打开的时候。 我们先打开呃help库的操作步骤。 嗯还是在OLED的这个代码基础上修改。 然后粘贴找到。 我这个是第十个。 重放位置放在这里。 重命名。 把这个名字拷下来。 然后把这个名字放在这里。 好然后就按照这个标这边的步骤来操作。 首先的话是呃打开定时器二的通道三。 用定时器二的通道三来生成PWM波形。 啊我们一个一个来试探玩家前面的呃。 那个呼吸灯是定时二的通道一。 它附着的I/O cos pa0。 然后控制舵机的话是定时器二的通道二。 他用的IO口是pa1。 然后这里用定时器二。 定时器二的通道三。 他的IO口音该是PA2好。 这个就跟前面方法是一样的。 用内部的适中。 然后用啊通道三通道三的话。 他这边就显示的这个PA2。 这个是没问题。 然后初始化正反转的g pro啊。 底下的这个定时器的生成P的变的相关参数。 用标准库那边是一样的。 A arr。 72+1。 然后这个是。 100-1。 然后CCR的话底下是给一个默认是20。 给他先。 好然后这个就可以了。 然后就初始化那个GPIO就是PA4pa5。 用来控制正反转的。 我们找到GPL的一个分类啊。 现在这边选PA4。 P a5。 A4的话是输出。 pa5也是输出。 然后应该是用推网输出。 名字的话就是我看这里的名字用什么放大一点。 P a 5motto。 那就这里。 P a4。 应该是用。 推广输出。 然后就是PA4NOTOR。 跟我这边一样的名字。 然后pa5也是啊。 推完输出没错。 PPA5NOTOROK这个没问题。 好然后就是找PW的启动函数还是一样。 在驱动文件。 从定时器的驱动文件中找到PWM的驱动函数。 应该是这个。 把这个拷贝到MC中调用。 把这个删掉放在这里。 然后输入一个定时器二的指针。 不知道名字的话。 可以去里面初始化的时候找。 应该是这个。 然后因为是指针的话。 需要取地址。 然后后面通道二假如说不知道怎么写的话。 也可以到定时器二里面初始化里面去找啊。 通道三又再回到编辑地方啊。 这个地方就是。 嗯还报错吗。 哦这个取地址写错了。 写在前面的。 OK没问题。 启动函数啊。 找到CCR函数。 就设置CCR的函数额。 其实的话是在驱动函数点H里面。 应该是哎不不不是上面的。 是这个time点H。 应该找到设置CCR的函数。 只设置占空比。 忘记搜出来吧。 应该是这个解。 看里面是不是有这个函数。 好没问题的。 这个是有。 按理说他这个点C里面也有的。 看一下有没有。 啊这里面没有啊。 啊不过没问题。 我们已经找到这个函数。 我们直接用就行了。 啊就是我们这边写一个用来控制正反转。 还有速度的函数。 我们先把它复制到MC里面。 好就随便找个地方放吧。 啊这个函数的意思输入一个速度。 这个是啊整形。 这个是有符号的。 这个可以除以一个正数。 一个负数。 假如说是正数的话。 就是设置啊通过pa4l pa5设置它的正转正转。 然后呢之后就可以通过设置这个占空比。 定时器二的通道三啊。 这个输入数就是他的一个占空比。 有底下这个也是一样。 通过PSPA5设置它反转。 有反转之后呢。 底下是设置它的啊。 速度啊。 因为底下这个是B是大于零。 底下是小于零的话。 这里一定要加一个负号。 因为这个数啊进去的话一定需要是正数的好。 后面就可以在main中调用了。 把这段控制速度的循环函数放在这里。 然后便宜。 嘿有错误。 看下什么报错。 难道我这个写错了吧。 这个名称网看去前面找一下呃。 GPRIO的定义应该是这个。 我们把这个拷贝下出来。 然后放在最前面。 然后去改一下他的名字。 应该是名字。 我这里写的跟前面我那个文档里面写的不一样。 所以他就报错了。 这个是p a s mot pin。 改一下PA5water pin。 好应该是没问题了吧。 好没问题了。 然后底下几个GPIOA也可以用这个来替换。 因为前面那个宏定义可能啊。 这样看起来它可能好看一点。 PA4要pa5。 而其实这两个词是一样一个东西啊。 P4PA5的都是GPLA。 好没问题。 要在编译。 我打开摄像头。 然后插上s st link。 要下载A编译。 然后把它下载。 唉检测不到s st link吗。 我再把它传上。 诶等一会我看是哪里问题啊。 感觉这里不对呀。 好我先暂停一下。 找下问题。 哦找到问题了啊。 先看一下效果。 等下再思考问题啊。 这个是没问题的。 然后刚刚为什么不行呢。 刚刚我这里填错了。 就是那个嗯这里有点卡住了。 啊这刚刚这里没保存下去。 这里应该要按照之前的那个标准库。 那边来写成100-1的。 刚我这里写成了65535。 没保存下去。 所以他就啊那个效果跟那边不一样。 现在是没问题了。 好这期视频就到这里了。
11. 好下面来录制下一个视频。 先打开标准库。 这边应该是到输入捕获了。 输出比较就是生成PWM波。 已经啊这几个例子已经啊演示完了。 现在就到输入捕获啊。 什么是输入捕获呢啊我们看一下这个框图。 这个框图的话右边这部分啊。 就是前面章节啊。 用了这个输出比较深的P的PWM波的原理。 就是右边这个左边这个就是黄色。 这部分就是输入捕获。 输出比较的话。 意思就是啊这里设置一个比较值啊。 就比较寄存器。 比较寄存器里面设置一个值啊。 它每时每刻都与这个呃。 定时器的CNT的这个值进行比较啊。 由于这个CNT的值的话。 它一直都是自增的。 然后自增到这个重装重装寄存器的话啊。 等于它的话它要从零开始啊。 就是这样重复重复重复。 从零到计算器。 由寄存器啊。 到计算器之后又从零开始啊。 这个比较器的话。 就是一直跟这个计数器进行比较啊。 当达到某一种啊条件的时候。 比如说这个寄存器的值大于CNT的值。 或者说寄存器的值小于CNT的值的话。 他就输出一个电瓶啊。 假如说啊比如寄存器的这个值大于CNT啊。 就是输出高电平。 小于CNT的话就输出低电平。 所以在CNT自增到重装寄存器的这个过程中。 肯定有一个大于的时刻。 肯定有一个小于时刻。 然后这样就可以输出一个高低电平的一个波形。 这个就是输出比较的PWM波形输出的原理。 然后左边这部分呢就是输入捕获。 输入捕获的意思就是啊他这边有一个通道。 定时器的某个通道。 这就是一个某一个IO口啊。 比如定时器二的就是PA0。 PA0端口输入一个信号进来啊。 经过滤波滤波器啊。 滤波器之后。 它这里又分为FP1FP2信号好。 我们先看这个FP1FP1的话。 就啊输入到这个捕获寄存器这里啊。 当由上升沿过来的时候呢。 他就会把计数器当前的计数值啊。 保存到第二个捕获寄存器这里啊。 把这个数记录下来。 就每一次上升音啊。 比如说上升盐的话。 都会把这个计数值更新到啊捕获寄存器这里。 这个捕获寄存器还有比较寄存器。 其实是同一个寄存器啊。 在输出比较的时候就叫做比较寄存器。 在用用于输入捕获的时候。 就叫就叫做捕获计算器啊。 只是他是同一个寄存器。 所以说呢同一个定时器的同一个通道。 它只能用一一种功能啊。 要不你就用啊。 输出比较用于输出PWM波形。 要不你以后就用啊。 输入捕获用来捕获这个计数器的值啊。 这个就是输入捕获的这个框图。 然后底下这部分的话就是呃。 用于用利用输入捕获。 来测测某一个波形的频率啊。 比如说有一个外接波形接入到啊PA01交啊。 然后我们就可以用定时器的这个通道。 一定时器的通道一来。 LINUC动态液的输入捕获功能来测这个频率啊。 它主要的原理就是用来捕获。 用用这个捕获寄存器来捕获啊。 输入波形的上升沿啊。 上升沿的时候记录一下CNT的值。 然后下一个30年也记也记录一次啊。 CNT的值记记录在这个啊母或寄存器里面。 假如说这两个值我都知道了。 那中间寄了多少次。 他次数肯定也是知道的啊。 就上升延就一次。 下一次上层岩也就一次两次。 上层岩的计数的差值。 就是它的中间的一个个数啊。 但是由于啊由于这个定时器二的话。 我们这个计数值呃。 呃这个预分频器还有自动存重装寄存器。 这值都是一致的啊。 然后通过一个公式的话。 就可以啊算出它这个频率出来。 那中间有多少次。 然后每一次的时间都可以算出来的。 然后所以他一个两个三层之间的时间。 就可以通过这个公式算出来。 额这个是输入捕获。 然后我们再看啊。 底下这侧轴法测频率就是刚刚说的啊。 这个里面说的更加详细一点呃。 就是外界信号进来。 然后的时候呢。 然后经过这个滤波器给到FP1。 然后啊捕获。 然后捕获加上升沿的时候。 就会把当前的计数值捕获到寄存器这里啊。 第一次补货。 然后啊他还有利用一个重模式功能。 就是就是捕获完之后呢。 他要把这个计数值清空。 为了下次捕获做准备啊。 这个他是怎么清空呢。 就是啊利用它这个FFP1信号上面。 走上面这条路。 从模式啊。 这个是硬件自动完成的。 就是只要你配置一下就行了。 就是它捕获到值之后啊。 他们是应该是有顺序的。 就捕获到值之后。 他再用这个重模式把前面的这个清空啊。 就把重模式设置为啊铝线清空模式的话。 它就会把计数值重新清零啊。 就是捕获到一个值。 然后清零清零之后到下一次30元的话。 再捕获一个新的值啊。 然后再清零啊。 捕获到这个值的话。 其实啊。 所以说这个捕获寄存器里面捕获到的这个值。 就是两个上层人之间的CNT值的个数。 然后我们再由这个频率啊。 这个预分频器还有输入的频率啊。 再结合这个个数。 就是捕获寄存器里面这个数值。 通过上之前那个公式就可以算出啊。 这个啊截在pa平均角上的啊。 嗯频率了。 这个信号的频率了啊。 他的热点图的话大概是这样子。 就是首先的话一个上层人就会把定时器。 当前的计数值给到CCR。 就是捕获进容器这里啊。 给到之后。 然后利用它的重模式也会把计数值清空。 然后下一次的话也是把啊清空之后。 他又那个定时器的计数值。 它又是啊慢慢往上增的。 自增自身的话。 他下一个上升沿的时候又捕获一次又清空。 所以说这个CCRE的这个值的话。 就是两个上升一之间啊。 计定时器的计数的个数啊。 有这个CNT加就是他的一个个数呃。 有没有这个数就可以算出它的频率来了。 就结合定时器的预分频器。 还有输入频率。 这个是接线图。 因为我们没有外界信号啊。 我们只能说是通过定时器二生成一个波形。 给定定时器三来turn来测它的信号。 假设有外部信号源的话。 也可以用外部信号源现。 但是我们没有这个外部信号源的话。 就用定时器二的通道一。 就是PA0引脚生成一个PWM波形。 然后给定时器三。 应该定时器上的应该是通道一吧。 然后呃给他P6。 然后测引桥。 呃生成波形底下是生成波形的一个代码。 生成的话。 以我们前面已经生成PWM的时候已经说过了。 就定时器二的。 定时器二的通道一生成一个波形。 然后这里的话就是错的话。 就是用定时器三的通道。 而定时器三的输入捕获功能的话。 就这里是配置重模式的。 由电器三就T3来测定时器二的一个频。 那个P的边波的频率。 呃底下的话应该没什么了。 我们直接看下效果吧。 啊底下这这底下应该是这个测频率的好。 这应该就是到这里。 然后我们看一下它的实际效果。 补号频率。 啊下载和编译。 我打开摄像头。 刚我已已经那个已啊弄了一次了。 我现在才下载。 我刚已经下载过一次了啊。 所以说啊这个就是1000HZ。 我这边生成的就是1000HZ的PWM波。 这时候我改一下这个把它改成啊这个了。 这个应该是100HZ吧。 我再编译就是用定时器或修改定时器二的呀。 预防频次的值啊。 这个应该就是100HZ。 这个是没问题的。 啊这个啊标准库是这样写。 这边的标准库就说到这里。 然后后面我就用啊cube i d e来实现一遍。 这个功能在实现之前的话。 我们先打开步骤。 操作步骤就是测走反测频率。 首先我们在这边例子这边新建一个文件夹。 应该是12。 嗯是哦。 之前我新建了一个。 这里。 我把这个项目给删掉。 重新来过。 啊就是以这个定时器检测频率。 这个然后打开cube i d e。 Qvide1。 然后在OLED的这个项目上基础上修改。 暂停。 然名称用这个定时器检测频率路径。 复制。 就这个。 然后再复制下他的名字。 把这个名字也改一下。 哦现在可以了。 首先的话我们生成一个待测波形。 用定时器二生成一个待测波形啊。 就是这一步嘛就用定时器二嗯。 看一下用定时器二生成一个待测波形。 定时器二的通道一。 我们先选中定时器二。 时钟的话。 用内部时钟通道一。 生成一个P代表前面的生成B的边坡。 已经说过了。 我们直接选就行了啊。 这个为什么老是选不上呢。 好选上了。 那就是pa0引脚这里嘛。 然后底下设置它的啊。 顶上设置它的相关参数就是720-1。 然后底色是啊。 100减一二十。 脉冲宽度用想用20呃。 720-1的话。 就是1000HZ。 就是把72兆赫兹降落到1000HZ。 好这个就可以了。 然后我们把它重新上。 我们先把生成信号的这个先写完。 然后我们在里面启动一下这个PWM波。 第17P的RA波生成。 就可以生成它的P的rain波形了。 在MC这里把前面RO份删掉。 好到这里的话。 他pa0引脚其实就可以生成一个啊。 1000HZ的PWM波形了。 额然后呢下一步根据这本来应该就到定时器三。 用电机器用定时器三来啊。 检测刚刚那个波形。 然后还是打开IOC这边。 然后是。 定时器上也是使用内部模式。 内部时钟。 然后用。 通道一的啊。 input啊。 就是这个啊。 输入捕获。 输入捕获。 输入捕获模式。 收不好。 然后呢啊刚刚还说了一个重模式用于清空的。 它重模式是什么呢。 就是用来清空啊。 我们就选择这个模式就行了。 Please slia check sauce。 底下的话还要选择一个重模式。 真空重模式的鹰角TPEFFE。 就这个。 啊前面已经那个框图那里已经说了。 用FP1的从这个信号到重模式啊。 他会到重模式面。 重模式是主要是用于清空的。 可以先打开这个框图。 看一下它前面这个部分的参数。 主要是设置框图的。 这里定时技术播放。 表轮廓这边才有这个框图啊。 就是这里TFP1信号进来到F1。 F1到主模式。 主模式用于清空。 就是reset的这个model啊。 这个里斯model p1铝色model内部时钟。 然后通大一啊。 通道一的话就是已连在pa6这里。 所以说我们接线的时候。 就把pa0的引脚用一根线连到pa6。 就是PA0生产的PWM波。 然后给PA6引脚来测。 然后底下的参数的话就写啊。 72+1。 这里。 想喝这个65535天一。 啊捕获就捕获这个参数设置了。 我们还要打开一个终端。 输入捕获的终端。 就是它捕获它信号时候就会跳入那个终端。 好我们先打开这个终端。 这里全局终端把这个打开。 要中断。 打开之后呢。 OK就可以保存了。 这个部分就设置完了。 记住我的决定。 每次都生成代码。 好我们已经配置完之后。 就每次捕获的话。 他肯定会肯定会进入中断。 我们现在就开始找那个终端。 这个总道怎么找呢。 因为我们之前已经勾选为每个外设。 生成一个点C的代码。 所以说中断的话应该是在这里找。 我们看一下这里有没有那个中断。 啊有定时器三的iq handler。 我们去点也可以接。 把你那个判断写在这里。 但是为了那个啊方便的话。 我那个去找那个回调函数的办法吧。 先找到先进去里面。 先找到那个回调函数。 按住CTRL键进里面。 看这里有没有。 应该去点这个对应的点C文件上面找。 点这个点C应该在D上。 启动函数。 定时器点C这里。 啊呃通过那个中断的话。 他会先来这里IT点C这里执行这个函数。 然后这个函数要跳到这个函数这里。 所以我们在这里找所有捕获的回调函数就行了。 应该是网卡撒。 CTURE啊。 应该是这个啊。 应该是这个就是他的啊。 回调函数input catcher。 我看是不是这个TIMIC对。 就是这个函数我们就已经找到了了。 我们找到它。 然后再搜索下。 看一下它行。 它的函数原型。 啊。 就这里我们在may点C中。 重新定义这个函数就行了。 就可以直接用了。 在上面找一个空白的地方。 啊就是捕获到值之后。 它就会跳入这个函数。 我们再看下这边。 啊我们这个把这个函数的处理写在这里。 假如说是定时器商的捕获进来的话。 它就直接提上底下。 这里就是啊第一个就是获取定时器的啊。 捕获到的数值就是这个就是捕获到的数值信号。 进来的时候捕获到的数值。 然后底下这个是啊定时器上的嗯啊预分频器啊。 还有输入的频率。 然后通过前面那个公式的话。 就可以直接算出啊。 带小波形的频率的大小。 波形的频率就是这个啊。 这个地方要加一那个简写那边的代码。 标准库那边也是一样的。 它也是需要加一要不得出的标。 那个波形的话好像是好。 等下就不得出的。 不是整数。 不是1000啊。 这所以这里要加一处理啊。 所以这里就算出嗯。 一个完整的完整的完整的这个频率的。 后面我们只要显示出来就行了。 显示的话我们就打开这里啊。 还要找到这个代码。 就是打开中断了。 因为你写的中断。 那main函数里面要打开这个初始化。 这个中断才行啊。 地机器三的中断。 前面定时器二的。 这个开始的话是用于那个生成PWM播了。 然后这个呢用总动的模式。 it总动的模式打开DC c3的通道。 然后后面就可以直接显示出来了。 要直接显示它的频率就可以了。 这里然后编译我们打开摄像头看一下。 下载。 看一下。 啊A啊也强制没问题。 这个啊。 所以这个是实现的跟标准库它表一样的功能。 它主这边主要是利用了这个定时器。 三的一个中断原理的话。 跟之前的标准库是一样的。 想在这个中断里面捕获到数值之后。 马上去获取啊。 捕获它的这个计数器的值。 然后通过啊dc3的输入的频率。 还有设置的预分频器就可以得到啊。 每每一次计数的耗时。 然后每一次注册的耗时的话啊。 再乘以他的个数就可以得到时间。 时间的倒数的话就是它的频率啊。 就是通过这个来算的嗯。 好这个视频就先到这里了。
12. 好接着我们录下一个视频。 打开标准库的呃。 这边然后应该是到测占空比了。 前面是用测PWM波的啊频率。 然后这里就是用测它PWM的占空比。 这是原理跟前面是一样的。 我们打开看一下啊。 啊前面测PWM波的频率的时候。 就是走紫色这条路线。 然后信号进来。 假如说一个上升沿的话。 就会把当前计数字的值记录到啊。 捕获寄存器这里。 然后记录下来之后呢。 他又通过上面这条路的话。 就是定时器的重模式。 把这个计数器清零啊。 这个就是前面说的输入捕获测走法来测频率。 这个是两个上升沿之间的捕获值。 就记会记录到在这里记。 记录在记录在捕获寄存器一啊。 现在要测它的啊。 占空比。 那我们还要测一个下降沿。 所以这里就打开了一个通道二。 用于测下降沿的啊。 你也可以嗯把那个待测信号接到。 接到这里当不错。 上建炎。 但是这个没必要。 因为它本身就已经考虑到了这种情况。 就是啊用通道二的时候啊。 外界的信号也可以从通道一上面下来啊。 只需要在程序里面简单配置一下行了啊。 他是在标准库那边怎么配置呢。 比如说啊这里的通道一。 通道一用的这个信号的话是啊质量模式啊。 直接的直接模式啊。 他的意思就是说这个比较基准器的通道一。 和捕获基准确的指标一的这个信号的话。 他是用质量模式。 就是直直过来啊。 从这边过来的啊。 然后我们看一下通道二。 通道二的这个模式的话。 它是用交叉模式啊。 意思就是说它通道二的一个啊用的是交叉模式。 交叉模式就是它不是直连模式。 而是走上面的这个路。 就是底下这个青色这里啊。 这个是交叉模式。 假如说用直连模式的话。 他也是从这边过来的。 但是我们用交叉模式行了啊。 就是用脚踩模式走上面。 上面这个比捕获的话就捕获砂浆岩。 然后前面的话就捕获上层岩啊。 这个是上两个上升沿之间的一个计数值。 然后底下就捕获一个上升沿。 到一个下降沿的计数值。 这两个比值就是占空比好。 这个就是它的一个原理。 我们打开标准库来看它的啊。 效果。 变一。 下载啊。 这个是没问题。 然后就是我们改一下这个占空比48。 啊是没问题的。 就是说你可以通过修改定时器二。 生成的PW模型。 然后在第十七三这边。 它能检测出来的这个结果是一样的好。 现在我们就用help库来实现一遍这个功能。 先在这边新建一个文件夹吧。 刚刚是11。 我们就在应该这里就是二了。 我这个再找到一个。 我就1TY吧。 帮我打开Q8电影。 啊我们在频率这个基础上检。 检测频率这个基础上修改coffee。 暂停。 然后呢就用这个。 这个这个存放在这里复制。 然后复制一下这个名字。 然后改一下。 好我们在检测频率那个基础上修改。 然后打开Q8DE。 要我们跟着里面这个例子来操作。 应该是这个。 嗯定位到这里。 啊首先我们要打开天极三。 因为DDC3的通道仪是用于测频率。 由稳定时器二的啊。 通道二的话就应该就是测他的一个占空比。 也是用。 啊也是用这个输入捕获的啊。 这个模式。 然后我看底下还有什么要注意的啊。 它主要是用来捕获下降岩。 底下的话要参数。 这里要设置通道。 二是用来检测插件严的。 啊这个是放大一点呢。 这通道一上升源码。 然后这个用来检测下降沿啊。 这个就设置好了。 然后保存。 生成代码我们还要通过代码来启动一下通道二。 通道一刚刚已经打开过了。 然后我们通道二要重新在这里打开一下啊。 计算占空比的话。 其实就是我们多增加一个一行代码就行了。 就增加几行代码就行了。 我们改一下这个函数。 这个。 啊假如说第十期进第十期三进来的啊。 输入捕获就执行底下这个段代码嘛。 然后前面这部分的话就是算它的一个频率啊。 这个capture1。 应该再定义一下这个。 啊这个capture的话。 就是这里就是通道已捕获到两个上升沿的个数。 然后底下这个的话就是啊检测是下降沿。 这通道二的话。 通道二的话是检测下件盐的。 检测上件炎的时候也获取了他的个数。 两个两个之间的个数的比值。 就是下降盐的个数除以总的两个上限。 减个数再乘以100。 就是他的啊占空比。 我们已经计算完了。 需要显示出来就可以了。 底下的话直接显示一下就行了。 应该是这里。 直接把它显示出来就行了。 好我们编译。 沙仔。 哎0%吗。 我看下哪里出错了。 哦我先暂停一下。 找到问题哦。 找到问题了。 刚刚犯了一个错误。 就是我们通道二的话要用交叉模式。 而不是质量模式。 就刚刚这里没选D43的通道二。 打开一点。 电气三通底下通道二的话啊。 通道一是用直流模式吗。 通道二要用交叉模式。 呃这里就选错了。 应该要用交叉模式DISS啊。 这里就要选择交叉模式。 这个是直连模式。 然后的话底下自动帮你选择交叉模式了。 插件也检测好。 现在再来保存一次。 啊这次应该是没问题了。 这直连模式跟交叉模式那里选错了。 啊这个是20%。 我们可以通过一个函数来改一下那个占空比。 就定时器二的占空比就通过这个吧。 在前面我们改一下它的电器二的占空比。 就设置它的一个啊输出比较寄存器的值。 我们设置50吧。 然后看一下。 下载。 啊这个是没问题的。 也可以改下频率。 也可以通过上面这个改频率。 也说我改这个电器二的频率。 啊这个是。 七二这个是那改一下。 它应该是对应显示的。 这个是一一千赫兹。 我看是改成这个是多少。 他说是1万赫兹cos是不是1万。 啊这个没问题。 只要时候预分频器我再改大一点。 这个应该就是1000HZ。 好没问题好。 这个视频就到这里了。
13. 好下面来录制下一个视频啊。 这个视频的话应该是对前面视频做一个补充。 前面的话是呃。 录制了一个叫做用定时器输入捕获。 测频率的一个方法嗯。 里面用到的定时器的重模式。 还有输入捕获两个配合起来的话。 就可以测出一个波形的频率嗯。 这一节视频的话。 就主要验证一下定时器的重模式。 是否真的会清空那个定时器的计数器。 我们打开这个啊。 定时器它的一个重模式就上一节视频说的。 它信号进来之后。 它这里分为两个分路。 一个分路是给定时器的重模式啊。 重模式的话主要用来清空计数器的值。 要另外一路的话输入进来啊。 可捕获这个计数器的值。 它是先捕获。 然后再清空计数器的值。 它是有个顺序的。 它清空之后它还会触发一次中断。 点下我们的代码就可以看到。 看到它的一个效果了。 呃好我就按这个步骤来来验证一次这个重模式。 reset这个模式的话。 它清空计数器的值的一个实际效果。 先打开呃一个文件夹。 然后是应该是第13个例子。 T a i n r timer。 啊定时器从模式的离线离线模式。 然后打开Q8.1。 有点慢哦。 可以了。 还是在OLED的这个项目上修改。 这个就直接操作了。 哎错了。 删掉这个。 名称的话就用这个。 微字。 这里复制一下。 聪明明唱的。 哦可以了。 好我们按照这本这个步骤来啊。 第一个的话用的是定时器三。 因为前面的输入捕获用的也是定时器三啊。 定时器三。 然后使用内部时钟。 然后这里的信号是先选上面的。 用。 A好是选不上从绿线模式。 然后底下的话用的是TPLFPG信号啊。 这个结构就跟都跟前面输入捕获的设置。 是一样的嗯。 要设置一下定时器的相关参数。 设置PC为3600-1啊。 这个设置多少都可以啊。 只要为了方便后面看到一个效果就行了。 只要他这个定时器运行快慢而已。 三零我就按照我这个里面来声明。 因为我主要是想看到一个啊。 效果就是铝下model下的嗯。 对计数器计数清空的一个效果。 好可以了。 然后这样的话它的预期溢出周期就是一秒。 就是一秒钟的话。 它就会啊重装砸一次就会触发。 也会触发一次中断。 然后计数器的话就从零增加到啊2000。 然后就会触发一次移除熔断。 就会啊就会时间周期就是一秒。 然后要设置下滤下的这个摸头是上层岩啊。 这个已经选了上层岩了。 底上滤波石呃。 给不给都没太大关系。 我这里还是按我这边来给我给个15的。 好可以了。 哦这个已经生成代码了啊。 然后这里就打开M点C上面就打开它的啊。 一个中断。 通过中断啊。 还要打开一个中断。 因为前面说了。 它自动重装载的时候。 计数器到重装值的时候。 它会触发一次中断。 还有一个的话就是嗯这个reset model给信号。 同模式的时候。 他也会进入一个中断。 所以我们要先打开这个全局中断。 好这里就勾选上中断。 意思就是说啊死人。 这个中断下。 我们再爬虫代码。 然后还要再魅点C里面启动一下定时器。 用中断的模式启动定时器啊。 就是调用这个函数。 啊然后再找到中断中断的回调函数。 中断回调函数嗯应该是嗯。 我直接写吧。 就是这个就是它的中断函数。 直接把它卡到这边来。 啊放在这里。 这个是中断的回调函数。 它第一个自动重装才也会进入一次终端。 然后的话啊那个reset model他传给重模式。 reset的时候的话。 清空计数值之后。 它也会进入一次中断。 所以首先我们要判断是定时器三进来的中断。 后面还要做一个判断。 是啊re线模式进的冲动。 还是自动重重才进的中断。 假如说离线模式进了中断的话。 我们要把这个所需要手动清空那个标志位。 假如说自动重装载进入中断的话。 就这个变量指针一这个应该一假说不嗯。 正常模式的话是一秒钟进入一次的。 然后后面我就打印出计数值。 还有啊这个重装材之后。 它自增变量出来看就知道了。 要我打印这个。 好三变一。 啊下载。 啊SADI。 啊这个就一直往上增嘛。 自增。 然后我去把它这个挡住的时候。 看一下它的效果。 喂这个盖子不行。 我要找个黑色的东西才来。 哦这个啊对手传感器咋说不碰它的话。 这个一直是往上增的。 增大的时候他就啊触发中断。 然后更新一个事。 更新事件。 然后回触发回调函数就调用。 走的是这个路。 然后假如说我碰它的时候啊。 这个计数器就一直清零。 清零的话。 它就达不到重装重装载值。 然后上面的数就不会增长啊。 比如说我挡住它的时候。 这个数就一直清零啊。 前面上面那个黄色那个数就不会增加了。 因为我每次打一次的话。 它会从零开计数啊。 这样他永远都达不到重装载值。 找我放开啊。 它达到重装载值之后呢。 他这个黄色这个数又自增了啊。 这个就是它的啊reset模式啊。 离线模式的话。 它主要就是嗯呃可以自动清空计数器的值。 这是硬件自动清空的。 它不需要软件清空。 因为我们里面都没有写啊。 清空CNT的这个代码啊。 它自动清空。 清空之后它会触发一个中断。 然后中断的话会来调用这个函数。 好这个这个视频就到这里了。
14. 好现在来录制上一个视频啊。 这个视频还是一个补充嗯。 就是定时器的其他几种模式。 就是前面的这个重模式已经说了。 就是跟重模式一样的。 其他几种模式。 第一个是门模式。 第二个是触发模式。 第三个是单脉冲模式。 我们先打开啊。 前面的reset模式的话。 就是收到信号之后呢。 他会把定时器当前的计数值清空清为零。 幽门模式。 门模式意思就是假如说啊碰到某个电瓶的时候。 这个计数值会停止计数。 然后啊松开在另外一个电瓶的时候呢。 切换到另外一个电瓶的时候呢。 它又开始计数啊。 就是啊像个门一样。 就是关上的时候他就进不计数。 打开的时候他又就开始计数。 这个是门模式啊。 驱狗模式啊。 就是刚启用定时器时候。 他不计数啊。 当他给一个上升沿给它。 它就开始计数。 就是让它启动。 它只是在启动一瞬间有效。 然后面无论你怎么给信号的话。 它都是无效的。 就是啊刚启动程序的时候。 定时器是不计数的。 你给一个信号给它。 它就会他就会开始计数。 然后计数要达到重转值又重新计数啊。 这个只是刚启动的时候有效。 然后第三个是单脉冲模式。 当脉冲模式的话。 就是它每次到重装载值的时候呢。 它就会停下来啊。 就会停下来。 每次到达啊。 只要到达一次。 它就会停下来。 所以第二跟第三种模式的话。 一般是配合使用的。 这个是控制它启动。 然后这个的话是控制它停止啊。 就是说他启动之后就是说碰这个触发模式。 碰给上升沿它它就启动。 然后到达自动重装载值的时候啊。 由于使用了当脉冲模式。 他就停止计数啊。 停止技术时候。 我再给一个30人也给他。 他又开始计数。 就来回这样啊啊循环的啊。 又停止又启动。 又停止又启动。 这个是通过外界一个信号给它来控制的。 好现在我们用用那个来演示一遍门模式好。 先打开Q8D。 好我们再新建一个文件夹来存放。 这个测试例子应该是第14个。 叫的TIMA。 cube ide1打开了之后。 就在这个项目基础上修改。 就上一节视频说的reset model的基础上修改。 然后这个把这个名字获取上来。 改到这里。 哦错了。 应该上面那个选错了。 重命名。 把它粘在这里。 要打开这里。 打开IOS配置页面。 定时器三到地址三。 这里我们按里面的这个步骤来操作啊。 还是把这个重模式设置为门模式。 gate模式就需要在这里选择哎。 Gate mol。 选择gate模式啊。 然后底下的参数就不变啊。 中断还是打开。 看他是否在门模式的时候。 有没有打这个触发中断啊。 只是门模式它是不会触发中断的。 它只有自动重装载值的时候好。 才会触发那个中断啊。 这个就是改完了。 我们保存代码就行了。 啊may点C里面已经对定时器已经进行过启动了。 因为我是在啊啊离线模式下的复制下。 那个代码上基础性修改的啊。 已经启动了。 但中断这里的话就不需要判断啊这个这个了。 留下了。 因为因为的话在门模式下的话。 他是不会触发这个中断的。 我们把这个删掉就行了。 只是在自动重装载值的时候。 它会啊触发中断。 然后调用这个回调函数。 好这个就可以了。 我们下载啊。 编译。 然后塞进去。 打开摄像头。 哦我看下。 哦下载进去之后呢。 发现啊这个是停止的状态。 但是这个计数值已经是一了。 这跟前面的那个啊情况是一样的。 建协那边也遇到了这种情况。 就是要在啊要要要在初始化定时器之后。 要清空一个标志位。 我看下找下那个标志位在哪里。 应该顶上有吧。 好就在这里。 我们先把这个标志位给加上。 应该是SELLY第十次初始化之后。 启动之前清空这个标志位。 他就不会去触发一次中断了。 就就不会去调用一次这个函数了。 就我还没启动的话。 它它就调用了一次。 所以我这个计数值就是一啊。 现在是没问题好。 现在我去碰一下嗯。 这个感应器啊。 反正他技术没问题。 松开的话它就暂停了。 碰一下它就启动啊。 只能说我啊需要返现怎么办呢。 就现在是放开的时候。 他是停暂停的啊。 碰到的时候就继续。 这是我要把这个逻辑给反杀。 就需要修改一下里面的这个电瓶嗯。 重模式的这个电瓶上降烟。 然后保存下代码。 编译。 下载。 啊这个是一级技术了。 我碰它的时候就暂停。 放开的时候就启动暂停启动暂停启动啊。 这个就是啊门模式可以控制计数器的暂停。 还有启动好。 这个就是门模式。 我们接着下一个模式啊。 触发模式。 触发模式就是控制啊定时器的启动。 刚开始的时候默认的时候他是暂停的状态。 假如说这里给一个上升沿给他的话。 他就启动嗯。 哦前面还有一个漏漏墙了。 就说门模式的情况下呢。 他有设置啊中断标志位。 但是不会触发中断啊。 不会触发中断。 它是有设置这个中断标志位的。 所以啊严谨一点的话。 我们应该要手动在main里面清空一下。 他的这个标志位。 所以效果是一样的。 只不过说我们这样写的话会更加严谨一点。 把它的标志位也一起清空掉。 啊效果跟刚刚那个是一样的。 一模一样啊。 这里就不再看那个了。 然后接着看触发模式。 触发模式控制它启动了。 闷在里面找。 啊这门模式。 然后选择触发模式。 啊嘶啊啊。 直接选这款模式吧。 不用再兴起一个项目了。 就改一下就可以了。 然后偏移下载看一下它的效果。 啊这个是没问题是吧。 他启动的时候是暂停状态。 我碰一下它就启动了。 上层已启动。 这个是没问题的。 就后面无论我怎么碰的话。 它就没效果了。 所以说这个是首次有效。 就它只有效一次。 就刚刚开始送控制。 它启动了。 触发模式。 呃我们选上升研吧。 现在的这个效果是。 放下去的时候没有。 放开的时候有我们设置成它下降的时候。 有上升的时候没有。 这样吧。 改一下这个电瓶状态。 把这里。 改成上升沿。 要再八村。 就刚碰上的时候。 我就让它启动。 而不是放开的时候。 啊我放上启动了啊。 这个没问题啊。 这个就是门模式。 还有一个嗯触发模式好。 第三个单脉冲模式。 这是控制它停止的。 就到达重装载值的时候就停止。 就从零计数。 是从0~1000的话。 正常来说它会啊。 它会自增自增一。 并且的话从零继续又开始计数。 这样说打开大脉冲模式的话。 它就到重装置。 重装值的时候。 它就会又变成零。 但是不会啊。 继续往上增了。 继续往上增啊。 大概这个大脉冲直勾上这个就行了。 要保存。 编译下载。 好我们看下效果。 放下去的时候启动好。 等到自动重装载值的时候就暂停好。 我放开再放下时就启动啊。 放弃启动一次。 启动的话是通过trick model触发模式控制它。 自动的暂停的话是单脉冲模式控制它暂停了。 啊这个是没问题。 啊中间假如说我多碰多次的话。 也是一样的啊。 这个就是定时器的三种。 是应该说是四种重模式。 这里三种加上前面的啊铝线复位模式。 总共四种重模式。 好这个视频就到这里了。
15. 好下面来录制下一个视频。 先打开标准库这边嗯今天应该是到嗯。 定时器的编码器接口。 这是定时器的最后一个内容了。 定时器编码器接口。 前面在中断的时候也用了这个编码器。 但是这里用的话主要是啊。 根据根据它它的一个原理。 就是1111个信号。 比另外一个信号快半个周期。 这个原理就两个中断。 来算出他的一个中断的一个次数的啊。 前面是通过中断的方法来利用这个编码器。 然后现在这里就用定时器里面专门定制的一个。 编码器接口来使用它啊。 然后这个规律还是跟以前一样。 就是啊一线性要上升沿的时候。 去判断另外一项是高电平还是低电平。 假如说比如说像这里是低电平的话。 那么它是症状。 假如说这个在上升演的时候。 另外一现在低电平的时候。 他就是反转嗯。 他不单单是可以知道他症状还是反转。 还可以技术。 比如说上升沿的时候。 它在低亮屏。 它可能是可能是往正转。 就记一次正数。 然后啊B线信号上升沿的时候。 A线信号高调频的时候。 他又记一次数。 就地记录在定时器的那个计数器里面。 这个是这个是定时器技自动技术的判断。 也是定时器内部自动判断的。 不需要我们像中断那样啊。 手动的去啊。 在一个上升沿的时候去去读另外一线的信号。 高低电平来判断啊。 这个定时器的编码器接口的话。 是不需要人工去判断的。 它内部自动完成啊。 我们只需要配置好这模式给他行了。 这个模式等下等下会说啊。 这个他这个框图就是这样子。 就是定满定时器的话。 它把两个信号一个连接在通道。 一个连接通道二。 然后通道一的话。 它这个信号会连接到这里。 通道二的话信号会到这里啊。 这两个信号同时传的给那个编码器接口。 定时器的编码器接口里面嗯。 它有三个模式。 一个仅在T1计数。 一个仅在T2技术。 还有T1跟T2都技术啊。 这个是什么意思呢。 啊比如说这里A上升沿的时候啊。 我只看上层岩去判断B项。 假设是低电平。 他就呃内部就加一啊。 三电源在高电平的时候啊。 这个也加一啊。 就是单单看A1线信号的上升沿或下降沿啊。 就是啊T1技术。 咳咳假如说只看B线。 B线的上升沿和下降沿的话呢。 他就是仅在T2技术嗯。 啊假设两边都看的话。 就是T1跟T2的技术加上两边应该都看。 意思就是这个上升沿低电平的时候啊。 定时器的计数加一。 然后到这里了。 B向信号上升沿的时候呢。 A再高点平啊。 定时器也结束啊。 这个下降沿下降沿A线。 A线在下降沿的时候。 B线高电平也计数啊。 就是说每一个上升沿A线。 无论是A线还是B线的。 只要符合这个逻辑的话。 他都计数。 这个是T1跟T2都技术。 后面我们就用这种模式来啊计算它的一个速度。 还有计数啊。 以上的话就是啊去有这个抗干扰的能力。 就是呃假如说有干扰信号的。 后来的话他肯定是不满足刚刚说的这个规律的。 就是啊一个在上升一上升沿的时候。 另外一个高亮平还是低电平。 假如有毛刺信号的话。 它不满足的话。 它就不计数。 他不计数的话。 他就可以把这个干扰给过滤掉啊。 这个是理论知识。 好现在我们看一下啊。 标准库这边的实际效果。 贬义下载好。 打开摄像头看一下啊。 因为我测的是一个速度。 就是每隔一秒钟去读它定时器里面的计数值。 那计数值就是它的脉冲个数。 那么现在得到的单位的话是秒。 每脉冲的一个速度。 假如说我这边撞啊。 -16停下来。 它是零。 这边撞啊。 他就是24停下来就停。 这个是得到它的一个速度啊。 这个是标准库。 这边对于编码器接口的一个实时演示的效果好。 现在我就用啊help库来实现一遍这个功能嗯。 新建一个文件夹来存放。 来重放项目。 15a time。 Time in s o d e r time encoder。 然后打开cube。 爱电一。 打开有点慢。 啊还是在OLLE这个项目基础上修改。 要把我这边这个路径拷过来。 就存放在这里。 然后名字就叫做定时器的编码器接口。 然后呢这个名字要改一下。 啊这个路径可以关掉了。 我先打开他的一个流操作流程。 说明应该是在。 嗯编码器接口在这里。 啊我就按照这个操作流程来演示。 这样吧。 第一个是打开编码测模式嘛。 我将这个操作定时器三啊。 使用的是内部时钟样。 诶。 好像不对。 这里是不需要设置时钟的。 只要打开编码器模式就行了。 channel4com白channel。 啊编码器模式啊。 这里因为它输入的话。 它本身就是一个类似于一个时钟就外部进来的。 所以这里是不需要选时钟的。 你这里选择编码车模式的话。 上面的是选选择不了的啊。 然后就设置相关的参数嗯。 这里预分频器的话就呃就不分屏了。 直接用他的输入多少就是多少。 然后这里用6535。 还有一个的话底下的话就是。 嗯啊编码器模式刚刚也说了。 T1跟T2都计数。 那边也是用T1跟T2都计数。 然后是上升沿啊。 就是A线信号上升沿的时候去判断B线信号啊。 然后底下还有一个是。 然后拉上来一点啊。 B线信号上升沿的时候也去判断A线信号。 因为啊我上面写的啊。 T1跟T2都有效。 所以A线信号的时候上升沿的时候去判断B线。 B线上升沿的时候去判断A线啊。 只要说两个都符合的话。 两个都计数啊。 这个就比已经配置完了。 然后这里用的是pa6跟pa7。 P6和P7的话。 我们已经把这个线接到这里了。 就跟刚刚那个边是一样的。 A线和B线。 然后保存就可以生成代码了。 好我们在M点C里面打开定时器。 打开定时器的话。 我直接拷过去了。 就通过这个函数来打开。 通过编码器的方式来打开啊。 定时器三的通道啊。 因为我用的是定时器三。 然后这里就是用这个or的这个通道就行了。 嗯首先的话我们先不算速度。 我们先把先把这个计数器的值先获取出来。 看他计数的个数对不对。 这是我旋转的时候它它的个数对不对。 啊我直接这样搞过来。 啊便宜。 下载。 啊这是我这边啊。 他就是每做一个的话。 它就啊它检测到信号的话。 就一直是这么在我这边反向的话。 它就啊他就减这个数就减。 这个是没问题的。 我放大一点。 顺时针的话就是针。 逆时针的话就是减啊。 这里好像还有一个问题。 就是减到零的时候。 它就变成这个了。 65535了啊。 我们看一下程序这边啊。 这边我这边说明也做出了一个说明。 额显示正数。 反转的时候显也显示一个也是一个正数。 但是最大正是正数啊。 这是因为我们这个类型没有选对啊。 编码器反转时返回负数的一位。 获取计数器的话是一个无符号的32位的啊。 整形我们需要把它转成有符号的数。 所以我们在前面加一个有符号的。 16位的计数器的数就行了。 然而这里通过一个中转。 就是先把这个获取到的值给这里。 然后再显示这个16位的带符号的数就行了。 然后现在在编译下载看一次。 症状没问题。 反转好。 现在已经是有负数了。 再正转再反转是有复数了。 是没问题的。 哦我们接着按这个流程来。 啊这里可以计数了。 然后我们就可以跟标准库那边。 也可以计算它的速度啊。 计算它速度的方法的话。 就是每隔一秒去获取一下这个计数值啊。 获取之后就比较清空。 然后这个就是其这速度。 这个一因为一秒去获取一次它的脉冲个数。 那它的速度的单位就是脉冲啊。 一秒钟有多少个脉冲好。 现在我直接直接写。 把这个函数传上来就不接不不再写了。 我把这个函数放在外面定义。 然后呢就修改一下里面的这个显示就行了。 然后这个就不是技术层的s pd吧。 下载好编译。 下载要打开摄像头。 嗯加大。 哦没没没定时。 我说的是一秒就能去获取。 是的这里应该还要啊。 这个这个应该不要了。 应该还要弄一个定时上去给他定时一一秒。 这是一秒钟获取一次。 再重新来一个。 哦下载完了唉还没有可以了。 啊这是没问题的。 正向嘛正是20。 然后反向-20啊。 你拧的越快的话。 它就是显示出来数字越大。 就是它的一个速度好。 这个视频就到这里了。
16. 好现在来录制下一个视频。 先打开标准库。 这边前面定时器的所有例子都演示完了。 这个视频开始的话就啊来录制ADC的视频。 ADC的话。 它的它的原理就是用逐次逼近的方法啊。 这跟这个框图是一样的啊。 这里就不不多说这个原理。 啊然后它有几个重要的参数。 我们要理解一下。 因为等一下跳库那边啊也要做同样的设置啊。 第一个的话它分注入通道跟规则通道。 注入通道的话。 他可以最多可以选择四个通道。 或者选择之后他转化了才出来的结果啊。 分别放在四个寄存器中啊。 假如说你用注入通道的话。 他最多只能用四个啊。 结果的话你可以到四个独立的基础区里面把啊。 把它读出去来啊。 这个好像那个间歇那边没有给出例子啊。 给出例子的话都是规则通道。 这边的规则通道这边他可以选16个通道啊。 但是他的结果只能存放一个寄存器里面啊。 就无论你选选多个通道的话。 它转换出来的结果都只能放在一个通道里面啊。 假如说你先只转换一个通道。 放一个结果还好。 因为它不会存在覆盖的问题。 这样说你转换多个通道的话啊。 就要利用到后面的DNA技术。 把那个结果给转运出来。 快速转运出来。 然后再再执行下一次转运。 下一次转换嗯。 还有一个的话。 还有一个重要的参数的话是左对齐和右对齐。 左对齐的话就是啊。 他得到的这个结果向左移移了四次。 只放大了16倍。 右对值的话就是得到了真实的转换值嗯。 后面的所有例子的话都是用右对齐的方式。 还有触发方式。 软件触发。 硬件触发啊。 这个就不多说了啊。 然后到时钟时钟这个也要注意的啊。 时钟的话我们可以打开STM32的失踪框图。 应该是在定时器这里。 在最后。 啊这个地方七十二七十二兆赫兹。 尤其是兆赫赫兹的话。 它到底下ADC这里啊。 他ADC的预分配器只能设置2468。 这几个值。 且它的最大时钟不能超过14兆赫兹啊。 所以我们打开计算器来算一下。 假如说72兆赫兹用二分屏的话。 72÷2啊。 36。 36还是大于14。 所以这个是不满足的啊。 因为他最大的时钟ADC。 最大时钟只能是14兆赫兹啊。 那我就再用72再除以四。 用四方平看下啊。 这十八十八还是比14大好。 那我们再试一下。 72再除以六啊啊12他已经满足了。 因为12比14小啊。 所以后面我们用这个AABC的这个预分频器的话。 都是都是设置六分屏好。 这个就是它的一个分频系数的问题。 底下就是前面说的一个注入通道的话。 它有啊四个寄存器来存放。 结果。 要规则通道的话只有一个寄存器来存放结果啊。 假设不想被覆盖的话。 就要用到这里的DNA。 DNA后面再说。 嗯然后转换的它也会分四种模式啊。 这种模式的话。 主要是通过这个两个维度来分的啊。 第一个是单次还是连续。 单次连续的意思是说转换完之后是否自动转换。 档次的话就是说它转化为一次之后。 它就不自动转换了啊。 连续的话就是说它转换为一次之后。 它内部自动再转换一次。 就不需要你用代码再去控制它。 它开始转换了。 这是档次跟连续的意思。 有扫描跟非扫描。 意思就是是否支持多通道。 扫描的话就是可以多通道。 非扫描的话只能是单通道。 而且只能是一一个通道啊。 所以这两个维度就是这四个组合啊。 就可以组出组合出四种模式啊。 第一个是单次非连续档次的意思。 转换换一次的话就不继续转换了。 非扫描的意思就只能一个通道啊。 就比如说这里啊这个框图它只能是一个通道。 这个是非扫描模式。 然后它转换完之后啊。 它触发这个EOC标志位。 它就结束了。 这个整个流程就结束了。 然后后面你就去判断这个EOC标志位。 要去里面把那个结果读出来就行了。 这个单次非扫描好。 然后我们看第二个模式。 连续连续转换非扫描。 连续转换。 非扫描。 连续的意思是说它转化为一次之后。 它内部自动再次进行一次转换。 非扫描啊。 这一通道还是一个通道。 然后连续的话就是内部自动再连再继续触发啊。 这个图的话我我做了一个修改。 我个人说我个人觉得这个可能比更好理解一点。 肩斜那边好像这个箭头是不是返回这里的。 而是直接指到外面去了。 好像啊这个我记得我做了一个修改。 我觉得这样更好理解一点。 就是啊他就得到这个标记位之后。 它自动又返回。 就再触发一次。 他自动触发的啊。 然后在到底上单次扫描连续单次。 意思就是说啊它转换完之后就不再继续了。 扫描的意思知道他这里可以有多通道啊。 这个是档次转换扫描模式啊。 最后一个模式是连续转换扫描模式。 连续意思它转换完之后。 他自回来自动再扫描一次。 再转换一次啊。 扫描的话是多通道啊。 就是这个图所示啊。 这是它自动返回来。 就是扫描模式。 还是装连续两岁小孩模式啊。 顶上就没有什么了。 我们就看下它的一个实际效果。 先看标准库这边的实际效果。 应该是这里。 嗯编译下载。 打开摄像头啊。 这个主要是测它的一个这个电位器的一。 就用这个电位器来模拟这个电瓶啊。 或顺时针转的话。 它就会增大到3.3伏。 逆时针转的话。 它就减少到零伏。 啊这个就是他的一个嗯效果好。 现在我就用help库来实现一遍这个功能好。 现在关掉。 啊在这里面新建一个文件夹。 应该到46ADC应该是嗯。 这个是叫做分档次。 就是非连续。 怎么命名。 这个好呢。 连续的话就是continue force。 Continue force。 然后啊扫描的话也是pose啊。 这个是用来标志好看一点。 就是连续是否是连续的话是force。 不连续的话是单次嘛。 然后扫描也是force。 也是只能是一通道好。 现在我就打开KY诶。 打错了。 应该打开Q5YDE。 啊还是在OLED这个项目上基础上修改。 然后粘贴就选择这个路径。 啊啊选错了。 那路径放底下那个名称是放上面了。 最上最上面。 然后这里要改一下。 要我就打开how could。 这边说明文档。 按这个说明文档来操作。 这是单次非扫描啊。 这个啊有这两个可以组合四四种模式。 然后这里就前面也说了。 这就不说了。 然后我们先选择ADC1先选择ADC。 应该是在这里吗。 啊这里模拟量这里用的是零通道啊。 他这里就自动标注了。 这个是附着在pa0端口的。 然后呢模式是用独立模式嗯。 那边简写的代码也是有这个的独立的模式。 对应标准库那边的是啊。 他也要设置那个结构体。 用的是独立模式啊。 我这里啊它自动默认就是独立模式了。 然后数据对齐方式右对齐。 刚刚前面也说了。 往右对右对齐。 假如说左对齐的话啊。 他就会把这个结果放大四倍。 然后底下这里就选择啊。 是否是扫描。 是否是啊连续了。 所以说我这里是连续的时候是disabled。 就是非连续。 然后非扫描。 然后底下第四个的话是转换通道。 只能是一。 哎错了。 应该是整合通道是一。 那这个就设置完了。 然后我看这边还有什么要设置的啊。 还有一个时钟的配置。 刚刚那这里已经报错了。 咋说我这个选择ADC的话。 他这边报错了。 我们看哪里报错啊。 很明显这里报错了。 因为它最大的话它只能是14兆赫兹。 假设我二分平36的话。 它就超出了范围了。 所以通过我们计算的话。 用啊六分屏就可以了。 六分屏他得到了十十二赫兹。 就小于十四十四兆赫兹啊。 这个就不会出错嗯。 这个就可以了。 然后保存。 啊然后启动启动ADC啊。 这个是校准的。 应该有一个启动的啊。 先校准。 先调用校准。 因为你使用之前肯定要校准那个简写。 那个标准库。 那边也是有一个对应的一个校准函数的。 我们只要在这里校准就行了。 然后呢啊我们编写一个获取ADC的函数。 我直接把这个拷过来吧。 等一下再讲解一下这个函数是怎么用的。 在这里。 呃我调用一次这个函数的时候。 就通过软件来触发它。 让它启动一次ADC转换。 然后这里就等待它转换完成。 这里一个超时时间啊。 假如说它转换成功的话。 我就直接可以用用这个去啊。 去里面的对应的寄存器里面获取它的转换结果。 假如说不成功的话。 超出这个时间还没转换成功的话。 我就让他这个结果是等于零的。 返回去后面我只需要调用这个函数就行了。 嗯我就这样吧。 直接拷过来。 在麦在ma总里面接循环调用。 这里。 哦这个地方写错了。 应该这个是放在前面显示。 好这样就可以了。 底上这个公式的话。 主要是啊计算通过这个模拟量。 ADC获取回来的模拟量啊。 来算它的电压的好。 我现在应该写完了。 直接哎有错哦。 前面这两个没定义。 我看这边有没有直接把它拷过来吧。 把它放在前面这里。 编译啊可以了下载。 打开摄像头。 好现在已经下载完成了。 我们看下效果应该也是一样的。 跟那边。 嗯没问题。 装到零的数字零最大的时候大概是3.3伏。 啊这个是档次非扫描。 意思说非连续非扫描的意思好。 现在我们继续往下一个例子。 就是连续非扫描。 连续非扫描跟前面的区别就是前面是单次。 这个是连续。 这个连续就是它转换完一次之后。 它自动再转换。 它就不需要你啊。 每次都像这样子。 手动用代码来获取他用连续非扫描模式的时候。 只需要在前面调用一次就好了。 后面的话。 这个你直接直接去里面获取这个值就好了。 就不用每次都啊。 不用每次都那个用软件来触发它。 转换以后要等待它完成啊。 不用我只需要让它转换一次。 后面我就啊每次都去里面获取就行了啊。 具体怎么操作呢。 我这里再新建另外一个例子吧。 我在里面再新建多一个区分它的一个。 再新建多另外一个项目吧。 应该是七。 把前面这个拷过来。 连续啊。 连续模式是出扫描模式破损。 连续模式是说他啊转换也是继续转换。 扫描模式是force。 就是它只能转换一个通道。 好就这个我就在这个基础上修改吧。 复制粘贴。 然后用这个。 然后快速弄下。 这里。 复制哎错了。 重命名。 这里。 哎哦弄错了。 应该是这个。 重命名。 聪明明。 哦还是按这个说明文档来。 与前面的区别的话。 只需要把这个打开就行了。 就是连续的这里打开。 因为我这个是在前面那个基础上修改的。 前面是非连续非扫描。 然后我这里只需要把连续的这个打开就行了。 应该able啊。 连续打开就行了。 然后保存。 要design这个函数要变更一下。 因为我们用的是循环。 它循环扫描了是啊连续的模式。 所以说我们这里就不需要。 每次都都都都都用软件来触发的。 意思是说我们前面校准完之后。 就种完之后。 只需要在这里啊让他启动一次。 然后后面里面这个函数的话就不用每次都不用。 每次都启动了啊。 只需要这个结果值。 watch回去行了。 前面这份都不需要了。 哎啊就是这样子。 我只管每次去里面获取执行呢。 只需要启动一次。 因为它内部已经自动啊。 转换一次又继续转换了。 然后底下是不变的。 我们看一下效果啊。 效果应该是跟前面是一样的。 但是这个。 好下载完了我看下它的效果。 应该是没问题的。 跟前面俺是一样的。 啊这个是。 啊ADC。 啊这个视频就到这里了。
17. 好现在来录制下一个视频。 先打开标准库这边啊。 这个视频一到嗯。 还是ADC这里单次非扫描和连续的一个地址。 前面的话已经演示过单次非扫描。 还有连续飞扫描了啊。 这个非扫描模式意思就是只能是一个通道啊。 但是这个要演示的话。 在非扫描的模式上去获取多通道的值啊。 他是怎么做到的呢。 啊正常来说档次就是啊检测完一次之后。 它就不继续自动自自动检测了。 非扫描的话它只能是一个通道的啊。 但是这里我们要用这个档次。 非扫描是获取多次多通道的。 知道是怎么做呢。 它其实也是原理也是用的这个档次非扫描。 只不过说啊我多通道的话。 我执行多次。 这个档次非常妙。 就依次执行档次非扫描啊。 然后就可以用档次非扫描来获取多通道的值了。 嗯啊他就是他一次一次的进行单次非扫描。 一次设置不同通道的数据啊。 给到规则图中的序列一。 然后触发转换。 转换之后读取数据。 由于这个转换它是非常快的。 所以从效果来上来看的话啊。 他就认为他是一次一次性把这个啊。 所有所有的这个通道的值的获取了。 实际上的话它是转换完一个。 继续转换另外一个的好。 我们看一下效果。 先看一下我们这边的接线吧。 啊因为我这个面包板比较小。 所以我就把它都放在一起了。 其实他这里也是一样啊。 有四个啊。 有四个获取模拟量的一个硬件。 一个是电位器啊。 另外一个是对摄嗯。 传感器。 还有一个嗯光敏电阻还是个热敏电阻。 其实都集成在这里了。 我把多把把线接在这里好。 可以看下它的这个接线。 还是跟江协那边是一样的。 只不过我这个摆放的位置有点不对。 好我们看一下标准库的啊。 效果AC档次转换多通道。 变异。 我想把这个T0给插上。 然后呢下载。 啊下载完之后啊。 他这里就可以显示这个四个通道的ADC值了。 我咋说我碰这个对射传感器的话。 ADC4那里就变化很大啊。 咋说我你这个呃电位器的话啊。 这是那个一通道那个变化大啊。 一通道会变化数值。 我挡住这个广电。 这个应该是二通道啊。 这个是没问题。 就这个温度这边的话嗯也有一点变化。 但是温度变化不是很大啊。 这个就是嗯江协标准库实现的一个例子。 好像我们用标准库来实现一下以下这个功能。 先打开。 这边17应该是18了。 连续模式是force扫描模式。 也是force。 在这个情况下去检测多通道标题。 全脑。 非连续非扫描模式差去检测多通道。 然后打开Q8D1。 好在打开过程中。 我们先打开啊。 help库的操作流程应该是这里。 然后定位到这里啊。 这个说明就跟前面一样了。 就依次设置。 就依次执行档次。 非常妙。 好好调整一下。 呃我们在非连续非扫描的这个基础上修改。 唉错了。 应该是放在地上。 然后AADC非连续非扫描多通道。 这个名字复制下来重命名啊。 断点在这里。 然后打开。 啊其实IOC里面的话就维持跟原来是一样的。 里面是不用设置东西的。 因为这里这个功能的话。 他就是去啊单单去检测一个通道的。 检测完之后啊。 就会嗯触发一个表志位和独到的表志位的话。 去获取结果就行了。 我们看一下里面里里面是是怎么设置的。 这根这这里是不用变化。 再通道零那里吗。 嗯然后嗯然后底下是啊非连续非扫描啊。 这个没问题。 这个是跟以前一样。 这个不用改啊。 我们主要是来这里改一下。 没点C中啊。 就是这个这个函数的话。 我们要传入一个通道的进来。 然后从把函数通道通道数传进来。 然后针对每一个通道进行进行一次啊。 ADC转换就可以了。 我们看一下这边啊。 我们先把这个通道数给这个参数给传进来。 啊然后它里面它是怎么变更这个通道呢。 假如说你不变更的话。 它默认的话就是以默认的话。 就是以这边你配置的这个通道。 默认就是以这边你配置的这个I00通道。 第一个通道来做ADC换。 所以这里我们要把它变更好。 变更可以参考它里面是怎么操作。 它自动一生整了个代码啊。 就是这里AC好看。 里面怎么是自动生成的时候。 他是怎么把那个通道给切换上去的啊。 就是这里嗯通道零。 然后设置这个参数嘛。 然后啊配置在通道就行了。 这个就是它的变更通道的函数。 然后把它拷过去。 然后考到没点C这边啊。 搞到这里来啊。 这个通道的话就是外部传进来啊。 这个作用就是变更通道啊。 这个我们处理一下吧。 就是假如说变更通道好。 那个的话。 它就变成通道失败的话。 就这个等于零吧。 然后编译看有没有报错啊。 有报错啊。 他说。 啊这个只是未定义。 我们去里面看一下这个值是什么。 As configure。 看里面是怎么定义它的。 S卡B卡。 啊是在。 而是在这里哦。 这S卡比格它在这个自定生成这个函数里面。 它定义了一个局部变量。 所以我那边要用的话。 它是用不了这个东西的。 所以我们也要把这个东西拷过去。 再我这边也要定义一下这个结构结构体嗯。 然后这里就可以了。 然后把它定义成这个全局变量。 然后我这边就用了。 用用这个结构体把参数传进去。 然后调用这个函数进行初始化。 然后再编译一次诶。 还有一个还有两个不错哦。 这是因为调用的时候没有给通道。 它啊这边其实已经完成了。 就是你需要希望嗯传入哪个通道的话啊。 你需要把这个通道数填在这里。 它就里面就自动去啊。 启动ADC转换以后。 等待它完成。 并且返回结果给他了。 然后点上我们只需只需要用就行了啊。 用是怎么用的。 我会参考还是参考费。 这边啊。 是我先把这个给拷到这边来。 这种。 要用的话就是直接啊。 前面还是第几个用于存放结果的变量。 啊这个就是啊调用刚刚那个函数进行一个嗯。 应该是获取变形式啊。 就是调用刚刚那个啊上面那个函数。 把通道传进去。 然后他就可以获取对应通道的ADC结果。 然后把它显示出来就行了。 好我现在把编译看一下。 没有报错啊。 没报错。 然后下载。 啊打开摄像头。 啊等等。 现在吧啊啊已经下载完了啊。 我们这的话看看啊。 这个结果应该是跟前面是一样的。 嗯有这个原理是跟那边一样的。 结果肯定是一样的啊。 然后电位器的话应该是AADC1。 啊光明的话就是ADC2啊。 因为我这个温度的话它变化不大。 ADC3那里。 所以很难看到它的效果啊。 也有一点点嗯。 我按住它的时候。 的确是它那个温度会变化一点。 应该是温度不是温度传感器吧。 啊所以这个视频的话就实现了档次。 非扫描模式下的多通道转换。 它的原理就是进行嗯。 多次的这个一次执行就行了啊。 这个视频就到这里了。
18. 好现在我们接着录下一个视频。 先打开标准库这边啊。 ADC单次单次非扫描。 还有连续的非扫描模式啊。 已经演示过了。 现在ADC还剩一个扫描模式还没还没录。 因为扫描模式的话意味着它是多通道的啊。 但是由于ADC他那个呃。 规则组里面只有一个寄存器来存放它的结果啊。 假如说非扫描用非扫描呃的话。 它一个寄存器它肯定会被覆盖的啊。 假如说要学习非扫描非扫描的模式的话。 要用到后面的DNA转运啊。 就是及时把啊它转换来转换出一个通道的数。 数据转换出来。 然后再进行下一次再转换啊。 所以这个扫描模式的话要到后面ADC。 把ADC的先看完。 再在录这个扫描模式的例子好。 这个视频就先看下ADC模拟。 看明工这个模拟看门狗的它的一个作用啊。 其功能的话就是啊首先它进行ADC转换。 然后你设定一个阈值范围给它。 比如说是3000~5000啊。 假如说在这个阈值范围内的话啊。 他就不会去触发中断。 假如说啊不在这个范围内。 但他就嗯会一直触发中断啊。 我们为了演示看它是否触发中断的话。 我们可以在啊触发那个中段那里。 添加一个自身的变量。 把它显示出来啊。 假如说他触发中断了。 就是在这里只要它触触发中断了。 我们就把他技术啊一直一直累加啊。 我这里设定的是模拟量。 AD c是3000~5000。 假如说是在这个范围外内的话啊。 3000~5000的话。 然后这个中断是不会进来的。 然后你看到的啊。 这个数据是OLED上面打印出来。 这个数据是不会变化的啊。 假如说你这个模拟量子在这个范围之外的话。 它就会一直触发熔断。 就可以看到实际的效果是啊。 这个变量一直自增啊。 我们先看一下实际效果。 打开这个应该是ADC模拟看门狗。 贬义。 下下载打开摄像头啊。 现在是3200。 在3000~3500之间。 这个总段是不会进来。 不会进来。 看到这个数据的话。 一直是零好。 我改变一下这个啊。 数值。 啊发现不他不在那个3000到啊3+5之内了。 它是所以它一直触发中断。 触发中断的话。 我里面啊这个字真啊就一直针显示出来的话。 它就一直往上涨啊。 然后说我在改变会再回到哦。 还是228还是二九还是至尊啊。 假设我到3000内的话。 3000~3500之内这个范围啊它就没有变化。 我再调大。 然后超过3500。 它也是会自增的啊。 所以这个只是ADC模拟他们勾的啊。 一个效果好。 现在我们用help库来实现eat这个功能。 嗯先打开。 这边应该是到第19个例子。 啊叫做AD c dog吧。 啊打开Q8DE啊。 我们打开呃这边的help库的操作流程。 因为他这里要执行ADC转换。 我们就不重复前面的步骤了。 我们在前面啊。 非连续非扫描那个模式项目上基础上修改。 暂停名字叫做。 哎我把它关掉了吗。 应该是放这里。 是九。 把它放在这里。 然后这个项目名称的话就用ADC啊。 看门狗。 然后这个要改一下重命名。 找妹妹。 啊这个是非连续非扫描模式。 我们这个效果跟前面效果是一样的。 所以我们复制了一下这个。 我们先看一下这个效果吧。 从原理上来说。 肯定是跟前面那个是一样的。 咱这个只有单单单单只有ADC转换。 没有还没开启模拟看门狗。 啊这个只是前面的那个总焊啊。 现在我们就按照那个步骤来。 把那个模拟看门狗给开起来。 啊打开LC。 然后ADC然后这个通道这里还是零嘛。 然后底下主要是勾选一个啊。 看门狗勾选之后底下就有参数可以设置了啊。 这个通道零它是自动帮你选择为。 我前面的话只有通道零。 所以这里啊必须选择的是通道零啊。 然后这里就填一个高低阈值。 高阈值的话3500啊。 跟那个标准库那边对应3500。 好这个把3000的低阈值填在这里嗯。 要看下这边要打开全局终端嗯。 这里终端打开啊。 应该就没了。 然后我们就可以直接保存。 让它生成代码。 嗯这个AABC里面的话就多增加了ADC。 模拟看门狗呃。 假如说不在那个阈值范围内的话。 他就触发中断。 现在我们去找他的中断函数。 然后应该是在it这边。 中断函数的话一般都是啊在这个文件里面找。 因为我们前面已经勾选了。 为每个外设生成一个独立的点C文件啊。 所以中断的话。 他把所有终端都放在这个文件里面。 我们只需要在里面找就行了啊。 这个应该是他的终端。 ADC的一个i q handler终端啊。 参考下我这边啊。 我这边的话直接把他的逻辑写在这里了。 就是假如说终端进来的时候。 是模拟看门狗进来的啊。 我这个数就增增加一啊。 这个是直接把那个写在这里了啊。 这个其实效果上也没问题的好。 我们还是用回调函数的方式来实现吧。 不把那个代码写在这里。 我们重写他的回调函数啊。 关于它的回调函数怎么找呢。 啊一般是在啊这个中断函数里面。 它调用的是啊。 最终的调用的是这个i q handler。 这个函数我们去里面找啊。 这个函数里面肯定是也有一个啊。 回调函数的ADC模拟看门口的回调函数。 我们找一下。 啊这里啊模拟看门狗的啊。 回调函数应该就是这个啊。 ADC这个out of windows。 就不在窗口范围内的一个回调函数。 我们看下搜一下这函数啊。 找下它的函数原型就在这里。 我们重写在ma点C里面。 重写这个函数就行了。 may点C还是放在这里吧。 啊就是他十呃。 当他的AD是值。 不在这个刚刚设定的3000~3500。 那他就会来调用这个函数。 好我们这里面把那个逻辑判断是放在这里。 然后呢这个变量的话要定义一次。 啊这个变量的话。 我在这里定义吧。 啊这个就可以了。 我们在may点C里面。 就用就。 启用它的一个转换好标定。 然后显示这两个固定字符串。 然后在循环里面就让它不断循环转换。 而且啊把ad10的当前值显示出来。 还有中断的次数也显示出来。 好我下载还有报错哦。 这个直接显示这个中断的这个自增变量就行了。 因为我前面是写在另外一个文件里面。 需要通过一个函数去调用那个值。 我用回调函数的话就不用直接去还行。 间接去获取这个数值了。 然后下载。 打开摄像头。 哎等会我的摄像头断了啊。 我的摄像头已经准备好了。 打开摄像头啊。 这边已经下载完成了。 然后看一下它的实际效果啊。 跟那边应该是一模一样的。 我去调一下这个数值。 诶这里没有启用吗。 我看一下是什么问题。 啊这里这个计数值没有。 应该是打开ADC的时候。 应该是要用嗯中断的模式去打开的。 我看下我这边。 实际他没有进入这个中段。 正常说应该会进入的。 我们去找下问题。 应该是这里加速设置错了。 就这个地方啊。 中断模式要打开才行。 因为我这边应该也是打开了。 刚刚我应该没看漏。 看了那里。 啊打开这个冲动模式吧。 然后再保存。 好便宜下载。 啊这个是没问题的啊。 在这个范围之外的话。 就一直触发中断。 假如说在这个范围内。 你好像这个也不太对啊。 诶他怎么在这个范围内。 他还是会计数的。 这个好像不太正常。 应该在3000~3500。 他是不计数的。 应该有问题。 我们再找一下。 应该是里面的。 肯定是里面的某个参数设置错了。 也是在这里啊。 两个都写到3500了。 第阈值应该是写3000的。 好保存。 然后。 啊再编译下载。 摄像头。 唉还是吗。 还没保存下去吗。 我看下一看下。 刚刚可能是没有更新。 因为刚刚那个没弹出这个出风口。 何编译下载。 啊这个是没问题。 我们再来把3001改成3000。 然后保存。 啊这个是没问题的。 我去改一下这边啊。 这个就一直增的。 然后改到这个范围之内的话。 应该就会暂停。 额这个是没问题的。 这个就是ADC模拟看门狗。 呃还这里好像还有一个小问题啊。 就是啊这个是零是没问题的。 但这个是正常的。 好这个视频就到这里了。
19. 好上面接着录下一个视频。 还是打开标准库。 这边模拟看门狗已经录过了。 然后现在就看定时器的TRGO触发ADC。 前面所有的ADC啊。 现在已经讲到的ADC的话都是用嗯软件触发。 就是通过代码来触发它转换的。 比这个的话啊。 他还是支持硬件触发。 就是通过定时器的。 它的更新事件来触发它转换啊。 就是用电子器上的TRGO事件。 来触发这个TRGO事件。 就是它在啊溢出的时候。 它就会触发这个事件。 这个事件触发的时候会自动给信号ADC。 ADC进转换啊。 你只需要配置就行了。 它内部的话是自动把这个事件。 它会把触触发ADC啊。 配置之后。 只要这个事件触发的ADC就会触发转换一次。 啊这个应该第一下代码应该就就没什么了。 还是用非连续非扫描模式。 然后底下要配置下嗯。 ADC转换ADC的数据啊。 这里的外部触发源的话。 之前好像是选择是软件触发还是五啊。 但是这里的话是要选择啊。 定时器三的TRGO信号啊。 这个是触发源的信号。 这里要提前给他啊。 底下这里要配置定期三的TIGO为啊。 更新更新事件输出和它实际效果就是一样的。 之前我们是外外循环。 外循环里面啊。 不断的调用代码。 让他启动转化。 所以这个数是动态一直在变化的啊。 但是这里用这个定时器三的话。 我们因为我们前面这个定时器的。 一期周期是一秒。 所以他一秒钟才会转换一次。 然后一秒钟这里的素材会更新一次啊。 这个是啊标准库这边的。 我们看一下它的实际效果是怎么样的。 编译下载摄像头。 我看下啊。 他是他一秒钟才会转换一次。 我改动一下这个值。 改了啊。 现在我才一直在改。 它也是大概一秒钟才会转换一次啊。 这个是嗯标准库的好。 现在我们用help库来实现抑制这个功能。 呃应该是放在这边。 应该是到十921。 应该是到20了。 20的例子是TTNATC啊。 第十期的TRGO信号来触发ADC。 就这个吧。 然后打开cube i d e。 打开的时候我们先打开二库的操作流程。 啊等下就按照这个流程来操作就行了。 啊在非连续非扫描的这个基础上修改。 定时器的ADC这里。 然后重命名。 把他名字拷一下。 哎不对。 应该重命名。 这里改一下。 取消这里重命名暂停。 啊这个打开咱们按照这个表步这个步骤来操作。 啊首先的话肯定是要配置定定时器的。 我们把定时器三打开用。 因为用定时器三的一个TRGL信号。 来触发ADC1。 所以我们先打开定时器三。 要用内部时钟。 然后底下设置预分频器。 还有自动重装载值啊。 这样设置就可以使得它的溢出周期是一秒七。 2001万。 11234-1。 7200-1。 啊这个是定时器的两个参数。 底下还要啊设置它。 打开TRGO信号是更新事件。 这里应该是。 enable应该是选择enable update。 应该是选择更新事件。 那应该是这个选择这个啊。 这个就是配置完成了。 ADC这边也要做相应的修改。 之前我们的是软件触发。 现在需要改成硬件触发。 它的信号来自定时器三的TRGO。 应该是ADC规则组规则组的信号。 ADCC规则组的信号。 应该是这里定时器三的更新事件啊。 这个就跟定时器三那边对应起来的。 刚刚配置了定定时器三的输出。 然后这里ADC输入的输入的话。 就用这个模式啊。 这个就配置完了。 然后保存保存。 生成银色代码。 呃因为这个已经啊触发源。 我们已经自动配置好了。 这里就不需要手动给调用这个函数去。 它让它去进行转换了。 我们直接去获取就行了。 应该是直接获取这个就行了。 然后把这个删掉好。 我一秒钟获取一次。 它这个溢出的话。 所以这里等待等待时间我们可以两秒钟吧。 就这让他可以给等两秒。 我们因为我们一秒转换一次嘛。 等两秒让它啊看它有没有转换完成。 转换完成的话就去获取。 然后底下的话就是啊启动定时器啊。 这里要用这个启动定时器。 在启动ADC的时候也要启动定时器。 放在头底下吧。 啊剩下的应该是没了。 这个就跟前面一样的。 要我现在编译。 下载。 哎啊一秒钟转换一次。 哎这个感觉不太对呀。 我看一下哦。 这里没看到他转换。 我们找一下问题看看。 应该哦应该还要给一个启动信号给他啊。 就是刚开始要给一次性启动信号给他。 应该是。 标准库那边应该也有这个问题。 就是启动之前的话。 你用即使你用的是硬件触发。 但是啊启动之前的话也要给一次啊。 这个给他转换才行。 我刚才标准库这边的介绍是不是也有这个。 好像我记得是有的。 第17校园出发。 啊一样的就说啊虽然是用定时器提要求。 也需要插上这个软件触发。 就刚开始要给一次信号给他。 然后面就不用K了。 所以我们在外循环之外的话。 要要调查一下这个让他进去转转转换才行。 要我再编译再下载。 然后再看。 啊可以了。 现在我咋说在这里调整啊。 现在我在一直在动的话。 它大概也是一秒钟获取一次数字。 啊这个是电子器上的TRGO来触发ABC。 通过硬件触发来啊。 让他ADC进行一个转换。 不用我们啊手动手动把这两个关联起来。 只需要那里面配置下参数就好了。 好这个视频就到这里。
20. 好上面来录制下一个视频。 应该是到DMA了啊。 DNA这边的话其实它就是一个数据转存的技术。 他是在硬件层面的话。 就可以把数据给从一个地方。 搬运到另外一个地方。 它是无需啊CPU干预的。 又节省了CPU资源。 它的用法是怎么用呢啊。 主要是看见谁给我们总结的这个框图。 用的时候需要指定数据源。 还有目标数据。 意思就是数据从哪里搬运到哪里。 然后数据源要给另一个磁时地址。 有数据宽度。 还有地址是否自增啊。 地址的话啊。 就是给从哪里开始搬运。 然后宽度的话是搬运一次的话。 搬运多大的内存。 他有八位的。 有16位的。 有32位的啊。 这是搬运一次。 他搬运多大的内存过去啊。 地址是否是真就是啊。 搬运一次之后。 是否那个起始地址自动跳到下一个啊。 那个数据是数据那里去。 是否跳过跳跳跳间隔。 跳了一个数据宽度的长度。 跳到下一个地址那里去啊。 这个数据源跟目标数据还有传输的计数计数器。 意思就是说他要搬运搬运几次啊。 底下这个是硬件触发还是软件触发。 软件触发的话。 意思就是说等一下会有个例子。 例子就是把一个数组里面的数据啊。 搬运到另外一个数组上。 然后显示出来和硬件触发。 就是啊后在后面我们用啊ADC扫描模式啊。 把把数据。 把数据从ADC那个结果寄存器里面搬运出来。 因为ADC那个结果啊。 在啊规则图里面只有一个啊。 假说是扫描模式上不不及时盘出来的话。 它会被后面的数据给覆盖掉哈。 然后我们看一下它的实际效果。 档次。 下载然后下载编译下载。 然后打开摄像头看一下啊。 这个是啊。 他这个是啊。 什么意思呢。 就前面我定义了两个数组。 一个数组是有数据的。 一个数组是没数据的。 然后想把它显示在第一行跟第二行。 所以看到的话就是前面这行是1234。 第二行的话全部都是零啊。 分别对应数组A跟数组B。 然后就调用DNA转运D。 转运之后再次打印数组A跟数组B的出来啊。 然后数组A的数据还是不变的啊。 经过转运之后啊。 数组A转到数组B之后啊。 数组B的数组B的数据就跟数组A1样了啊。 这里就演示了把一个数据从A搬运到B啊。 搬运几次呢。 只搬运四次。 一次搬运一个啊。 元素一个数组的元素。 因为我这个数组有四个元素嘛。 所以这里就需要给它指定四次啊。 这个四次其实就是啊。 指定的是这个传输计数次的值。 就是我这里就显示我们可以去里面看一下。 它是具体操作的过程。 刚跟刚那宽度其实是对应起来的啊。 我们返回这里。 第一个参数就是数组A的地址。 第二个的话就是数组B的地址。 我们转到定义看一下。 数组A地址啊。 这个先打开时钟啊。 一般操作外设的话都要啊打开时钟的。 这个是DNA的时钟啊。 这里就指定啊地址。 然后数据宽度啊。 因为我那个数据啊。 M点C里面这个数据的话。 它是八位的。 八位的话。 这里就是使用的是啊by这是八位的。 然后数据是否自增。 因为我搬运完一个数据之后。 他地址应该要跳到下一个。 就是我001搬到这个地方之后啊。 是那个啊地址自增。 这个也要自增。 然后目标也自增。 然后把002放在这里。 假如说地址不自增的话。 再说我这个木原数据的地址不是真的话。 那搬运完一次给这个之后啊。 下次搬运还是这个会把它把它搬运到这里来。 所以意思说啊我两边都要自增。 你要对应至尊这个字。 绑完之后。 这边增加一。 就是把这个增加啊反映到这里。 这边的地址也增加一啊。 这个就是至臻的至臻的意思。 然后底下就是刚刚传入的四。 就搬运四次嗯。 然后使用的是啊软件触发软件触发。 然后啊正常的模式软件触发啊。 优先级这个随便设置一个给他就行了。 然后底下就执行DNA啊。 这个是他搬运一次的例子。 好我们现在来看一下搬运多次。 这是一次搬运完之后我再搬运一次啊。 搬运整个数组都搬运过去。 好。 先看一下这边魅联系这边。 意思就是我把这个搬运完搬运到B之后。 完整之后我再次变搬运一次。 又从AA的数组全部搬运到B啊。 它其实里面只需要修改一个参数就行了啊。 就只要修改这个。 把它那个啊计数器再改为四就行了。 就改为重新改为四。 因为我需要搬运设置。 再把搬运14。 然后再重新让他的这个再死。 那一次他就可以搬运了啊。 在修改这个数之前的话。 他一定要把DNA给好。 第4A不掉。 先关掉。 然后再改那个数。 再启动它。 然后它就再次搬运四次。 好。 这个我们也来看一下效果。 额第一行的话显示的是数组A的地址。 然后这里的话就是显示数组B的地址啊。 其实这两块内内存的话是啊。 接起来的是是相邻的。 就是说我速度是20000。 然后后面的话是隔四个。 因为我这个数组A的话就是四个元素啊。 首先我嗯每次速度A增加一。 增加完之后就把它搬运到速度B。 所以A先变变完之后啊。 然后把A的数据复制给B啊。 这个这是它的一个啊效果啊。 就是这边主要就是修改的那个计数器这里。 然后修改计数器之前的话。 一定要把DNA的这个通道给关掉。 然后后面修改完之后再打开就行了。 好这个就是标准库这边的DNA。 我们用help库来实现一遍这个功能。 21d n a once。 这一次打开Q8DE1。 哟这边我嗯打开一下我的这个操作流程吧。 后面就按这个流程来。 然后打开完了在OLED的这个项目基础上修改。 复制。 啊这里把这个再。 重命名。 把这个复制下来。 然后把它粘贴到这里。 啊这个就可以打开了。 要我就按照我这边的这个操作步骤来操作啊。 DNA先打开DI通道。 1D ma的话应该是在系统这里。 I di。 然后这里增加一个。 哎这里这是选不上啊。 选上了啊。 DNA的通道一。 然后这里的话底下的话就是啊。 这里要设置好自增正常模式嘛。 这对应我刚刚那边的那个是一样的。 我那边也使用正常模式。 就这篇N啊。 两边都是至尊。 因为我在标准库那边也是一样。 就是因为我是搬运数组的。 从一个数组搬运到另外一个数组啊。 两个两个目标圆圆这边也是要自尊。 然后目标那边也是要自尊的嗯。 我搬运的长度是八位。 所以用这个bind就行了。 然后这边应该就设置完了。 然后底下就只需要带去到那个M点C里面。 就行了。 修改代码就行了。 现在已经生成了。 让它生成。 然后我们在M点C里面增加代码就行了。 把这个删掉。 那我直接拷过来吧。 数组A跟数组B然后显示出来。 这个是直接复复制上来就行了。 数组A是这个。 数组B是这个。 然后直接把它显示出。 显示到第一行跟第二行。 然后就启用DNA转运。 然后呢在等待它转运完成。 然后再再次显示A跟B出来。 啊就是这样的。 然后我们编译一次。 好发现没问题下载。 打开摄像头。 啊是发现是没问题的。 他已经把它搬运上来了。 A跟B。 好现在我们接着下一个例子。 就是让他多次搬运的好多次搬运。 我们也新建一个另外一个文件夹给他存放吧。 其实只需要改一点点代码就行了呢。 现在我还是那个新建多一个文件夹给他存放。 22。 就多次了。 啊多次的这个。 然后在单次的这个基础上修改。 把它存放到这里。 然后把这个名字拷一下。 To me。 原。 啊其其实IOC里面是不用变的。 我们只需要增加一个函数就行了。 跟那边只是一样的效果。 就是我去改那个计数值。 比如说我在前面函数增加一个函数啊。 去修改它的这个计数值是了。 修改之前先把嗯DNA的第一个通道disable关掉。 然后再打开。 然后再让它进行一次转运。 嗯以后我是把这边的代码给拷过来。 这个代码可以不要了。 显示等下我在底下再显示。 啊先把这种显示的代码给删掉好。 我整理一下。 这里这里有点对齐。 有点那个。 啊应该这个不用了。 这里不用再吃啊。 让他怀孕了。 但是前面那个传输这个药啊。 就是这子。 然后底下的话嗯应该要改一下。 好把它放到while循环里面。 启动没问题。 看下效果。 好没问题。 那个A跟B的地址没显示出来。 哦没显示那个A跟B的地址。 那前面假设还是跟应该是一样的。 A跟B的地址。 啊我去这边找下NGB的地址。 应该是这里把A跟B的地址显示出来吧。 要这样显得就跟前面是一模一样的。 假如不显示ABNB的话。 就跟前面有点稍微有一点点区别啊。 稍稍载。 还有这个。 再看看。 啊这个没问题。 这变化也是要把它搬运到顶上来啊。 这个就是他的一个多次搬运DNA啊。 其实不用里面这个函数。 这个里面的这个的话。 其实就是修改了那个啊这个四吧。 虽说我不用这个函数。 应该也是可以的。 我直接调用这个。 我再调用多一次。 其实也行吧。 这个函数不要了。 然后我在这里再等他搬运完成。 应该是这个。 所以这个效果实是一样的。 这是我啊不手动去修改那个数值。 我完整的调用两次一一次这个函数下载。 哎效果也是一样的。 好这个视频就到这里了。
21. 好现在来录制上一个视频。 我们先打开啊。 标准库这边这个文件夹啊。 应该是到啊ADC遗留下来的一个例子。 就是ADC嗯。 是扫描的例子。 因为扫描模式上的啊。 那个规则通道的话啊。 他必须要配合DV来做数据转运。 要不就会存在数据覆盖。 好。 我们打开这里面啊。 这是扫描模式下的啊。 ADC转换嗯。 因为在规则图中啊。 存在着规则图中传说是扫描的情况的话。 意思是说他有多通道啊。 但是AADC在规则图中。 它只有一个寄存器来存放结果啊。 假如说没有用DMA。 在合适的时间内把这个结果结果转运出来的话。 然后转运那个转换多通道的时候。 数据就会啊被覆盖掉啊。 只会保留最后一个ADCADC转换的数值呃。 代码底下的话就是首先要啊配置好。 你要转运的啊。 需要需要转换的ADC转换的哪几个通道啊。 在我这里就配置了四个通道啊。 就跟这个例子跟前面也有演示过。 只不过这前面是用啊扫前面是用那个嗯。 用用那个呃扫描模式做的。 啊不对。 前面是用那个非扫描模式做的好。 然后底下继续。 然后初始化ADC啊。 初始化ADC的时候。 这里啊把这个例子设置为啊非连续的。 就是说我转运完一次之后啊。 我获取结果。 假如说还需要进行下一次转换的话。 还我还需要啊通过代码给他启动。 再让他再进行下一次的转运啊。 然后这里打开扫描模式。 意味着这是有多通道。 然后转换的是四个通道啊。 初始化DMA的时候有一个要注意的话。 就是原地址不能需要自增啊。 因为无论我ABC转换多少个通道。 它结果的话都是放在这个AABC杠。 DR寄存器这里啊。 比如说我这里要转换这几个通道啊。 七个通道他转转转换完通道二的时候。 他就会把通道二的结果放到这个寄存器这里。 然后呢DMA啊。 他应该是内部会通知DNA。 去把这个数据给转运出来。 会转运到这边。 这个数组是我们自定义的数组。 会把通道二的结果转运转运出到这里。 存放好之后呢。 然后再进行啊序列二通道五进行转换。 然后转换完之后也是放在这里啊。 这个寄存器这里放在这寄存器这里之后。 然后DNA再把这个寄存器里面结果搬运到啊。 通到五。 这个结果就是第二个元素这里啊。 就是呃它转换放结果这里搬运到这边啊。 这一整套的话都是在硬件层面就把我们做好了。 我们不需要手动啊修改代码来实现这些。 我们只需要配置好。 分别配置好ADC跟DA好。 把这两个关联起来就可以了。 还有底下的话就是ADC跟DNV。 它的通道搭配是有要求的啊。 比如说这里ADC1。 他只能用DMDMIE通道啊。 他不能用其他通道啊。 具体怎么搭配的话。 要看这个图好。 这个就是嗯呃ADC转换。 然后DNA搬运。 我们看一下实际的效果。 应该是啊。 这里有两个例子啊。 这两个例子的区别一个是单次。 一个是连续啊。 但是都是扫描模式啊。 都是扫描模式。 意味着就是这两个例子都是多通道的。 单次的意思就是说他转运网啊。 它那个转换并且数据转运完成之后啊。 你去获取结果。 然后假设还要需要进行。 下一次的话。 需要手动代码给他。 要连续模式的话。 你只需要启动一次就行了。 后面你啊想获取结果的话。 就直接去数组里面获取就行了。 然后他就内部一直循环啊。 做这个转换转运转换转运啊。 这样子。 那我们先看一下这档次的。 下载啊看一下这边啊。 这个是没问题的。 他是四个通道。 这里的四个通道他都正常获取啊。 这里的话就是因为是啊单次嘛。 所以我这里启动获取的。 每次都要通过这个软件啊。 通过都要通过这个软件来让它进行一次转换。 转运转换完成之后呢。 啊在等这个点没搬运完成。 然后外面的话才能啊这个显示结果。 就是说调用这个函数。 然后这这个函数调用完之后呢。 啊才能去获取里面的啊值。 然后显示出来。 然后下一次的话还要调用一次这个函数。 这个是档次扫描模式。 然后我们再看上一个例子啊。 就是这个啊这个是连续的。 就是效果跟前面是一模一样的。 只不过说啊这个是连续的。 前面前面那个是档次的。 这是非连续再下载一遍。 诶摄像头关掉了吗。 打开一下啊。 可以看到的话。 他那个结果跟前面也是一样的。 这效果跟前面是一样的。 好现在我那个看一下它的代码。 然后跟前面的主要区别的话。 就是说啊他这里在校准的时候。 只需要启动一次就行了。 就啊后面的那个main里面。 就直接对这个数组进行获取了。 所以这里面并相对于前面的话就少了一行。 让他启动转换的代码啊。 这个是连续扫描模式。 好现在我们用help库来实现一遍这个功能。 先打开这个新建。 然后是20啊。 我这里新建了一个。 我把这个先删掉吧。 啊就存放在这个文件夹这里。 这个是啊呃连续是不连续的。 这里连续是force是不连续。 扫描模式下的ADCDI。 然后就重办这个文件夹。 现在我们打开cube ide e。 这个标准库这边就关掉。 然后打开我help库的实现过程应该是到。 啊这里。 哎不对。 应该是ADC干爹啊。 没这个。 啊这个我刚删掉了。 我把它那个删掉。 我重新建一次。 然后是在OLED的这个项目基础上修改。 然后复制一下这个。 把它存放在这里。 A d c d m a。 就是非连续扫描模式应该是这个。 然后重命名获取这个名字。 村文明粘贴在这里。 好按照我这边的这个说明文档来操作这个啊。 非连续扫描DADC杠DNA啊。 首先的话打开ADC。 然后打开四个通道。 A d c。 然后我们选择四个通道。 0123啊。 对应他这里的引脚的话。 我都是接有呃。 借由这个外外面外面的这个对色传感器啊。 还有啊热敏电阻和光敏电阻。 还有电位器接到。 就是就是刚好是接在它这个引脚上面啊。 AA0A一A2A3啊。 就是这四个通道我们就需要转换这四个通道啊。 然后底下的话就是到啊扫描模式。 还有那个啊连续模式的配置啊。 因为我们转换的是四个通道。 所以扫描模式肯定是要打开的啊。 但是这里就就是打不开。 因为这个地方变灰色了。 它默认是关闭了。 现在打都打不开啊。 按理说我前面选择了四个通道。 所以这里的话应该是肯定是扫描模式的。 但是啊这里偏偏就打不开。 这是为什么呢啊。 这是因为底下还要把这。 先把这个底下这个先配置了。 这里要填四啊。 按回车之后呢。 哎不对。 没有回收。 然后点完之后啊。 这个就扫描模式自自自动打开了。 所以配置参数的时候啊。 不是按顺序来配置的。 它是要先把底下的配置。 然后上面的话他才允许你修改。 然后这时候的话你先选择非扫描都选择不了了。 这是正常的。 因为我上面选了多通道嘛。 所以这个扫描我是这里就自动打开了。 然后连续模式的话就先不用连续模式。 就是我每次的话都是通过代码来控制它啊。 启动好。 我再看下一个啊。 下一个到DMV的设置了啊。 DM设置他话他直接从里面进去就行了。 然后这里添加一个div啊。 选择ADCE。 因为你前面设置了ADC。 所以这里就可以选一个ADCE了。 嗯这边选一个正常模式啊。 这边的话呃他也那个这样写。 那本代码的话。 那个采购里面也有配置啊。 它对应的是那边的话。 对应的是这一行代码。 然后呢啊这边啊这边刚刚说的就是啊。 ADC的话。 它在规则图中它只有一个啊寄存器来重放结果。 所以这个字地址自增。 原数据源这边你选勾选的是勾选不了了。 但是这边啊目标这边是要勾选的。 然后他的ADC值是16位的。 所以选择这个半半字啊。 这个就是他DM的DM的配置好。 还有一个要配置这里爆红了。 是因为他的那个啊始终没配置。 我们根据前面的视频的话。 可以知道这里需要六分六分屏好。 然后现在就配置完了。 要八寸。 哦然后在幂函数里面先进行校准。 先调用那个校准的代码啊。 这个是对ADCE进行校准啊。 这ADC进行校准。 然后呢再进行下一个。 嗯找DMA的那个对象啊。 为什么要找这个呢。 我们先先跳过这一步。 直接到底下把这个函数超过去。 等下就知道为什么要找那个东西了。 好我们把这个函数复制。 前面这个其实就是啊那个标准库那边也有。 就是通过代码来控制它启动ADC转换。 并且啊让它内部进行DNA数据搬运啊。 这里我编译一次。 他肯定会报错。 因为它少了少定义了一个东西啊。 就是这里他ADC转运完成之后。 他判断它有没有转运完成。 是通过DMA的这个结构体对象来判断的。 因为啊他DNA搬运完成才才算真正的完成啊。 这个东西它在哪里呢。 我们在网上找它自动代码生成的时候。 也有这个东西呢。 只不啊他没开放出来。 我这里调用的话。 它是调用不了啊。 应该是在ADCE配置里面啊。 去找一下。 SADC吗。 哎我再返回看下是ADC还是DMA。 这两。 应该是ADC。 这边我再找一找。 应该在这里肯定有的。 Adc。 Exican figure。 按理说肯定在这个文件的。 在网上找一下啊。 就在这里在这里已经找到了。 就是这个啊。 这个结构体对象那边main函数里面要用的话。 我们转到定义看一下啊。 就说前面这个我妹那边可以可以使用。 但是这个用不了啊。 因为应该还要再啊。 这个的点C里面。 ADC点C。 ADC点H里面要做一个相应的修改。 我把先把这个拷过去啊。 要加那个instant。 嗯应该是ABCDH在这里啊。 发现他这个是自动炸了。 但是我顶上这个没有加。 所以我要手动把这个in turn把它加进去。 把它变成像类似于全局变量。 然后现在的话他应该就编译。 应该是正常通过了。 我再回到卖点C里面。 嗯没点C。 OK这个没问题。 就转完。 然后啊启动ADCDMA啊。 然后最终的结果的话是放在我这个数组里面啊。 等它转换完成之后。 我们这里就在外循环中调用这个函数。 然后呢底下直接可以显示了。 我们先显示这个固定字符。 然后再显示结果。 这个每一个结果都有一个单独的变量。 我们要定义拷一下过来。 O编译啊。 可以下载。 啊这个没问题。 一样的是一样的。 这个数值是一样的变化啊。 这个已经已这个就已经完成了。 这个是啊非连续扫描模式上的。 然后我们演示继续演示下一个例子啊。 就是连续扫描。 就是说我们不需要每次都手动的啊。 执行这个函数。 让它啊让他每次都都都都那个通过手动来控制。 我们接着接着下一个连续扫描好。 我们再新建另外一个文件夹吧。 为了区分它们。 我在这里再新建多一个例子的文件夹。 A应该是在这边。 应该是24。 连续模式上。 然后扫描的DMA。 然后这边的话就在啊刚刚这个例子基础上修改。 应该是这个。 布置良好状态。 用的是我这个名字。 ADC连续扫描模式。 嗯应该是。 DNA应该是这里这个有点乱了。 重命名。 把这个名字复制下来。 然后这里重命名。 把这个名字复制在这里。 确定。 啊到目前为止的话。 这个跟前面的代码是一模一样的。 我们要把啊这个模式啊。 连续是否连续模式配置成嗯。 连续模式就是让他自己自己转运完之后。 转换完之后自己来再次转换。 我们只要改这里就行了。 把连续配置OK应该就行了。 啊这个修改第一个要第二个修改的话啊。 DMA那边也对对应做修改。 DMA这边应该要把配配置成啊循环模式。 这个对应标准库那边也有个代码。 标准库那边同时通过这个啊代码来控制的。 然后我们这边只需要选择就行了啊。 现在我们保存。 啊然后呢就是啊他校准之后。 他校准之后呢啊这个教程之后。 我只需要调用一次这个让他就行了。 底下这个我就不要了。 应该就是这样。 就是底下那个我只要在这里启动一次行了。 底下的话就不用刚刚那函数。 让他每次都啊通过代码来。 让他那个呢应该这样就行了。 我们再编译下载。 true确定。 看一下。 闪一下子才是二。 哦这里出现黑屏。 这个是什么问题呢。 我这边也有介绍啊。 把上面的程序烧录进去。 发现没有任何反应啊。 这个问题我也找了好久啊。 这是为什么呢。 啊其实嗯因为ADC跟DNM是循环的模式啊。 就是它它内部自动循环。 它转运完一次之后又循环转转运一次呃。 这个他是转换也是非常非常快的。 一下子就转运完。 这个就执行这个AABC跟DI完成了。 然后我们DNA里面是默认打开中断的。 我们打开这里。 然后打开NVIC啊。 这总端是自动打开的。 然后打开之后呢。 因为每次啊转运完的话。 他都去触发一次中断啊。 这个单片机就频繁被一频繁被中断来控制。 就是说他没有时间去其他啊。 就没有这个时间去处理其他任务了。 所以main函数的话里面的话它就一直执行不下去。 然后他怎么去掉呢。 发现这里是去不掉的。 然后我们打开中断MVIC这边。 系统MVIC这边啊。 这里把这个勾去掉就行了。 这里是前置div开启熔断。 我们把这个勾去掉啊。 然后再把底下这个DM的这个勾去掉。 要么再回到这边。 这个勾就去掉了。 就把中段给关掉。 好现在我再编译一次。 再把它下载进去。 啊下载完成。 你看现在就可以了。 现在就可以正常显示了。 这个是啊连续扫描模式下的ADC。 还有DNA。 啊这个就是这样子。 然后这个视频就到这里了。
22. 好下面来录制上一个视频。 先打开标准库。 这边啊应该是到窗口了。 前面理论知识就不说了。 我们直接从啊他发送数据开始。 呃这个是接线图啊。 他要接一个USB转串口的这个模块啊。 这里我也接好了啊。 这是这边这个这个是ESP转串口。 然后右边的话就是STM32。 就因为我没有那个跳线帽。 我拿了一根线把它接了起来。 所以这根线有点长。 这根嗯这样写那边有点不一样。 因为他这里也只有个跳线帽。 我是用根一根线来代替了。 底下的话就是初始化GPIO啊。 因为这这里这个例子是的话是先发送的。 所以啊只需要先把那个PP9那个引脚啊。 初始化形了。 就pa9呃。 因为我pa9的话只是发送用的。 所以只出这pa9。 因为我没有接收啊。 所以这里就暂时不接不初始化接收那个音效。 然后底下的话呢啊就是设置波特率啊。 还有那个啊。 因为我这里嗯只是只是发送的。 所以这里当然是初始化发送模式。 假如说要接收的话。 后面还要还要多加一些代码。 等一下下一个例子的话会有介绍啊。 啊这里还有这个数据位这种嗯。 就是窗口的基本设置啊。 基本参数设置优势能啊。 在这里开始的话就是发送一个啊字符了。 就是发送一个字符。 像那个啊窗口发送一个字符。 然后嗯USB转串口模块收到之后。 他会转发给电脑。 有电脑打开窗口的话就可以啊。 收到这个STM32发给发出去的字符嗯。 哦底下应该是没什么说的。 我直接啊。 我直接通过他的例子来试。 应该是这里。 哦先屏蔽这个。 啊前面的话就是啊窗口的初始化嘛。 初始化之后就调用这个函数发送一个字符啊。 就是这个发送一个字符。 我们直接看效果就行了。 然后这里要先打开电脑的窗口调试助手。 这个是打开兼协提供的那个窗口助手。 我这里用的应该是。 我看到我这里USB那个转串口模块是识别的。 是串口机啊。 应该是串口六。 所以我打开窗口六。 然后96008停止位移。 跟那边初始化窗口时候保持一致。 打开。 好现在我在那个。 因为我发送的话。 他这里OLLE是没有任何显示的。 我下载再再查一次啊。 这边就收到了啊。 这边因为我发是发错字母A。 他这边为什么收到啊。 是11呢。 这就是这个译码的问题。 它发送的话它是发送原始数据的。 就是零十六进制的41。 但是我这边显示的话就显示的是原数据。 假如说你要显示啊。 这个咳咳A的话是可以显示文本。 就这是我这边发送是发送的是A。 然后发送之前他会把这个A转化为啊这个编码。 把它转化为0X41。 就是原数据发送过去之后啊。 像刚刚我没选择的话。 还是选原始数据的话。 它就显示11啊。 这是我写文本数据的话。 他就通过E嘛。 然后就转换成A啊。 现在我来再来试次。 那我重启就行了。 啊这里就收到一个A。 然后呢继续我把这个拉小一点吧。 三个窗口都可以看到。 然后发送一个数组。 下载编译下载。 等会。 清空啊。 这第一发送这个还还没有。 然后一下载啊。 这个是没问题啊。 啊这个还是密码的问题啊。 这里已经接收了那个文本。 就是他把那个原始数据转换为啊它的啊。 一一已经通过译码转换成这个字符了。 假如说你还想要显显示原数据的话。 可以这样子。 我再再来下载一次啊。 现在就可以了。 就已经啊显示跟这边一样的。 这个是发送啊。 说猪的。 我们连全部来验证一次。 然后在help库那边来实现一遍这个功能。 这些这些功能。 I发送字符串。 啊这个还是一样。 我们用文本模式接收。 再来重启一下啊。 这个没问题。 然后DESIG到发送数字。 先清空。 然后发送数字。 啊这个也没问题。 2023 12月零二。 没问题。 接着往下啊。 这个是重定向的问题了。 这是我重定向。 那就可以用这种嗯格式符输出。 它指定的这种格式好。 现在我编译。 要加下载啊。 这个也没问题。 也是啊。 先换行嘛。 然后这里就换行了。 然后就是输出一个啊。 M与M等于。 然后这后面是格式。 就是浮点数嘛。 然后这个是整数啊。 上面是按这个格式输出。 这个也没问题。 要接着网上验证。 啊底下是重定向啊。 这个重定向已经验证了。 是这个不。 额应该是到。 啊也是应该是到汉字了。 前面那个跟刚刚这个是一样的啊。 清空编译下载啊。 汉字也是可以的。 不过这边还是要选择这个嗯文本模式。 好这个是啊。 标准库这边实现的。 我们用help库来也也来实现一遍这个功能。 我讲了这些话。 然后在这边新建一个。 啊这个也就用这个吧。 二次不usa art发送。 要我打开Q8电音。 啊打开的开的时候有点慢。 我们先打开我的操作步骤。 不是应该是这个文件夹啊。 发送数据。 要大家按照这个操作步骤来演示。 然后呢。 我们在OLED显示屏这个项目基础上修改。 嗯把它放在这里。 这个名字复制。 把它粘贴在这里。 啊因为我这边接的是PA9跟P10。 其实的话它它硬件。 它外设里面的话就是创口1USART1。 应该是这里啊。 这个P9P10应该是在。 fa9可配十是在哪里啊。 我看下啊。 我直接打开吧。 等下这边就显示出来了。 模式的话选择这个。 好在最后边ph compass这里就显示出来了。 然后底下只需要设置窗口的一些。 常规参数就行了。 9600。 然后八位。 然后校验的话没有停止。 位是一好。 这个就已经配置完了。 然后保存生成代码。 然后在main c里面就可以写发送啊。 接发送这些代码了。 我直接在这里。 这个拖小一点。 啊我写在这个函数里边。 这个是发送一个一个字节的。 然后底下是调用。 我就在这里调用吧。 好现在编译打开摄像头啊。 应该不是打开摄像头。 他摄像头没什么看的。 应该是打开这里清空。 然后下载。 哎这个人啊。 我再清空再来次再来一次。 那个2A刚刚是显示了。 但前面还有一个之前遗留的数字。 啊这个没问题。 删除A嘛。 然后就可以哎呀就发过去了。 然后接着发送数组。 我们一个来验证。 然后它的数组的话就是这个也是一样的。 编译清空这边。 然后下载看效果。 啊这个没问题啊。 假如说你想跟这边显示原始数据的话。 跟刚其实是一样的。 就打开这个啊原始数据。 然后这边我在重启一下STM321后。 他就重新执行那个代码了。 我现在重新按一下。 先清空嗯。 啊这个数据就是这里的原始数据。 然后解决上一个。 摄像头可以不看。 因为摄像头的话没什么看的。 然后发送字符串。 啊。 这些都是直接从江协那边的代码直接抄过来的。 按理说主要改的话就是改了这里啊。 改了这个地方。 其他的话都是一样的。 我们一个一个来验证一遍。 这个是发送字符串的。 清空ADA。 啊这个应该要选文本模式的。 这里选错了。 等下显示肯定有点问题啊。 应该选文本模式的清空再来下载一遍。 啊这个也没问题。 接着发送数字。 然后呢就直接调用就行了。 清空。 然后这边。 啊这里应该选择啊。 这是数字。 就这个没问题啊。 底下就到重定向了。 这边重定向的话跟那边只有一点点区别啊。 我们需要在这里面打开它浮点数要不咋说。 不打开的话。 它浮点数的中立线的话。 它是有点问题的。 先选择这里。 然后诶干掉索性。 然后是在C加加。 然后设置。 然后是工具。 MC有设置这里啊。 这两个要勾起来应用并关闭啊。 这只是第一步。 然后第二步的话写这个重定向的函数。 啊在这里重定向。 然后design就输出这三个嘛。 就通过重定向来输出。 好打开窗口助手。 喂有错。 我看下。 哦这好像又包含头文件。 应该是包含那个string头文件吧。 我这里没说。 我帮忙看下。 看有没有那个头文件。 有第一。 还有车我开下。 哦刚才我找了一下。 应该是要添加这两个头文件才可以。 我们应该在这里啊。 这个string其是不用的。 应该是添加这两个好。 我在这边记录一下吧。 要不后面看这个笔记笔记的时候看不懂。 好把它放在这里。 就这样。 然后这边应该就可以了。 然后编译啊。 先打开窗口助手下载。 啧好前面这两个数是可以的。 但是底下这个我们要用这个UTF杠八才可以。 这中文这里。 好这个就是这样子。 让我看看有没有。 好应该没了啊。 这个是单单是发送的。 然后这个视频就到这里了。 上个视频就说啊。 就是他窗口接收的。
23. 好现在来录制下一个视频啊。 应该是到窗口的接收数据了。 我们打开啊。 窗口的接收数据跟前面发送的啊。 在代码上的话主要只有上面几个差异啊。 第一个要多初始化接收的引脚啊。 因为前面只初始化了啊。 发送的引脚。 那个接收的引脚没有发没没没没有初始化。 那所以PS4要重新初始化。 然后嗯这里发送的话是用用的是上拉输入啊。 这是接收接收的数据。 又要用上拉输入。 然后初始化呃。 这个USART的时候。 需要把这个接收模式啊并上。 就是说带上这个接收的啊。 前面发送的时候是没有后面这一段的嗯。 他接收数据的有两种两种办法。 第一种说法是查询法。 就是啊用外循环不断的去判断它的一个啊。 寄存器的标志位啊。 查说有的话他就从完整区里面读取数据。 并且显示出来。 然后第二种话呢是中断法。 我们先接从代码里面看吧。 然后就是窗口接收。 就这里。 啊打开may。 啊其实这里就读一个标志位。 有的话就获取数据。 主要的话是我们看下里面啊。 这个是串口的中断啊。 中断假如说啊说窗口是收到数据之后。 就会进入这个中断。 然后的话啊。 就把这个数据从缓存区里面读取到这个变量。 这里啊。 这个是我们啊前面定义的。 应该是在啊这里定义的啊。 中断进来之后。 就会把收到的数据存放到啊这个变量这里。 然后把标志位置成一。 然后再清空啊。 清空这个呃i it标志位啊。 这个标志位是我们自定义的啊。 我外面读的话就读取。 你看你这个有没有有没有收到数据。 因为我这里收到数据的话是一啊。 只要收到数据的话。 外面读到的话就可以去啊。 返回让他读取这个收到的数据了。 好我们看下may这边啊。 收到数据之后呢。 他就去读去获取数据。 然后显示出来啊。 然后就是这里显示出来。 然后再通过串口发送回去。 好我们看一下这边。 一说我发送数据给STM3号。 3号收到之后又返回又返回给电脑电脑。 然后这里就显示出来啊。 我们现在来啊。 这边下载。 然后摄像头打开。 啊这边没有。 我买车。 我把可以发送过去。 A我应该是用文本模式发。 然后上面的话收到也是A。 因为上面也是用文本接收。 假说我用的是啊16进制解锁的话。 应该是显示41啊。 再来一次41啊。 底下假如说我发41的话。 也是一样的。 发41用原始。 然后上面用原石的话。 收到41。 尝试用文本的话。 应该会收到A啊。 这个是啊表重复这边的实现办法。 然后最小化我们用help库来实现一遍。 这个功能要在这边新建一个文件夹。 26。 RRECB接收。 然后这边的话我就直接在发送这个基础上修改。 这里。 复制把它放在这里。 哎发送应该是这里重命名。 哦已经可以了。 哦错了。 应该是上面接错了。 这里复制错了。 这两个有点搞混淆了。 你看这里重命名。 要按我所选的这个操作步骤来。 我想打开我help库这边的这个操作步骤。 应该是接收。 好这里需要打开终端。 因为我是用中断法接收。 然后中断的话选择这个窗口一。 然后按VRC这里勾上这个就行了。 好然后这个这个可以保存就可以了。 然后呢我们就去里面找它的接收中断函数啊。 找它的回调函数。 应该是在啊去这个i it里面去找。 然后找到最后啊这个哎。 介绍。 艾特没有吗。 我得再看一下。 看有没有打开那个中断。 哦这个没打。 这怎么刚刚没勾上呢。 保存。 然后在这个it里面去找啊。 就是这个啊中断函数。 我们去里面找到它的回调函数啊。 我直接在底下找。 我应该是这个是接收到一半的回调函数。 就是说他啊接收数据的。 接收到一半的时候会调用这个回调函数啊。 这个就是真正的接收完成CP就是company。 就是完整的意思啊。 把这卡数拷到may in那边再重新写一遍。 啊放在这里吧。 幺五机也就在。 啊这里接写里面吧。 我在在在。 然后底下的话就是OLE。 在main中就调用就行了。 就清这个清空L1。 然后这个代码就是启用中断接收。 接收的话它是存放在哪里呢。 啊我们要定义一个接收的变量。 接收的东西。 啊通过串口一。 然后通过啊接收接收存放到这个变量里面。 然后只接收一个字节啊。 这个已经接收了。 然后我这个就考上来。 这个也拷过来。 啊意思是说我may main函数里面的话。 首先首先要打开终端接收接收的地址啊。 要传入这个数据的地址。 后面结果他们就会放这里啊。 接收完之后啊。 它就会调用这个回调函数啊。 当它调用回调函数。 其实结果已经存放到这里了。 要回到函数里面啊。 做一个功什么功能呢。 是复位这个标志位啊。 通知通知这个外循环里面哎。 说已经收到了。 然后你就可以去用了。 然后底下嗯嗯还要再去啊。 调用一下这个终端。 为下次做准备。 咳咳啊。 这行代码跟底下这个代码是一样的啊。 只不过呃这个是为下次做准备的。 其实他第一次调用函数到这里的时候呢。 他的结果这个已经存放到这里了。 已经有这个结果了。 要不我现在编译没有报错。 看下。 哦这个应该放在前面。 介绍。 哦应该还要显示一个固定字符串。 这个没拷过来。 啊这个已经可以了。 然后我们打开窗口助手发送一个。 看能不能收到。 并且并且返回来。 41清空41啊。 这是没问题。 这边收到的41。 然后我发送A用文本模式发。 然后上面也是用文本本十分是吧啊。 这个也是一样的。 发送B的话啊。 这边是12啊。 这个是没问题的。 跟标准库那边是一样的。 好这个视频就到这里了。
24. 好顺便来录制下一个视频。 应该是到呃接收数据已经录了。 然后应该是首发数据包呃。 收发数据包的话。 他这里有两个例子。 一个是啊原始has数据的数据包。 另外一个是文本数据的数据包啊。 这个原始数据数据包的话。 他又提供了两两种办法。 一种是啊固定包藏。 包含包头和包围的。 还有另外一个是可变包场。 包含行包头包尾的后好。 后面这个的话简写那边没给出例子啊。 我们主要是看前面的这个啊。 固定包仓。 固定包。 固定包场含包头包尾的啊。 它的它的原理就是在发送之前的话啊。 添加一些啊固定的特殊的这种字符。 比如说这里啊中间这种是原始数据。 你在前面加上一个0sf2F啊。 在后面加上0XF1。 加上两个特殊的16进制数啊。 就比如说这里你需要发送的是啊。 这个数组里面的数据啊。 发送四个啊。 你在前面先发一个啊。 特殊的趋势应该叫做磁石。 其实特殊的数据。 然后后面又发这个特殊的作为结尾啊。 这个是发送的嗯。 然后呢底下接收接收也是一样。 就是啊比如说他像他这里的话呃。 接收在中端接收就跟前面的接收是一样的。 只不过说在前面的基础上。 加上了一个类似状态机的东西啊。 它标志的一个啊静态的变量。 就是嗯应该是这个静态的变量表明它的状态。 只要他接收到第零个字符的话。 他肯定是去判断它是不是啊。 我这种这个数据包的包头啊。 假如四的话。 他就直接跳到下一个状态啊。 因为这个只是爆头。 它不会啊存入我们实质要的数据。 然后当第二个字符过来的时候。 就是才是我们实际需要的。 我就把它存到这个数组里面啊。 这个状态一直持续到四个。 然后就啊到最后一个判断他是不是四的话。 就跳出去。 表示已经解锁完成啊。 后面的情况下它的标志位啊。 这个假说读取完成了之后呢。 我们就可以把它显示出来了啊。 就是这样的一个例子。 好像我们先演示一遍。 这个效果是怎么样的。 应该是这个。 好先打开它的一个串口调试助手。 改在这里。 波特率选九六啊。 com6960D差不用变。 就是这样。 要我下载编译。 啊调整一下窗口。 然后打开摄像头。 啊啥子。 啊这里就已经啊发过来了。 他执行之后。 他就是把这个原始数据发送过去啊。 他在前面加上了F跟F1啊。 我们可转到这个定义里面看。 就是它在这个原始数据包里面加上啊。 前数据头跟数据尾这种特殊的字符。 好现在假如说我也按这个格式把它发送过来。 我假设我0567把要发送过去。 发送过去之后。 他就会进入啊。 刚刚那个中段那里应该是在这里啊。 进入中断。 然后他就按照这个啊状态机来执行。 然后搜完之后接收这个状态机。 运行完之后。 它就会把这个标志会变成一。 然后may may中读到这状态一的话。 就可以去把这个数据给打印出来了。 好我们看一下。 这边好。 现在我就发过来了。 直接发过去啊。 这边是没问题的。 5678。 然后这边也是显示5678。 把它显示到这里啊。 这个是额固定啊。 这个包含这个就是发送数据包的固定包仓。 包含包头包尾啊。 这是第一个例子。 然后呢我们接着演示第二个例子。 呃是发文本数据的。 呃发文本文本数据的话。 它是直接可以发字符串。 所以就不需要呃那个像刚刚那样发源数据包。 在前面前面弄一个八头跟八尾。 然后发送字符串。 然后收的话它是怎么搜呢。 啊说的话跟前面也是类似。 也是弄一个状态机啊。 就是你发送的时候需要加上这个特殊的字符。 艾特这个特殊的字符啊。 以这个为开始。 然后啊我们以这个换行为结束发送过来。 然后他这个状态集里面处理啊。 等收到这个字符的时候。 这个状态机啊就说呃启动接收下一个。 下一个的话。 假如说是换行的话。 他才跳过。 他不是换行的话。 它就把它存到这个数组里面。 一直一直到换行的时候。 他才把这个标志位变成一。 变成一之后。 may里面就可以把这个数组里面的数据给读出来。 嗯啊这里还有一个注意的话。 就是他接收完之后。 一定要把这个啊字符串后。 在最后要找那个斜杠零。 因为字符串的话是以这个斜杠零作为。 结束的标志的啊。 好我们现在去演示一遍。 应该是数据包文本文本数据包。 啊直接发送过去。 就之前几之前说的。 就是可以直接发。 因为他这本身就有一个啊。 前面就封装了。 一看是不是发送字符串的。 二先清空清空。 我这边接收的话是用文本。 因为啊他这里发送的是文本。 我再来下载一次啊。 这个你好。 世界已经收到了。 然后我这边发送。 这边接收的话就需要啊用指定的格式。 就是刚刚我们看看的是这边接收接收中断的。 这边这个流程以这个为开始。 以换行为结束啊。 他收到之后就就设置个标记为为一。 然后这边读到的话就可以把它显示出来。 好现在我就按这个来开始一个。 这个是起始符。 我随便吧。 随便发三个字母。 还有一个换行啊。 一个回车。 他一个一定有一个换换行才行。 要我看一下摄像头。 这边。 发送。 啊这边要以文本模式啊。 这边就可以了。 发送也是要文本模式啊。 我看一下这边是QWE。 这边应该也是没问题的。 这边就是标准库的这两个例子。 好像怎么用help库来实现一遍这个功能。 应该是到27了。 就叫做原始数据包吧。 然后就打开这个。 打开Q8IDE1。 然后我们啊打开我的这个操作流程。 就按我就按照我这边的这个流程来操作。 啊这个大纲视图不要了。 然后就在我昨天的这个项目的基础上。 就发送了哦。 在接收的基础上吧的修改。 然后把它存放到这里。 重命名。 把这个名字复制上。 把它这个也对应修改。 啊GIOC里面目是不需要改。 因为前面我已经对这个窗口进行过初始化了。 已经配置好了啊。 这些是不用改的。 我们只需要在啊made点C里面去对对。 做相应的修改就行了啊。 第一个的话就是啊。 写那边那个函数就发送函数啊。 发送就发送数据包。 它是不啊。 前面这些可以呃。 呃。 我看下发送这个数据包是要的。 就写这个发送数据包。 就是在前面跟后面加上一个一个特殊的啊。 特殊的数据。 然后呢啊就到接收了。 接收的话他还是用啊。 之前那个中断函数。 只不过说它这个中断函数里面有一个状。 类似状态机的东西啊。 需要在。 嗯需要定义两个接收的接收的变量。 然后底下的话就是呃可以先把这个段拷过来啊。 这个是状态记的内容啊。 意思就是说咋说啊。 窗口收到数据的话。 它就会来啊触发这个触发这个冲断啊。 他是来触发这个中断的时候。 表示数据已经收到了。 并且它是存到了啊这个变量里面啊。 后面我就是把这个变只需要判断这个变量啊。 是什么数据。 就可以控制这个状态自己运转了。 假如说是开始的话啊。 它就跳过。 就别说数据已经开始接收了。 然后下一个的话。 我就需要啊存入我的这个数组里面了。 嗯然后第三妹的话就调用。 这个暂时不要了。 这是。 啊把这两个拷过来。 啊这里是说打开中断接收啊。 搜到哪搜到哪个地方呢。 就搜到这个啊。 变量里面他只收一个字符啊。 这个变量就是这里定义的啊。 当这个终端进来的时候。 其实它第一个数据。 数据的结果已经获取到这个变量里面了。 后面我们在这个状态机里面。 直接或直接获取这个数据就行了啊。 然后底下的话就收完一次之后。 还是要调用一次。 这个为下次做准备啊。 这个在前面接收的时候啊。 也有说过这个问题。 嗯好DESIG就没了。 DESIG就可以直接啊用跟那边一样发送。 然后呢这里读到读到之后呢。 读到这个标志位之后啊。 它就可以啊显示出来了啊。 我现在编译一次。 啊是没问题。 然后我嗯打开窗口助手清空。 这个是16进制。 16啊。 16进制。 把这个删掉。 然后把它下载进去。 好这个已经发过来了。 诶我看一下。 再来一次。 他怎么前面多了一些数据的。 啊这个就正常了。 就是这个是磁石吧。 这个是结束。 中间这个就是我们需要的数据。 我们按照这个格式再给他发回去。 1.4568吧。 要发送啊。 他这边就对应也接收了。 所以这个就是啊什么固定包藏。 含包头包尾的这种模式发送啊。 这种是原始数据过去。 然后他这边对应接收好。 这个是啊。 第一个好。 现在我们来做第二个例子。 第二个的话我们还是新建一个文件夹的存放。 应该是28。 应该是文本数据。 嗯然后这边也是在这个呃。 在这个基础上修改吧。 刚刚也是这个接收。 我们现在也是在这个基础上修改。 PSE这个。 然后呢就文本的数据包接收工发送。 好然后改一下他的IOC。 啊IOC里面还是跟之前一样不用配置。 因为啊之前已经配置过了。 在这个项目上已经配置过它的啊窗口窗口了。 然后我们只需要在MDC里面做相应的修改。 就行了。 啊看下这边这个流程应该是文本数据包啊。 这个是啊。 这个标志位用来判断是否已经接收完成。 而且被读走了。 这这跟标准库那个代码是一模一样的。 我们再把它拷过来。 应该是在这里吧。 然后呢底下的话就是这是一个状态机接收啊。 这跟前面是一样的。 就是这个中断里面啊。 我直接把他拷过来了。 哎考到这里来。 啊也是一样。 以这个开始。 然后以这个结束啊。 搜完之后需要给它多添加一个啊。 斜杠零作为字符串的结束啊。 还有这里呃。 接收完一个字符之后。 需要再再次调用这个为下次接收做准备好。 然后底下我就可以直接直接用了这个。 啊发送这个发送就不用像刚刚那样。 在啊数据前跟数据后各多发送一个特殊字符啊。 发送发送字符串的话。 它本身就有一个函数啊。 这个也在前面发送的那一个视频中已经讲解过。 有Y总就可以去判断这个标志位是否有。 有的话就把它显示出来。 好earth还有错误。 看下。 啊重定义哦。 上面也有。 我把上面这个注释掉。 不要了。 这个也不要了。 啊可以了。 然后我就。 下载。 打开摄像头。 打开窗口。 这首清空啊。 这里有版本。 选择文本模式。 我底下还要选择UTF杠八。 然后我接启重启下这个HTM上啊。 这边已经收到了。 没问题。 然后我这边发送的话。 要按里面的那个规则来。 AABCDEF要换行。 放松好。 我这边也要用文本模式啊。 这个就是没问题的。 A b c d e f。 然后这边就对应着接收了。 然后那边的例子就讲完了啊。 其实的话它里面本身这个help d库。 里面就有一些函数啊。 是关于接收这种啊那个数据包的啊。 就不需要像标准库那边啊自己来处理。 就是接收完一个字符之后。 把它存入我们数组里面。 再接收一个字符。 就一个字符一个字符的处理。 它里面本身就有一些函数。 专门是用来接收啊那个数据包的。 比如说啊它有一个中断叫做接收空窗口。 接收空闲中断。 就是他收完一个数据包之后呢。 他就空闲了。 他有空闲的话。 它就会触发一个中断。 我们只要在中断里面把那个数据。 一整个数据包给好。 获取下来就行了。 好现在我们来演示一遍。 应该是。 我们再新建一个啊项目网。 29应该是叫做IIDLE1。 啊他专门有一个中断来处理这个东西的。 OS打开。 然后在Q版D1里面。 俺也是在在这个基础上修改吧。 把它放到这里。 重命名。 聪明明把它粘到这里。 啊。 首先的话我们先在M点C里面定义一个啊。 需要接收字符串的一个数组啊。 这个中断就不要了。 这个是接收完一个字符之后整体的一个中断。 这个不要了。 然后我们啊用这个方法来啊。 先定义一个需要啊接收数据的一个数组。 然后底下的话就需要啊调用这个函数啊。 这个是这个函数。 就是可以一接一个一整个数据包的啊。 这个嘞额他的意思是什么呢。 第一个的话就是啊窗口是哪个窗口。 然后就是把你数据包的那个数组传到这里。 这个是首地址。 应该就是它的啊数这个数组名名字。 然后最后一个参数的话就是最大接收的长度啊。 我就是我定义的一个数值100。 所以就对他的数组进行一个size of。 这里应该是100。 就是我最大接收100啊。 这个解释完了。 那我怎么知道他什么时候解释完了。 他所以他提供了一个中断。 就是空闲终端窗口空闲的时候会触发这个终端。 意味着它接收完的时候就会触发这个中断啊。 我只要把这个中断给复制上来就行了。 然后在这里。 啊他接收完之后我们还是一样。 字符串后面还是要加这个啊斜杠零啊。 作为它字符串的标志。 然后这个的话啊这个就有了。 这个是读取它这个一个标志。 就已经全部处理完了。 然后may总就可以去判断它啊。 假如说有的话。 就是把它可以把它显示出来。 这里有这里还要发送一点数据给窗口。 啊这个只有现成的函数。 就不需要我们啊。 像标准库那边一个一个的处理好。 我们再打开摄像头啊。 在。 嗯在这边。 啊这边已经发过来了。 我啊像刚刚那样。 还是这样发回去给他发送。 啊这个是不需要换行的。 它换行这里乱码了啊。 我这边就不需要换行了。 因为我就没有那个一个一个字符那个处理啊。 这边就是直接写数据就行了。 我这个70其实也是不要的。 啊这边就对应解锁到显示出来了啊。 这个是嗯它里面专门用于啊接收啊。 不定产数据包的一个一个函数。 好底下还有一个。 呃打开这个大概试图看下啊。 这个已经说了。 也他也可以用这个DA来实现。 就是在这个基础上启用DMA来解锁数据。 就在这个基础上。 就专门写一个函数的接收数据包长度。 在这个基础上通过DM来实现好。 我们来演示一遍。 也还是一样。 新建一个文件夹。 其方法是一样的。 就是那个中断的名字要改变一下。 就是30来1DODV吧。 让我们在这个基础上修改。 啊不对。 重命名。 这里把它复制。 涨停在这里。 啊然后可以了。 然然后根据我这边这个文档来。 首先的话要打开DMI吧。 然后这边。 应该是在窗口那里。 依然后打开DMI。 这里需添加一个ax接收的。 然后底下就用标准模式就行了。 然后这边就不用改。 还是要维持原样就行了。 好底下的话还是回到M点C这边啊。 先保存。 让它生成代码。 先。 啊就是。 我们只需要改一个函数就行了。 就逻辑的话跟前面是一样的。 这个终端也是一样的。 我们只需要把这个接收啊。 一直到空闲啊。 后面要加多点DI。 就在前面的基础上多加这个DMA就行了。 好我们就接把这个单单把这个DMA给复制吧。 A点C点。 啊就是哎是怎么样的哈。 把id换成DNA。 啊。 然后它上面也还有一个。 就是第二次做准备的时候啊。 还有一个要注意的话。 就是用DNA的时候。 那个数据接收到一半的时候呢。 它也会进入进入这个中断。 所以我们要屏蔽这种情况。 因为解锁一半的时候。 我不喜欢他进入这个段。 所以要添加多一个代码。 就是把这个啊给他禁用掉。 就是接收到一半的时候。 不要给它进入我的这个中断里面。 然后上面也是要一样的。 就在这个地方为下次做准备。 那应该就没了。 其他应该就是跟前面那个例子是一样的。 好我们还是演示一下效果啊。 虽然这个效果跟前面应该说是一模一样哦。 哦这里有点问题啊。 因为这个DA这里它读取不到啊。 我们还要去这个找一下。 这它自动生成这个DA。 在这个结构对象里面应该是在这里吧。 好在这个地方我们要去里面声明一下啊。 窗口这个在外面已经可以读到了。 但是这个读到我们肯定是要在他的这个卖点。 这个点H里面。 USD群里面啊。 这个他声明了。 我这个没有。 就我这里加exs turn。 就相当类似这么这个变成全局变量的意思啊。 这个没问题了。 我下载。 啊这边已经发过来了。 这里怎会怎么有一个特殊字符啊。 我看下。 打开may点C这边怎么有一个特殊字符啊。 我这里本身就有。 我把它删掉吧。 然后呢再来编译一次。 清空打开摄像头。 啊这个就正常了。 然后呢发送Q123哈。 这样发送过去啊。 这边也是对应能接收到啊。 这个是通过DNA来接收不定长的数据包的。 好这个就是这样子。 我看这边啊已经没了。 好这个视频就到这里了。
25. 好下面来录制上一个视频啊。 打开我标准库这边呃。 应该是到软件IPHONEC操作MPU6050了。 MPU6050的话。 它是一个六轴啊。 姿态传感器它有三个轴是XYZ的加速度。 还有XYZ的角速度啊。 这里用软件IPHONE10I啊。 读取MPU6050的这六个啊。 六个啊。 六个加速度。 还有角速度啊。 六个传感器的数据把它读出来啊。 用软件的意。 用软件IFC。 意思是说他用两个IO口来模拟啊。 IPHONE4的时序。 来。 使得STM32跟这个MP166050。 进行一个通讯。 嗯我们直接看下效果吧。 他理论知识的话。 这里就跳过了理论知识啊。 这边有点多啊。 那个简写那边已经说的很清楚了。 我这个理论知识就跳过了。 直接看下它的实际效果。 老家FC。 啊偏移稍等。 A。 没插上吗。 查一下。 编译好。 下载可以了。 打开摄像头看下。 啊然后呢他就啊算出了啊。 六个六轴的传感器的啊。 一个数据出来呃。 它左边的这三个的话。 它是是它三个轴的加速度。 右边这三个的话啊。 是它的一个角速度好。 我们一个来看。 这个是第一个是啊X轴的X轴是这个方向啊。 这个方向的一个啊加速度。 因为我这个是静止的。 所以第一个跟第二个都接近于零啊。 X跟Y的加速度是零啊。 但是这一轴的话。 因为我是有重力重力的作用。 所以他在这轴方向有一个重力加速度啊。 重力加速度它啊返回来的这个模拟量的值的话。 大概是2000左右啊。 大概是2000左右。 我们可以通过一个换算。 可以直接算出它的重力加速度啊是多少。 他怎么算的呢。 就是模拟量是啊。 大概是2000左右啊。 它的取值范围是这个啊。 然后我们在程序里面已经设置过它的一个啊。 最大量程啊。 就在PU00初始化里面里面。 有设置它的一个最大量程啊。 就是这里啊设置它的最大连城是正-16G啊。 就正-16值对应的数是这个。 然后我们可以通过一个比例比例的换算啊。 就可以换算出这一周的这个加速度。 重力加速度大概是1G左右啊。 跟我们常识那个基本吻合。 大概是1G啊。 这个是0.97G啊。 约等于1G。 所以他这个啊啊MP6050。 算出来的东西还是比较准确的啊。 右边的角角速度的话。 比如说是这里啊。 角速度只有啊这个MP16050。 绕着某一颗轴转的时候。 它这个数才会才会变大啊。 要不它是静止的话。 还是接近于零的啊。 比如说我绕X轴转的话。 这个数在啊。 你要绕着它转。 转的越快的话。 这个数值就越大。 才停下来的话。 它就是零。 我们可以试一下。 啊这个是应该是Y轴的左绕着Y轴转对啊。 我撞的时候呢。 它中第二个数啊。 就这里这个数的话。 它是会变大的。 我停下来了之后。 他就又静止了。 这个是啊角速度啊。 这是MPU6050。 还有一个重要的一个啊常数就是他的啊几个角。 就是俯仰角。 还有啊。 还有偏航角。 还有一个翻滚角啊。 这个就是后面后面后面的一个啊。 姿态解算DMP的时候啊。 再演示一次啊。 这个是通要通过这几个来计算得到的。 好我们啊这个就演示到这里有啊。 底下的话我看到啊。 硬件IPHONEC的话。 跟这个软件它实现的效果是一样的。 所以这里就不不演示。 硬件IPHONEC操作6MP16050了。 现在我们就直接在啊help库中来实现一遍啊。 软件IPHONEC来操作MPU6050。 把这个六个轴的传感器的啊。 相关数据读取出来好。 首先我们在这边新建一个。 啊之前我已经见过了。 我先把它删掉好。 然后打开Q8DE1。 啊在打打开的时候。 我们先打开我这边客户的一个操作流程软件。 IPHONEC操作mp16050。 额标准库这边的话呢啊它也是用两个IO来啊。 操控这个M这个模拟IPHONE4的时序的。 具体用哪个IO呢。 我们先看一下。 就在标准库这边。 应该是在初始化这里。 然后软件IFC初始化啊。 应该是在这个函数里面。 我去找到这个函数的实实体。 应该是在这里。 啊在这里啊是PB是PB10。 还有PB11啊。 就用PB10跟PB11来啊。 作为软件IOC的一个时钟信号。 还有SDA数数据信号。 然后啊就是PB10是用作时钟。 然后啊PV11用作SDA数据传输数据的啊。 我们这边这边点一下也是用这两个IO就行了。 跟这边啊对应起来。 好我刚刚本想把这个删掉。 先。 然后呢在OLED的这个项目基础上修改。 要复制这个已经超过好多遍了操作。 然后粘贴。 然后我把它放在。 放在这个文件夹上。 软件iphone c mp16050。 放在这里。 然后项目名称的话就用这个复制。 啊就这里。 然后。 把这个名字弄到这里来。 啊我就按照这边这个步骤来。 刚刚已经分析过了。 他用的是啊PBPB10。 还有。 PB10还有PB11吧。 这边PB10还有PB11啊。 他这里两个都是啊。 设置模式都是开漏输出。 然后我这边就可以对应的进行一个修改。 先打开哦。 GPLPB10跟PB11先设置输出。 PB4在这里呃。 输出PB11也是输出。 然后PB10的话就是啊。 然后这里先默认电瓶是高电平。 然后这里选择的是开漏输出。 呃然后速率选一个最大的吧。 然后标签的话。 我看我这边用的是什么标签。 应该是HSSL咯。 S c l。 Pb10。 我看一下这边十的话是CL路。 对的没问题。 然后底下的话啊一样开漏手出。 然后高速率AHS。 SDA啊。 SDA信号啊。 对应这边的SDA啊。 PB11啊。 P b c。 OK可以。 这样就可以了。 把两个IO就初始化完成了。 然后接着啊就需要把啊标准库这边的呃。 一些关于MP16050的一些地址给拷过来。 我先打开标准库这边。 应该是刚刚那个例子。 应该是在这里。 mp u6050啊。 把这些先拷过去。 哦分开吧。 C1跟DH分开。 我然后把它拷到这里来。 这个是点C文件啊。 这个是点H。 唉然后呢还要把啊软件IPHONE7的一个通讯时。 通讯啊。 通讯驱动给拷过来。 这个是软件IPHONE系的操作。 就那种嗯起始位啊。 还有应答啊。 这种这种函数给拷过来。 然后就可以了。 我们就可以对这边进行修改。 然后根据我这边啊导进来之后呢。 好再导进来之后就可以先修改这个点C的文件。 啊修修改这个驱动。 然后上面的话这两个是没有了。 因为他是引用标准库的。 这个我想删掉啊。 然后它这里ACLL这个引脚写电瓶的话。 我们不用这种模式。 因为这个是标准库那边操作IO的方式。 我们用的是啊。 底下这种用help库里面的这个来操作。 然后呢上面的这个是电瓶状态。 把它放在这里。 参数也要修改下啊。 然后SDA也一样。 SDA就操作SDA的IO。 啊把个这个屏蔽掉。 还有读SDA的这个也要这个也要屏蔽掉啊。 用help库的这边的这种模式来。 啊就是读PPB的这个信号啊。 然后这个的话就初始化初始化这个这啊。 呃标准库那边是初始化GPIO。 其实就我们在还有点LC连配置过之后呢。 他在may里面已经配置过了。 所以这个我们就可以直接忽略掉了。 然后这里是把GPL设置成高电平。 我们这里可以再设置一下啊。 就把这个给拷过来。 跟这个对应的。 呃然后就没了。 呃上面的话还要把这个因为我这里用到了GPL。 所以需要把GPIO的这个头文件给引过来。 要编译。 还有三个错误。 我们看下什么错。 哦周边也是一样。 把这个不要了。 然后呢。 哦这边应该也是要把这个g pi。 O点H给引过来啊。 现在就可以了啊。 就已经把这个MPU6050软件。 IPHONE11的这个驱动给移植过来了。 我们直接可以在魅点C里面啊。 就可以跟那边一样一起调用了。 要头文件的话。 还是要包含那个NPU6050点H。 这边定义定义一些变量啊。 这定义在这里吧。 把我放在顶上。 好眼。 然后呢mp16050初始化。 呃获取他的id。 啊就可以直接显示六轴的啊传感器的数据了嗯。 编译。 蓝色仔。 打开摄像头。 啊下载完成了啊。 这这时候就可以了。 其实这边跟刚刚那边的数据是一样的。 这个啊Z轴的加速度的话大概也是2000左右啊。 约等于1G啊。 这个是软件软件IPHONEC来操作。 mp16050的好。 接着我们用硬件IPHONE10也来啊。 实现一遍这个功能好。 我们看一下怎么改啊。 是接着我这边啊用硬件IPHONEC的。 它效果是一样的。 只不过是说我在help库中实现一遍。 用硬件IPHONE11来操作这个MPU6050啊。 我在这里再新建多一个文件夹。 用来存放这个项目上色。 W w a r e。 M v u6050。 啊这个硬件IPHONEC的话。 我在软件的这个IPHONEC上基础上修改。 所以复制这个项目在这里粘贴一个。 要把它重放在这里。 哎应该是这个对没错。 来拷到这里。 呃硬件IPHONEC的话啊。 就在这里。 这个也对应修改。 复制要把它改到这里来。 好可以了。 我在它初始化的时候。 我先打开我这边的一个操作流程。 演讲火器操作PU6050。 啊首先的话要打开IPHONE12。 因为我刚刚接线的时候。 接在啊PB4。 还有PB11啊。 咱为了啊不改动这个线啊。 我们直接用IPHONEIPHONEC2。 因为IPHONEC2刚好就是啊。 在这个PB10跟PB11上。 所以在这里我先啊用这个i want c2把它改成好。 先需要把先先要把这两个IO给去掉。 先因为我刚我软件IPHONEC这边用了这0IL。 所以这里刚刚就报错了。 因为已被被占用了。 我把它去掉之后呢。 他就可以初始化了IPHONEC。 然后底下就用默认的配置就好了。 然后保存。 好这个硬件IPHONEC就已经初始化成功了。 然后我们就需要改一下他的啊。 读读读寄存器。 还有写寄存器函数啊。 之前读的话都是通过软件软件的来操作。 两个IO口来模拟它的时序的。 现在我们自己可以直接调用它的啊。 F是硬件公司的一个读函数啊。 先需要修改这个MPU6650点C。 西卡里面。 之前读的话是通过这么多啊。 这个模拟时序先给一个70啊。 支持条件它然后再发送字节好。 然后再重复支持条件。 这样读就是通过软件I公司模拟它的程序。 现在我们就不用这个了。 WJ接啊。 用他的一个啊这个数据这里还是要。 然后直接用它的函数就行了啊。 直接用IPHONEC的这个函数就行了。 啊就用这一行代替上面的一整串啊。 这个是读的。 然后写是一样。 写的话前面的这个时序我不要了。 然后呢只需要这一行诶。 这个斜的在底下在这里啊。 像某个寄存器啊。 地址里面写一个数据好。 这个行了。 你看底下还有没有。 然后初始化函数也是一样啊。 初始化函数这里。 啊是要把这个去掉。 因为我初始原来的初始化的话是通。 是弄操作这个GPIO的。 现在我们不用不用初始化去排了。 所以先把这个删掉啊。 这个是硬件IPHONEC。 我们得把软件IPHONEC的相关的那两个去拍。 OK屏蔽掉啊。 还有报错。 应该就是GBIO报错。 啊这边的两个剧拍其实我们就可以不用了。 因为这边这两个是通过软件IPHONEC来啊。 控制IPHONEC的操操作。 mp6了。 所以这两个我们可以直接不要了。 直接删掉吧。 还有一个是这个。 然后编译。 还有三个错误。 我们继续看下啊。 这个头文件是没有了。 哎这个还有一个报错。 我看下。 还有这个报错。 他说这个IPHONE4的这个结构它没有没有定义。 肯定是有定义的。 因为我在这边的话。 在它自动生成代码这里它就有这个东西了。 好就这个这个有没有声明。 在点H里面有没有声明它它为全局变量啊。 有啊这里哦应该是要包含一下这个头文件。 我看下应该是在前面包含一下。 刚刚那个IPHONE10点H点头文件2C点H。 然后编译啊。 下载。 打开是摄像头。 没打开。 啊这个效效果也是一样的。 这个只是用硬件IPHONEC了。 硬件IPHONEC的意思就是啊去读的话。 读跟写的话就不用啊。 通过底层的两个GPL去模拟它的时序了。 他就直接有一个现成的一个函数啊。 去去去对某一个寄存器读还是写一个数据了啊。 它实现的效果是一样的啊。 这边其实都不用改。 直接需要改这边读。 还有写啊一个啊数据的函数就行了。 好这个视频就先到这里了。 这个就是软硬件。 IPHONE11来操作MB16050啊。 获取他的啊。 六个轴的六个轴的传感器的一个数据。
26. 好现在来继续录下一个视频。 这个视频的话应该是对MPU6050。 做一个小扩展啊。 就是移植MBU6050的DMV库啊。 来出来获取它的那三个啊。 三个角度我们再打开嗯。 嗯这个的话我也是从网上找别人的一个啊。 现成的一个例子来实现的啊。 主要的嗯就是把我这里提供的啊。 这两个文件的相关点C还有点H放到啊。 那个软件IPHONEC操作MPU6050的那个啊。 例子里面啊进行修改啊。 这个也是用软件IPHONEC来实现的。 嗯其实移植过程的话。 就是把这两个文件夹相关的文件啊。 导入到项目中就可以了啊。 还有一个的话就是啊。 需要把它原来啊操作MPU6050软件。 那个给删掉啊。 现在都全部都是用整套都是用它的呃。 那个通讯方式都是用他的这个啊。 新的这个IPHONE系列。 IPHONECMP16050的这两个文件来实现。 把里面的删掉。 要添加新的。 好像我们直接看一下效果啊。 这里就不直接演示了。 因为直接把它导进去就行了。 然后就是这里DMP。 那打开摄像头啊。 其实就是我这里显示。 刚刚我已经把它下载进去一次了。 我再下载一次。 好他初始化有点慢。 已经可以了啊。 第一个的话显示他的id啊。 这个id的话跟嗯之前那个例子获取出来的id。 是一样的。 就是获取这个MP16650里面的一个id号。 还有这个T的话。 就是它啊这个芯片里面有一个寄存器。 用来存放它当前的温度的。 我也是已获取来了。 现在的是30.27度啊。 这个是嗯。 就是用他刚刚导入里面的一些库函数来实现的。 直接我们在main里面调用就行了啊。 还有一个的话就是最主要的是获取这三个角啊。 其实底下这些的话啊。 在前面我已经实现过了。 这这里也也可以获取到。 但是我现在想把这三个角啊。 先把它屏蔽掉啊。 先不不显示出来。 我们只看啊指指态解算出来的三个角。 我再下载编译一次。 啊刚上电的时候三个都是零的额。 最最底下这个ya yaw角。 就是说啊这个假说我这个倾斜的话。 慢慢摆动它的话。 它这边就变大啊。 我在转回来的话。 它这个就越来越小啊。 直接就变成负数啊。 这个YAW角的话就是嗯嗯就是这样子。 然后翻滚角。 这是第二个。 第二个的话。 我看一下他应该是这个这样倾斜的话。 这个反滚角就变了啊。 然后这样这样的话它就变成负数啊。 还有应该这个应该是俯仰角吧。 peach啊。 这个是这样抬高啊。 这边抬高它就第一个数就动。 然后这个这样子的话就会变成这样子。 就这边帧数慢慢变大啊。 这个是软件IPHONEC啊。 来啊移植他的DMP库的。 呃这里我看下假如说你用的那个银桥不是啊。 PB10跟PB11的话。 可以在这里修改。 我看到就是这里这里就是软件操控GPRIO的。 做到定义啊。 就是把来改善这两个IO就行了。 我这里PBC1跟PBC1再说。 你这这两个角需要改动的话。 就需要在这里改。 呃。 这个是软件IPHONEC的。 其实啊int f4也是一样。 然后我们多演示一个。 在help库那边也实现同样功能啊。 其实原理也是一样的。 跟软件IFC操作mp600。 移植到help库那边的原理是一样的。 我们也可以打开看一下啊。 应该不在这里。 应该在我这边。 Mp u6050 dmp。 在这里。 不过这表我是用硬件IPHONEC来实现的。 也是要导入一个库。 我直接看下效果吧。 它效果是一样的。 唉还没还没导进来啊。 可以了。 应该是DMP在这里。 要下载。 啊这边是一样的。 只不这样的话它那个也是会发生改变。 这样子这样啊。 其实这边实现的效果是一样的。 然后移植过程的话可以参考一下我这个文档啊。 它也是有一个库。 然后修改一下相关的一个参数就可以了。 好这个是演示演示MP16050的DMP。 做一个小扩展。 好这个视频就到这里了。
27. 呃现在来录制上一个视频嗯。 先打开标准库。 这边应该这个视频应该是到SPI通讯了。 有理论知识方面的话。 这里就不展开讲了。 它主要是有啊一个片选信号。 低电平的时候有效。 就是跟哪一个重启进行通讯啊。 还有一个时钟信号。 然后有两个数据传输的一个信号啊。 主要是通过测试号来完成一个SSPI通讯。 呃底下这些理论知识就不展开讲了。 然后我们看一下啊。 直接看下他的例子。 就是软件SPI操作W25Q64这个存储器。 这个型号的存储器的话。 它有啊64兆位啊。 64兆啊位的容量。 然后我们嗯一个字节等于八位。 所以它除以下的话啊。 意思就是说它有八兆个bite。 就是八兆个字节的容量呃。 它这个啊容量的话。 因为八八兆个字节。 它只能用啊三个字节来代表它的地址啊。 要不啊少于三个字节的话啊。 他不就不能每个地址分配一个数给他了。 所以他一个啊有为。 为了每个地址都有一个数的话。 所以这个地址也要三个字节。 24位。 他人才存储啊。 才能表示八兆个地址嗯。 为了方便它的存储的话。 他这里是把这个八兆分为几个部分的嗯。 首先八兆八兆个字节按64K自己来分啊。 就是除以8×1024除以64的话啊。 就可以得到128个啊。 快啊这个应该叫做快还。 就是八兆个字节除以64K个字节的话。 他就可以分成128块啊。 就是这里啊这里就是一块啊。 一块这这一块它是怎么存的呢。 就看底下啊。 它的地址是这样的。 从零啊到255要256啊。 这样一直排上去啊。 它啊横向的话有256个啊地址。 然后纵向的话也有也是256个啊。 这是啊一个块它就可以存储256乘。 256个字节啊。 就是底下这个示意图啊。 这个块的话还可以再细分啊。 细分成上去啊。 这就是这一块。 然后啊箭头指这边的话。 就是按4K各自节来分啊。 64K按4K各自节来分的话。 就可以分得啊16个商区啊。 16个扇区。 那么啊一个扇区的话它是多少呢。 就是也是横向的话是零二或是55。 然后纵向的话就是啊。 纵向的话就是这里也是分得十。 啊纵向的话就是16啊。 意思是说啊这里有16行。 那么乙一个扇区的话。 就是啊256×16啊。 各字节的容量啊。 这个是扇区。 然后上去再进行细分的话就是页啊。 额这个页塔是怎么分的吗。 就是呃一行就是代表一列。 意思是说啊一行代表一页啊。 一页就是256个字节嗯。 那么一个上区有多少页呢。 意思意思就是一个上区有多少行。 刚刚我啊我前面说了。 就是啊一个上去的话。 它纵向有16行了啊。 一嗯就是一个上去有呃16页。 因为它这里有16行啊。 就是这样分的。 有SSPI对这个模块进行读写的话。 它有一些啊写读读读是没有限制。 但是写它是有限制的啊。 写操作先啊。 必须给一个指定它。 然后每个数据位的话只能一改成零。 不能零改成一啊。 这是由于这个限制的话。 但是你需要写入数据的话。 必须要插图数据啊。 就先把数据读出来。 然后查出数据。 查出完之后再把他那个数据啊写回去啊。 擦除它是也有限制的。 它是啊一个块一个扇区进行擦除。 最小的擦除单元是一个扇区啊。 它不能按页上去。 按页来来删除它。 最小的擦除单元就是一个上去啊。 然后擦除是有一定时间的。 就是说你执行擦除指令之后。 要读到某一个标志位。 等它擦除完啊。 才能进行下一步操作啊。 连续写入多个字节词啊。 超出页尾的话。 他会啊回到啊页所覆盖啊。 比如说你这里是一页。 就是0~255。 那么你写入两个数据啊。 首地址是255。 写入两个数据。 写入第一个数据的话。 它就存在255这个地址啊。 第二个数据由于超出了一页。 他就会把第二个数据写到啊。 这一页的首地址是写入到零这里啊。 这个是写入点入写入页的时候的一个限制啊。 写操作结束后的话。 芯片也进入满了状态啊。 不可以再啊。 再继续写入啊。 所以说你写入一次之后。 要等这个啊。 芯片写完以后才能进行下一步操作啊。 这个是几个限制啊。 底色就是代码。 我们直接看下它的实际效果。 先把这个关掉。 然后啊示例。 然后就是软件SPI。 嗯编译要下载进去啊。 打开摄像头啊。 这个就是通过SPI把嗯。 一指定的页写入四位数据啊。 1234。 然后再把它读出来。 嗯写进去跟读出来肯定是一样的。 嗯就是这个首地址。 然后写入四个数据。 写入之后呢。 要把它读出来。 然后再显示出来啊。 谁把那个写的元数据显示出来。 然后把读出来的数据然也显示出来啊。 它们是一样的。 因为我写什么读出来肯定也是什么啊。 这个是软件SSPI。 来读取W25Q64的这个模块好。 现在我们用啊help库来实现一遍啊。 首先在这边新建一个文件夹。 33s spi w6。 啊这样吧。 W 25q64。 应该是软件的SPISOFWARE啊。 就这样。 然后我们打开QFIDE啊。 打开的时候。 我们啊打开这边help库的操作一个流程。 我们按这个流程来操作。 啊这个打开有点慢。 等一下。 好可以了。 我们在还SOLE这个啊项目基础上修改。 先copy一个。 然后在这里粘贴。 然后把我刚刚新建的这个路径给他。 然后呢把这个项目名称改成这个。 哎呀。 好可以了。 应该是这里。 然后。 把这个复制下来。 粘贴在这里。 好可以了。 嗯首先的话我们肯定是要配置啊。 SSPI的几个引脚。 因为我们是用软件啊SSPI来进行通讯的。 所以啊需要手动操作来初始化那几个呃。 s bi的通讯引脚。 先打开GPIO嗯然后的话呢我看一下。 我这边应该是用。 而pa4作为片选演讲。 好把他拉上来一点啊。 P4应该全部都是输出。 先把它设置输出。 先output pa6。 P a7。 LPA4的话呢。 嗯使用高。 啊这高速度吧。 然后呃这里需要用的是。 啊退网输出就是这个。 然后这里是谁高啊啊。 刚开始使用的是高电平。 然后这里用了速度是高速度。 然后这里spi yes s这片小圆角P4的。 然后PA5也是一样。 刚开始时候初始化高亮平给它。 然后选中的是推广输出。 然后选择高速度还SSPI。 还这个是CLOK就是时钟信号。 然后就是pa6。 pa6也是刚默认是高电平。 推完输出高速率。 然后这个是SPI的嗯。 MISO就是主机输入重机输出啊。 然后P7的话也是一样。 高速度推完输出。 然后速率高。 然后这是SPI的MOSI主机输出。 重机输入好这个就可以了。 然后初始化完电瓶之后呢。 我们就可以保存这里。 嗯然后去这边标准库这边复制那几个文件过来。 我看一下标准库这边应该我是呃存放在这里。 打开标准库。 刚刚啊刚刚演示的那个软件操作。 W25Q64这里。 然后把SSPI的这几个啊头文件给弄过来。 然后拖动一下这个窗口。 应该是这样的。 先把这个点C复制到嗯这里。 右边的edge复制到这里啊。 除了这个之外呢。 还要把嗯WQ25W五Q六四的。 这这几个地址也要拷过来C然后这两个地址啊。 这个就可以了。 啊然后呢就需要修改SSPI点C啊。 因为我这边SHHPI点C应该是这里啊。 因为我这边是通过这个啊。 标准库这边来操作曲pl的啊。 这个函数有点不一样。 所以我们就是要用啊。 help库的这边叫做GPIO的这个函数。 来把这个函数替替换掉就行了。 呃首先第一个的话就是呃改这个SC片选引脚。 片选引脚。 它这个是通过标准库这个函数的。 我们把它替换成黑库的这个函数。 然后这个是JPL的一个状态。 有十种型号也是一样啊。 这个只是把这个函数名给替换一下。 其实它底下的原理是一样的。 你这个也替换了。 这个要这个屏蔽掉。 这里。 呃S中型号MOSI。 哦这里弄错了啊。 时钟应该。 这个是这个的suck NO s i。 应该是这个的。 要叫做雷霆换。 啊然后这个读的。 这个躲的话直接把这个把这个屏蔽掉。 用我这个啊help库上面读IO的一函数来替换啊。 就可以了。 然后这一大部分的话呢啊就可以屏蔽掉了。 因为我们前面嗯等它自动初始化IO的时候。 已经啊已经初始化过IO了。 就是这个魅点C里面已经对这个呃。 刚刚配置的那几个GPL已进行初始化了。 所以这里就不需要啊。 这个地方就不需要了嗯。 然后底下的话呢呃这个就用原来就行了。 这个是调用上面的这个函数啊。 要看什么要改的啊。 因为这里使用了help库的GPIO。 所以这里需要啊引入他头文件。 然后这个标准库的这边这个头文件就不需要了。 我们用一下这个头文件啊。 现在编译看下我有没错。 二还是有错。 我看下错在哪里。 啊这个头文件也是没有的。 我们把它删掉。 啊。 哦看一下这边。 这边难道也要把这个GPL的头文件给弄过来。 啊这样就可以了。 就没报错了。 然后现在我们就可以直接使用了。 使用的话也是跟嗯标准库那边应该是一样的。 我们先把这个这部分删掉。 然后呢。 啊。 直接把这边用的这个部分代码给拷过来就行了。 把它拷到这里。 然后编译。 好应该要包含下头文件。 应该是最好是放在这里编译。 还有报错。 我看看。 哦还有两个数组没有定义。 这个放在外面。 嗯应该可以了。 咳也没报错了。 然后下载进去哦。 打开一下这个要确定enable。 确定。 诶那个没有吗。 再编再编译下载一次。 哦有了这个反应有点慢啊。 其实那个啊。 是一样的。 就是567嘛。 55567啊。 5567。 然后读出来的话。 这声不太对啊。 我看一下读出来的是为什么是FFF呢。 按理说应该也是这个567呢。 哦我发现那个做错了。 应该是刚找了下。 应该是这里配置出错了嗯。 这个SPIMSO是主机输入。 然后重击输出的。 这个IO应该是设置为输入模式的。 而不是输出模式。 然后呢这边配置输入模式。 然后我们再改一下。 这边啊上拉输入SPI。 然后这是MMSO。 这个是输入的。 是看主机读取。 用于读取的。 这是第一个。 然后第二个这里好像有点异常。 就是我这个地方没没有返回值。 就是这里啊。 这里有了。 刚刚我已经改过来了啊。 这是读刚刚那个PA6。 然后把这个对应的电瓶夺回来。 然后返回去啊。 这个应该是没问题了。 要编译再下载一次。 然后再看下效果。 唉还有问题吗。 大vie。 嗯这个还是有点问题啊。 应该是在这个地方啊。 还是漏返回了一个。 就是这个返回值没返回去。 就是其实这个是一个带返回值函数的。 这个没返回去。 应该从那边啊。 标准库这边应该是有的。 我为什么要抄过来呢。 我搜索一下这个应该是呃SHHPSC。 啊这个是有的。 我应该是把漏漏把这个给弄过来了。 不知道是什么时候把了弄弄掉了。 然后重新编译。 然后再下载进去看一下。 这边。 啊这个是正常的。 没问题的。 就是我写这几个以后再读出来还是呃正常的。 这个跟我这几个数跟标准库那边有点不一样。 标准库那边好像12345。 这里45567嗯。 这个写进去跟读出来是一样的。 好这个视频就到这里了。 这个是软件SPI来操作。 这个模块。
28. 好上面来录制上一个视频呃。 前面已经录了SSPI软件。 SPI操作W25Q64这个存储器。 然后这个视频的话就演示啊。 音一键SPI来实现同样的功能呃。 效果这里就不演示了。 因为效果就跟以前是一模一样的。 就标准库那边的效果。 所以我们直接新建嗯。 先将help库工程就行了。 然后把前面那个名字复制一下。 应该是34。 然后这里是选用HARD硬件的SPI操作。 这个W25Q64好。 打开cube ide1。 嗯然后这边打开我的一个操作说明。 好稍等一下。 这个cube id打开的有点慢。 好我们在。 软件SPI的那个基础上修改嗯。 应该是这里软件SPI操作WL5Q64复制。 然后粘贴位置的话。 就存放在我刚刚新建的这个文件夹。 这里名字的话就用这个。 俺复制。 啊应该在这里。 啊把这个名字给复制下来。 然后粘贴到点MOC这个文件这里。 耳机也打开。 啊前面我用的是这几个引脚。 是用软件SPI啊模模拟它的呃。 SSPI通讯呢我们用的是这个静音角。 我们硬件的话也是要用一这几个引脚。 好在我我不删掉的话。 它就会出现冲突。 所以说我想把啊这几个引脚给删掉。 因为我硬件的话它是不需要我们手动去定义啊。 这些引脚的。 你选择的话。 它就自动帮你配置好这些引脚了。 好完成这边的这个操作流程来啊。 第一步就是移除GPIO嘛。 就是移除我们软件SSPI里面。 定义的那四个GPIO啊。 因为硬件它自自动把我们配置好了。 就不需要你手动去定义它了啊。 然后就打开硬件的SSPI啊。 我这边啊硬件的SSPI的话。 应该是在啊这个地方。 然后用加SSPI打开的是SSPI1啊。 S spi1。 然后模式的话就选择啊。 这个跟我这里选择一样主机模式嗯。 应该是第这个。 啊然后片选信号的话。 我们是用软件的片选信号啊。 因为我们啊JC那边。 标准库那边也是用软件的片选信号啊。 因为简写单位编程库用了这句代码。 就比如说使用啊软件的MSS型号啊。 这你这样选的话啊。 选完之后呢。 这边就自动啊把我们定义好这三个引脚了。 那个片选信号啊。 现在还没有啊。 因为我们是用软件的片选片选信号。 等于我们还要啊自定义一个片选信号给他啊。 这是一个啊。 接着啊。 然后这个时钟信号又改成四就行了。 他就不会报错了啊。 然后接着。 嗯还有SPI的几种模式选择呃。 我们那那边的几种模式的话。 我们软软件SSPI那里没有过多的介绍。 因为啊软件SPI那里啊。 本本身的话他就用了那个模式零啊。 啊其实它有四种模式啊。 这个四种模式的话。 在我们在这个标准库的SPI。 理论知识里面有介绍。 而我们最常用的就是这个模式零啊。 这几个模式的意思就是说啊什么时候移除数据。 什么时候移入数据啊。 我们常用的是莫斯汀软件SPI。 那边已经用的是模式零了。 然后所以我们硬件这边也是对应选择模式零啊。 这个模式零他是怎么选择呢。 啊在底下有配置好。 我就按这个集结来选就行了。 嗯然后就是第一个参数的话是选择low啊。 然后第二个参数的话。 就选择这个第一个边缘一啊。 这个默认就是这样子了啊。 这样选的话就对应啊。 软件那个标准库那边的这两行代码好。 然后我们继续啊增加片选信号。 因为片选信号用的是软件SSPI的片选信号啊。 所以我们就需要找一个阴角来作为他的片选项。 我们还是用这个PA4来四。 来作为他的片选信号了。 片选信号应该是输出的一个信号啊。 选择输出信号之后。 我们在这边GPIO这边啊。 正常的这个四这边改给他改一个名字啊。 硬件这里的话这三个信号。 所以它的自动命名呢。 我们也改一个跟它类似的一个命名。 SPI1杠SS吧。 然后输出模式的话用推广输出啊。 要啊就是这样子就没了。 然后我们把它保存一下。 啊就啊硬件IPHONEC啊。 硬件的SPI就已经配置好了。 然后我们就在里面对应修改一下。 SPI的那几个通讯文件就行了。 嗯第一个的话是要改的是这个HBI点C这里。 SPI点C。 这里的话啊。 这个片选信号。 这里可能名字不是这个了。 这个是软件啊。 那几个的名字。 我们把这几这个名字看一下。 我把这个名字找一下。 因为我刚刚新增那个。 我看他用的是什么名字。 在这边他应该是在g pro这里吧。 SPI就这个用的是这个名字安装它定义啊。 P就是这个嘛四啊。 我们就用这个这个把这个替换掉就行了。 把它弄回来。 就是刚刚我新定义的那个片。 选信号。 好咳咳。 呃然后底下要改的话。 就是和交换一个字节的那砍树了啊。 交换一个字节啊。 之前我们都是通过啊这个举牌O啊。 来读写进来交换了。 然后现在我们就啊不需要来。 不需要不需要不需要通过这种模式来了。 我直接它里面只有一个线程函数来啊。 进行一个字节的交换。 我们就改一下这里就行了啊。 就把这个。 好把这个注释掉。 然后的话直接用它help库里面的一个。 现成的函数啊。 来对它进行一个字节交换就行了。 然后把这个返回去就行哦。 我现在编译看有没有报错。 哦有报错哦。 可能这几个啊没有定义它出错。 我看一下是什么错误。 呃到从北找到这个SSPI1啊。 应该是。 嗯可能要包含那个SPI的那个头文件。 我看下应该PIC这里这里SPIDH。 然后呢嗯然后在这里面包含下它的头文件。 再编译一下啊。 少了一个。 还剩六个。 我们再看是什么错误。 哦还有可能就是那个名字啊。 跟我原来那个软件SPI那个名字不一样啊。 他硬件生成那几个名字。 我看一下是什么样的。 还想打开这边啊。 应该是在SSPI这里面。 呃找下他那几个JPO。 额好像也是我们用的硬件。 Spi。 应该是不用去管这种引脚了的。 我再看一下那个错误。 啊首先的话我们用硬件SPI的话是不需要控啊。 直接对它的引脚进行设置的。 所以说啊这一部分我们是直接把它删掉就好了。 还有这一部分也是把它删掉就好了啊。 其实刚刚删掉的那个函数的话。 就是为了啊底下交换一个字节服务的啊。 我们交换一个字节。 直接用help库直接提供现成的SPI函数的话。 所以这里就不需要了。 所以就不需要刚刚那种。 直接对GPL进行操作的函数了啊。 这里有个报错。 应该是这两个是重定义的。 我们把这个注释掉好。 用底下这个就好了。 好现在我在编译啊。 还有两个错误。 啊这个应该也不用了。 这个也删掉嘛。 好现在再编译一次好。 现在已经没报错了啊。 现在没发出来。 我们直接把它下载进去。 好这个就正常了。 跟那边的效果是一样的。 我把它那个写5567。 那边读出来是567。 我在那个改一个数给他看一下。 再写进去啊。 54567吧。 变异。 啊4567这个也是没问题啊。 这个是啊硬件SPI操作这个存储模块的呃。 一个视频好。 这几个视频就到这里了。
29. 好上面来录制下一个视频嗯。 这个视频的话应该是到BKB备份寄存器。 这个备份寄存器它主要的作用就是呃。 当那个开发板上的BBAT引脚啊。 有有有有电源给它供电的时候呢。 啊。 他是里面的一些备份寄存器。 里面的数据还是不会丢失的。 嗯下面我们直接打开它的例子来看一下。 先演示一遍它在标准库这边的一个效果。 啊首先的话啊前面是启动BKP寄寄存器。 然后啊这里就是往寄存器里面的一个地址。 写入一个1234。 然后再把它啊读出来。 然后显示到OLED屏幕上。 好。 我现在下载进去啊。 这个是1234啊。 因为我写入1234。 然后它读出来的话。 他肯定也是1234啊。 现在我改一下程序。 就是我啊不写。 我直接读啊。 现在是电是没有断的。 就是STM32这个开发板它一直是通上电的。 我直接去读。 啊他啊编译一次。 然后再把它下载进去啊。 他也是1234好。 现在我就我直接对这个进行操作。 我这边是连了一个啊。 VBAT这个引脚上是阴了一个啊。 3.3伏过去给他。 是从这个s st lin这里啊。 连过去的。 带了一个3.3不过去。 就是说现在这个备用电池是有给它供电的。 要此时的话我就把这个主电源给断开。 主电源是在这里三连三或者主电源给它断开啊。 把这个拔掉啊。 此时这个备用电池还是有给它供电的。 这个VBAT是经有3.3伏过去给他的啊。 这时候我再把它插上。 把它找到那个程序的话。 应该是啊再重新会执行一遍。 重新回执行变音。 他应该会执行到这里。 他还会去还是会去读这个寄存器的值啊。 这个寄存器读的还是1234。 因为啊备用电池啊还是持续给它供电的话。 备份寄存器里面的数据是不会丢失的。 所以读出来还是1234。 假设我把两个电源都断掉。 备用电池还有主电源都断掉。 然后再插上的话啊。 它它就读出来的数据就是零了啊。 当两个电源都断掉了话啊。 备份寄存器里面的数据它也也是会被清空的啊。 这个是标准库啊。 这边的一个啊11样的现象好。 现在我们用help库来实现一遍。 这个功能好。 先新建一个文件夹。 应该35。 BKP机也写BKP。 又打开Q8DE1。 呃在help库这边实现的话是非常简单的。 我打开打开的操作流程。 首先我们还是在OLED的这个项目基础上修改复制。 这样的。 然后把它保存在BKB这个地方。 复制。 啊BKB在这里。 重命名。 把这个复制粘贴在这里。 呃标准库这边的话它是可以直接打开啊。 直接初始化这个BKP就诊器。 但是跳库这边好像是不可以这样子的。 它只能说是跟这个RT c啊一起使用啊。 首先需要好打开这个ITC。 我们直接打开ITC。 在这边IOC点这配置勾选上就行了。 他应该是在这里RTC直接勾选上这个好。 其他这些参数我们可以不用管。 直接打开这个ITC就行了啊。 激活这个时钟。 然后把它保存。 然后面就可以直接使用了。 他这个使用函数的话啊。 我们怎么去找呢。 是在这个驱动驱动函数里面。 我们去找一下。 应该是在RDC在这里扩展。 这里扩展模块这里它底下就有了。 这个是对嗯RTC寄存器的写。 然后这卡数字对RTC寄存器的读。 读的是有返回值的。 返回值一个是啊吴福浩的32位整形好。 现在我们直接可以利用这两个函数。 对它进行读写。 好。 我们直接在呃。 在may点C中里面直接写这两个函数就行了啊。 五级从这边复制过去吧。 应该就是这两个。 就把它放在这里啊。 首先的话就是先把它写1234。 然后再把它堵起来啊。 这里的第一个参数就是它的一个地址。 这个地址可以参考下怎么写法。 这里啊啊。 这个地址是RDC这个杠BKB杠DRX。 然后这个的话可以是1~10啊。 应该是只有1~10。 然后后面的话我就可以直接编译。 把它下载进去了。 啊没问题啊。 然后下载进去BKP。 好下载进去是1234啊。 12344。 我再改一下程序。 跟刚刚那边模拟一样。 把这个啊写给他屏蔽掉。 下载下载进去。 这时候唉这时候再去读的话。 他应该还是1234。 然后呢我现在跟之前那边一样。 把啊这个备用的这个插上去。 把主电源给拔掉啊。 然后再查查主电源还是1234。 假如我把两个都拔掉。 储电源拔掉。 然后备用电池这个电源也拔掉。 然后再插上去的话。 他应该就是复位成零了啊。 这边的现象跟那边是一样的啊。 这是BKP啊。 寄存器的使用好这个视频就到这里了。
30. 好上面录制下一个视频呃。 在上一个视频之前的话。 我先对上上个视频啊。 就是BKP寄存器那个视频的一个现象。 进行补充说明好。 我先打开下一个视频的一个例子。 啊有点慢哦。 打开了就是BKP。 这里我把这个再下载进去啊。 打开摄像头像。 然后下载。 啊大家注意一下这边这个灯。 啊把它下载进去之后呢。 它就亮了啊。 说明我们使用这个BGP的时候呢。 啊对它进行了一个额外的操作。 呃我们看这块电路板上面的啊。 原理图的话啊。 这个小灯呢就是啊他是连到PC13上面去的。 我们可以看一下PC13这个引脚有哪些功能。 还有复用功能啊。 在这边。 嗯标准库这边建设给我们提供了一个IO表啊。 我们打开看一下。 就PC13就是这个引桥。 那它的主功能的话是一个。 普通的GPIO引脚的功能啊。 然后的话默认功能的话是这里。 RTC的侵入检测啊。 因为我们并没有使用啊。 对这个P43进行一个操作。 我们可以打开这里。 啊打开这里这个区pro这里。 啊我们打开这个地方啊。 PCS3应该是这个引脚啊。 我们是没有添加任何东西的。 所以这个引脚是我们没有初始化了。 那说明他肯定是这个RTC。 这里对它进行一个操作了啊。 这个可以关掉了。 然后我们怎么把它关闭呢。 啊就是在RTC那里啊。 把这个IO引脚侵入检测这种功能关掉。 这就是这个输出功能啊。 但是我们发现这里啊。 并没有这个关掉的一个选项啊。 这里三个的话我验证了一遍。 他都是点亮的好我们该怎么办呢。 就是可以去他这个代码里面把它关掉啊。 这里是选择的。 就是这个allow这个报警的。 这个我们去它生成的代码里面。 肯定也有一个对应的跟这个对应的啊选项。 啊是IDITC初始化这里啊就是这个地方啊。 刚刚选的话。 对应的代码就是这里。 我们把这个按住CTRL键转到这个的定义啊。 发现这里有一个NM。 就这个就是把它关闭的啊。 所以我也搞不懂这个id为什么不把啊。 这个这个这一个选项放到这边。 IOC文件这边给我给用户选啊。 搞不懂他为什么我把这个拷过去。 好把它放到这里来。 就说输出啊。 把它关闭掉。 好现在我再编译一次。 啊要把它下载。 哎打开摄像头现在都断掉了啊。 发现的话啊。 这个灯就是关掉了啊。 所以这个B地方的话。 需要我们手动改一下代码啊。 把这个功能给关掉啊。 这个是对上一个视频的一个补充说明。 就是RTC的啊。 使用BKP寄存器的时候。 必须要打开RDC啊。 打开IDC的时候啊。 它自动会把啊这个灯可以点亮。 我们可以通过改代码把这个关掉好。 这个补充就到这里。 我先把这个关掉。 呃然后啊接着录本视频的啊。 内容应该是到啊。 RTC实时失踪了啊。 rt44时钟的话。 我先看下标准库这边的一个演示。 RTC实时时钟。 然后打开。 啊变异。 下载。 啊这里要等一会。 有时候。 啊可以了。 有时候要等一会。 有时候要等的快。 有时候等的慢。 最主要是啊打开这个外部低速时钟啊。 就是这个啊这个元器件的时候。 有时候打开的时候有点慢。 就初始化它的时候啊。 这个就可以打开了。 这是一个类似一个走时的时钟啊。 然后我这边这边的话啊。 接了从s st论里面接了一个3.3伏的啊。 3.3伏的供电给这个pk啊。 VBT备用电池。 这个地方因为我们有纽纽纽扣电池。 所以我我跟江西那边一样啊。 就是在这个地方啊。 接了一个3.3伏的给啊备用电池啊。 当做他的备用供电嗯。 然后嗯这个id是四中啊。 这斜的变标准库还演示了一个比较重要的功能。 就是主主电断掉的话。 它还是可以走私的。 就是说啊BK这个VBT备用电池。 这里啊保持供电。 然后的话我把主电给断掉啊。 现在记录一下时间啊。 49分12秒要把它关掉啊。 刚刚大概十二十三秒左右。 或过啊。 过几秒再把它插上去啊。 现在都21秒了。 所以说把主电断掉啊。 它仍然在走时啊。 就是这样这么的一个现象嗯。 好现在我们用help库来啊。 实现一遍这个啊这个功能啊。 实现跟这边一模一样的这个同一个现象好。 然后这个标准库先先留在这里。 等下有些代码我们要参考啊。 在这边啊新建一个文件夹啊。 我也新建了这个之前我啊测试的。 我先把它关删掉好。 然后打开CUBIDE啊。 打开的同时我们先打开我的一个啊说明文档。 嗯大纲司徒不要了。 好额。 RTC的话。 我还是在OLED这个项目基础上修改。 路径存放。 路径的话存放到刚新建的文件夹这里。 然后命名RTC44中。 啊应该是在这里。 然后重命名。 把这个名字给复制下来。 然后把它啊改到这里来。 哎没没考上吗。 重命名复制。 然后把它转到这里来啊。 可以了。 啊根据我这边的步骤来。 第一步的话是打开RTC啊。 这个啊打开ITC的话。 前面BKP寄存器那里已经介绍过了啊。 就在这个地方后。 直接啊打开就行了啊。 这只是第一步啊。 还有因为我这个IDC是要走私的。 所以说要激活它的日历功能。 就把这个勾也勾上嗯。 然后底下的话就是啊时间的设置啊。 这个是设置时间的格式。 我们用二进制这种模式吧。 啊然后呢底下就是写年月日时分秒啊。 假如说我现在是设置十2024年啊。 假如说是设置2024年的话。 这里前面两位数是不能写的。 假说我是2024啊。 他是变成零了。 只写后面那两位数就行了。 240。 啊咳咳。 然后写5月1号吧。 嗯然后是临时1分0秒啊。 就写这个日期。 那大家看看是不是不是啊。 在这个日期的基础上开始走时啊。 然后好久没了。 嗯然后看这边啊。 打开外部低速时钟。 因为我这个走势的话是用要用额外部低速时钟。 这个时钟源呢啊就是啊这个地方啊。 就是这个。 所以我们要啊它默认是关闭的。 我们要把它打开啊。 怎么打开呢。 是在这个选项里面r cc。 啊在这个选项里面啊。 这个是我们外部高速时钟。 我们很早就就把这个打开了啊。 这个外部的低速始终没打开。 所以我还是一样把这个打开啊。 打开之后他这个一对应引脚。 这里它就把它加上去了。 好cc这里嗯。 这里打开之后呢。 时钟时钟数这边要配置啊。 这个RTC这里它默认是使用啊。 内部的底数时钟的。 所以我们要啊。 刚刚打开的这个。 要不要把他这个选配到这里来啊。 要用一定要用这个外部的低速时冲。 它才有刚刚演示的那那种效果。 就是把主电给断了。 然后啊备用电池供电的话。 它还仍然充实啊。 假如说你使用内部的这种时钟的话。 还有坏。 或者说使用啊外部高速时钟给这个RT c啊。 提供时钟源的话啊。 他就没有这种现象。 就没有这个功能。 就是啊主电断电。 备用电池供电的话啊。 他是他就是不走时了。 那个时间就是不准的啊。 这个配置就到这里接着啊。 接着我们就可以生成代码了。 好我们到魅点C里面看一下它的生成的代码啊。 就这里RTC。 我们这个它自动删的。 我们去里面看一下。 指标准库那边的话。 它还要设置一个参数。 就是。 它一个分频系数啊。 就是把呃他输入的那个时钟进行降频。 降到一赫兹。 就是一秒钟啊。 大概一秒钟一秒钟嗯。 嗯一秒钟震荡一次。 就是把它降频啊。 但是我们这边就不用写那个参数了啊。 这里直接就有啊。 你选择这个一秒钟一次就行。 一秒钟一次就行了。 我们它自动帮我们配置好了。 就不用我们去计算它的那个分分频系数啊。 就是这里我打开这边看一下。 也是在这个地方。 应该是在。 啊在这里啊设置它它的那相当于是预防编器啊。 把那个3276啊。 3632768降频降到一赫兹。 啊我这个意思是说他是不用你去手动配置的。 只要你勾选了。 把这个rd c啊配置成这种模式的话。 它自自动是一秒的。 就是它的频率是一赫兹了。 好。 然后底下这两个函数啊。 就是设置啊四分秒。 然后这个的话是设置年月日啊。 这里要注意的话啊。 它是分开设置的。 然后面我们啊有一个现象要要来到这里看啊。 呃然后接着我这边这个文档啊。 现在它已经自动生成代码。 已经把这个时间给设置进去了。 我在外面的话就可以啊去获取。 啊获取的话是先定义两个啊获取的啊。 结构变量上面的话是啊时分秒的。 然后这个是年月日的啊。 然后就是调用底下两个函数。 就可以获到获取ta的刚刚设置进去的时间了。 啊然后把它年月日时分秒给显示出来啊。 其实还有一个可以查出来。 显示出来就是他的一个秒计数器啊。 把秒记秒计数器也显示出来啊。 这个秒计数器的话。 它跟我们呃标准库那边。 那个秒计数器是不一样的啊。 至于为什么不一样。 我们先把它编译上去下载看一下啊。 使用这个函数还有一个问题啊。 因为这个函数是声明为STATI这种模式的。 在媚点那边用不了啊。 为了全变的话。 我想把这个给删掉。 然后上面有一个把这个也先删掉。 然后呢再编译一次好。 现在就编译成功了。 嗯先打开这个摄像头。 然后呢把它上传进去。 哦前面的一个固定字符串没有显示。 或先修改一下。 就这个地方没有拷过去。 在这里。 因为。 嗯再贬一。 啊这个就可以了。 然后我刚刚说的那个秒计数器啊。 就是从通过这个函数获取的啊。 获取读取时间的计数器啊。 其实这个计数器的话啊。 是啊不是时间戳。 而是当前天的这个时分秒的总秒数啊。 比如说现在是1分24秒。 然后就是60秒加上27秒。 就等于零三这个数啊。 他只是算当前天的啊秒的技术。 他不算这个年月日的。 所以这个跟额标准库里面的时间措施。 有一定的区别的。 好。 这个就是啊走时的一个功能啊。 这个他只是单单的走时。 但是还没有具备那个啊掉主电。 然后仍然走时呃的一个现象。 还没那那那种功能啊。 现在我啊参考啊之前的模式来啊。 来做这个功能。 好像按按我们以前那种方法。 呃按我们以前那种办法的话。 跟标准库这边的话。 它是这样子的。 就是嗯在写时间的时候呢。 就按DC初始化的时候啊去啊。 用BKP寄存器里面的呃。 某一个地址设置一个特殊的特殊的数据啊。 比如说这里1234。 假如说是1234的话啊。 他就不设置。 说明前面已经设置过他的时间了啊。 我也按照这个逻辑来啊。 改到这边来看行不行。 那首先我们去找到设置时间。 就是RDC自动初始化这里啊设置时间。 然后呢。 然后我也是一样。 把这个读BKP寄存器啊。 这个地址看它是否是1234。 啊就这里发到这里。 然后底砂的话我在哈。 让我想想啊啊要把这个代码格式化一下。 它好看一点。 格式化在这里。 啊意思是说他进来的时候首次进来。 他肯定是啊。 不等于1234的。 这个嗯BKP里面这个地址的数据。 然后第一次进来他肯定要设置时间啊。 设置时间设置完之后呢。 他就写啊这个BKP寄存器为啊1234啊。 当你第二次进来的时候呢。 就是啊那个主电在恢复的时候啊。 他读到啊。 他读到这个啊BKP寄存器呀。 他应该就是123441234了。 它就啊它就不不再执行里面代码。 就不重新设置时间了啊。 原理大概是这样子啊。 我是参考这边的原理来做的好。 现在我再把它下载一遍。 然后看一下它实际效果有没有达到。 一下载改装摄像头吧。 让我下载。 Ok。 呃这个连不对啊。 有可能这个BKB寄存器里面。 刚开始已经设置了二三次。 我现在把整个电都断了。 把整电断了。 然后再把它插进去。 啊现在走势就是跟我设置的是一样的呃。 年月日哦。 这里是设置的4月了。 不是5月啊。 24年4月1号啊。 这个走时是没问题的啊。 然后此时我把主电给断掉啊。 看它有具不具备那个掉电走时的功能啊。 现在是24年4月1号啊。 零点1分27秒好。 我把它拔掉啊。 再购物一会就把它插进去。 刚刚是27秒钟左右啊。 啊有一个现象就是发现他的年月日是没改变。 但是诶错了。 年月日是改变了它的时分秒是没有改变。 就是说这个秒计数器的话还是在嗯正常工作。 但是这个年月日的话。 他就复位了。 我们再来一次次。 现在是啊到2分钟吧。 2分钟把它拔掉。 啊这时候这个啊备用电池啊是一直供电的呢。 然后我再把它插上去啊。 现在是2分10秒钟了啊。 但是这个年月日的话啊。 他已经恢复了啊。 所以这个现象的话它啊不完全对。 就跟我那边不完全是一样的。 这个年月日的话他就啊改变掉了。 那这个是为什么呢。 我们可以从他的代码里面分析一下呃。 他去设置这个嗯。 年月日的时候是通过这个函数去设置的。 我们转到这个定义去看一下啊。 这个日历传进来啊。 他是年月日把它存放到这个变量这里啊。 这个结构的变量这里。 我们再存到这个变量这里去啊。 我发现这个地方的话。 其实它是一个普通的电变量。 它掉电之后它就会丢失的啊。 就是这个day to a day啊。 这个结构体里面。 这个只是一个普通的一个啊结构体变量好。 所以掉电会丢失掉主电它就会丢失。 它不是在后备区域里面的。 所以说刚我们啊掉把主电给拔掉的时候呢。 他这个年月日的话就恢复成默认值了。 就是不是我以前那个值了啊。 就是这个值。 咳咳好。 我们再看下。 那为什么他那个时分秒要走时要正常呢。 好我们再看下时分秒它是怎么设置的啊。 首先他把十分秒给第二个参数给传进去。 好传到第一页。 我们看第二个参数啊。 第二个参数的话。 在这里它就是把这个啊。 十分秒转换成一个秒秒秒数啊。 描述的话就后面就通过这里啊。 把这个描述通过这个函数调用把它写进去啊。 最终写到哪里呢啊这描述是写到这里啊。 是写寄存器这个地址啊。 往这个地址里面写这个描述啊。 这个地址的话大家有兴趣的话。 可以把它打印出来看一下啊。 其实这个地址的话就是后备区域里面的。 它是啊掉电是不丢失的啊。 所以说嗯从这个代码这里看的话。 就可以看到啊。 时分秒是保存在后备区域里面的。 一个寄存器里面啊。 但是年月日的话就是保存在一个普通的啊。 结构结构体变量里面。 所以说啊时分秒是仍然走时正确。 但是年月日的话他走时就不正确。 好这个就就是这样子了。 我先嗯把刚刚砸上去的代码给注释掉。 哈这个是赶不认证了。 然后我们看下怎么解决这个问题呢。 啊接着往下看。 我这边这个文档啊。 多练。 然后就黑屏嘛。 断主电。 就这里主电断掉。 但是备用电池供电就黑屏。 然后再把它插上去的话啊。 这边就十分没有。 还是走时正常。 但是年月日的话走势不正常啊。 就是刚演示过了啊。 这个是原因的话。 就是也演示过了。 也去看了。 就可以分析它的啊。 这个两个函数的源码就可以知道。 大概知道他为什么会这样子啊。 然后重新优化它是一个怎么样的优化方法呢。 啊刚刚有一个现象。 就是这个呃秒计数器的话。 它是正常的。 就是那个呃用来存放时分秒。 这个秒计数器的寄存器啊。 他是在后备区域里面的。 他是啊走势是正常的。 所以说我们啊就不用它自带的这个设置时间了。 我们用的是什么啊。 我们把啊就跟这边是一样。 就跟标准库这边一样。 你需要设置一个什么啊日期。 你就需要把这个日期转换转换时间戳。 然后把时间戳写到那个啊。 一个后备区域的寄存器里面啊。 就是这就是我就我就是把这个时间啊。 你需要设置时间。 写到刚刚说的。 这个存放时分秒的这个寄存器里面。 好现在我来操作一遍啊。 他是怎么样的呢。 啊首先你要设置的日历设置的时间啊。 我参考这边的代码。 我直接把这个拷过拷过来吧。 啊然后直接把它放到啊。 放到这个地方来吧。 啊然后是2024年啊。 刚刚是4月1号零时1分0秒啊。 设置时间的话就是怎么设置呢。 设置是是八这个时间转换成秒计数器啊。 转换成秒数就是这个这样描述的。 他写到那个寄存器里面啊。 这个就不这个是标准库的那个秒题啊。 寄存器我们应该是不用这个。 我们去找找到刚刚那个寄存器啊。 这是怎么去找到刚刚那个寄存器呢。 就在这里啊。 谢十分妙。 还应该是这个这个才是写十分秒了。 再装进去啊。 应该是在这个地方RDCC秒计数器的。 我们再回到刚回到啊设置RTC时间。 这里啊就换成了这个。 因为这个函数的话它是接收的是一个指针。 所以说我们要对这个加一个取地址符。 然后第二个参数的话。 它是需要接收一个32位的无符号整形啊。 这个要做一个显示的一个转换。 等于啊上面计算到时间的一个接一个秒秒技术。 然后把这个再放到这里来。 好这个就是。 嗯设置时间呢。 就是把这个时间写到刚刚那个计算器里面去啊。 这边啊不用等待完成。 因为这个标准库这边没有这个说法啊。 这个黑库就没这个说法。 要读取时间也是一样的啊。 这个既然有写了。 他肯定也有毒的。 我们转到定义。 他肯定也有毒了。 应该就是它在它身上啊。 就在这里就在它的上面啊。 我把这control给拷过来。 啊这个是设置时间。 读取时间的话。 就是嗯我把这个TSD调到这里来。 应该就是这里。 啊把它替换到替换掉标准库的读取。 秒计数器的这个函数。 然而这个也是一样。 传入RTC的指针。 啊然后这样就可以了。 呃然后底下还要做一个修改啊。 因为我现在设置时间。 还有读取时。 时间的话都不用啊。 它自带的那个哈那两个函数了。 就是这两个函数啊。 所以说我这边要先去屏蔽掉它啊。 因为你这里设置时间的话。 可能会覆盖掉我刚刚写的那数。 所以说你这里的话就不需要再设置了。 我怎么来屏蔽这个呢。 我这样吧。 这里加个if f0吧。 就是不给他进去。 然后一直到顶上这个地方再把它括号括回去。 好格式化看。 看的清楚一点啊。 就是这一段无论怎么样。 他都不执行了。 if它里面零的话啊。 他肯定是不执行这一整段了啊。 但是前面的RTC初始化还是要执行的好。 现在就已经做完了。 做完之后呢。 我就把它显示出来呃。 显示出来话。 接抄这边标准库这边的代码吧。 啊然后写写个固定字符串。 这里呃这个地方。 然后呢啊再搞这边啊。 然后在while循环里面啊。 去读取时间。 而且并且把这个时间给显示出来啊。 上面这一段就不要了。 上面这段是啊。 用help库里面的获取时间。 刚刚发现这个是有问题的。 实现不了我们也要的功能啊。 把这个给弄出来。 呃底下的秒就数据这块也可以显示出来。 好现在我们编译啊。 反正有错误。 嗯帮我看下这个错误是什么。 啊这里啊时间的转换。 这里要引入那个头文件。 time点H的那个头文件。 我们直接拷过来吧。 就这个地方啊。 这个标准库那边也使用了。 我们需要引用这个time点H的文件头文件啊。 现在就没报错了。 好再编译一次啊。 没报错了。 现在呃应该就可以直接啊下载了。 下载。 啊应该里面的那个寄存器啊。 哦还有一个忘记忘记弄了啊。 就是掉电掉电的那个。 就他现在每次都设置时间了。 哦好像也不对。 刚刚那个数值就不是我们设定的时间。 我们设置的是24年。 这里为什么显示九七。 哦我知道了这个函数都没有调用。 设置时间。 这个函数都没有啊。 所以我要在进来的时候设置一下这个时间。 好再把它编译好。 设置时间。 这里有个报错。 我们看一下啊。 我们转到这个函数定义还是一样啊。 就是它有一个是DT要把这个删掉。 他才可以在魅中里面调用啊。 上面还有一个就是这个地方。 然后再把它编译好就没有了。 要再下载。 啊这个就正常了。 24年4月1号啊。 零时1分0秒啊。 然后的话呢现在就还剩最后一个功能。 就是调主电的时候。 备用电池供电的时候。 他还要他继续走时呃。 假设我现在不写的话。 他现在每次程序进来的话。 他都会去设置这个时间啊。 每次都是啊。 你插上电的话都是从这个开始。 我们可以去看一下。 就我每次断电再插上的话。 都是从啊临时1分0秒这个时间去走嗯。 所以我们就可以还是可以通过那个备份pk。 来判断它是否需要重新设置这个时间。 假如说之前也设置过了啊。 它就不需要再设置啊。 改的办法。 这个逻。 这个模式原理的话是跟标准库那边是一样的啊。 就是啊在这里。 然后那么机也say了。 要把它格式化掉一下。 这个代码看的好看一点。 就程序进来之后呢。 他第一次他这里不是1234的话。 他去去设置时间。 然后啊并且把它写成1234。 当你第二次进来的时候。 它是1234了。 他就不会再进进来设置这个时间了。 好现在我打把它编译。 然后呢再把它下载进去。 啊这个没问题。 然后演示调调触电。 啊现在我把这个主电给断掉。 现在是1分15秒好。 scar是一分钟。 我要把它插上去看一下啊。 是20秒。 现在啊日历还有啊。 时间连日日18秒都是正确的。 看都是没问题的。 我再断掉30秒。 啊插上去啊。 走到32秒了啊。 说明这个主电掉了之后。 它还是走时正常的好。 这个视频就到这里了。
31. 好下面我们来录制下一个视频。 这个视频应该是啊到PWR电源控制了啊。 PWR那电源控制里面有啊。 提供了三个例子啊。 就是低功耗模式上的睡眠模式。 停机模式。 还有待机模式啊。 睡眠模式的话。 它主要是把1.8伏的CPU时钟关了啊。 就是这个的时钟关了。 然后其他都是没关的。 然后其他没关的话啊。 他就是嗯寄存器里面的数据还是保值的。 就所有的寄存器的数据都是保持的。 都还是不会丢失啊。 然后GPIO的引脚的话的状态也不会变更啊。 他跟运行模式的状态是一样的啊。 这个是第呃睡眠模式。 要他怎么唤醒呢。 好我们看第三啊。 睡眠模式啊。 任意一个中段都可以唤醒啊。 等下我们就用标准库啊。 它的那个例子来演示这个任意中断。 我们主要是用了啊。 它的一个窗口的接收中断来唤醒啊。 睡眠模式。 那先打开标准库这边的这个例子。 然后呢我们打开它的窗口助手。 嗯超过多少。 你好。 先打开。 啊摄像头。 好打开一下摄像头。 啊这个刀过来了。 调一下嗯。 就这样。 然后呢我把它下载进去先啊。 先看下它的效果是怎么样的。 啊下载RB1啊下载。 因为刚刚我已经下载了一次啊。 睡眠模式的话。 它要有一个额外的操作才才能啊下载进去。 就是啊点按住这个的时候啊。 点然后分开好有点慢了。 我再来一次。 啊可以了啊。 就是可以这样理解。 就是按住这个铝线的这个键同时编译啊。 同时下载。 然后他就可以下载进去了啊。 因为我这里的话他这个代码怎么样呢。 就是啊他进来之后就判断啊。 冲断有没有冲断进来啊。 这个是前面的一个重断标志位啊。 中断进入中断的时候。 它就会把它设置成一啊。 假如说啊中断没进来的话。 好诶。 他就是运行底下的代码。 然后闪烁一下这个learning的这个字符啊。 然后就进入了啊睡眠模式啊。 我们看下色它是不是闪了一下啊。 它底下就是啊这个拉尼是闪了一下啊。 现在这个时候他他已经进入睡眠模式了啊。 他怎么解除这个睡眠模式呢。 就是我给他发一个数据啊。 窗口这边发个数据的话呢。 它就会唤醒那个SSTM3。 唉。 我发一个一嘛啊。 然后发的时候注意一下这里。 他这里又会闪烁一下啊。 又停了啊。 他停下来的话。 代码就停在这里。 然后当有数据过来的话。 它会就会触发窗口的中断。 窗口是中断的话。 就会唤醒睡眠模式。 然后这个代码就接着这里往接着这里运行啊。 运行之后又又会进入这个外循环啊。 要就继续判断啊。 这个终端标志位只要有的话有数据的话。 那就把数据给读出来。 就显示。 然后啊。 读完之后显示玩出来之后又闪烁了一下啊。 所以刚刚我们在看到啊。 这里数据显示出后。 显示完之后呢。 它又闪了一下啊。 我再来一遍啊。 发一个八过去啊。 这边闪了一下又没了啊。 所以这个就是他的一个睡眠模式。 好现在我们用help库来实现一遍这个功能。 应该二三十七PW啊。 哎E1P啊。 睡眠模式。 然后这个的代码应该是在呃。 串口接收这个基础上修改的。 我打开这里。 然后打开我这个说明文档。 低功耗的睡眠模式。 我们直接是按这个说明文档来操作啊。 其实这边是比较简单的。 啊打开有点慢。 稍等一下。 应该是USART啊。 接收应该是这个这个在这个基础上修改。 然后呢好复制一份。 然后粘贴。 然后把这个重放在我刚刚新建那个文件夹里面。 然后把它放在这里。 然后pd不了睡眠模式。 好找下。 看下在哪里。 这里太多了啊。 就在这里。 诶然后这个也要改一下重命名。 把这个复制下来。 粘在粘贴在这里重命名。 然后确定。 哦看下他这边mate里MC里面的代码。 啊这个是通过中断来接收它的呃数据的啊。 我们看一下这边他是怎么进入睡眠模式呢。 进入睡眠模式用的是啊这一行代码啊。 还哭泣。 也就使用这个就可以进入他的睡眠模式了。 好现在我编译一下。 看下它的实际效果是怎么样的。 啊打开先打开摄像头。 PW睡眠模式。 确定。 哦为了那个方便查看的话。 我们还是把那个learning字样也拷过来啊。 就在这个地方啊。 在这里。 然后的话就是啊这里没事就把它放在这里吧。 哎哦错了。 应该是放在底下的。 刚弄这个放在上面了。 应该是放在这里啊。 现在放在这里啊。 这个delay函数的话。 我们要用help库里面的delay函数。 应该是这个把它顺。 把它长一点。 就这样。 然后我把它下载进去啊。 这个下载应该也是要跟那边一样。 就是按下的时候再点那个下载好。 我按。 啊下载了嗯。 但是我们看一下这边的效果。 跟标准库那边有点不太一样啊。 因为我进入模式了。 按理说那个程序就会停在这里啊。 只有唤醒他作。 他才会继续工作的啊。 但实际上不是啊。 因为我这个LI字样还是一直显示啊。 还是一直闪烁。 说明啊这个他还是没有进入他的睡眠模式啊。 就是说啊他这里啊代码来到这里的时候。 还继续往上啊。 还继续代码还是继续跑啊。 还是没有停下来啊。 这是为什么呢。 这是因为啊标准库这边啊。 对于这种管理时钟系统。 还有低功耗模式的处理方式不一样啊。 help库这边还要手动关闭这个定时器啊。 因为这个这个定时器的话。 它会啊周期性的触发中断啊。 一触发中断了。 它又唤醒了。 就是啊它自动又又又唤醒了。 其实这个代码已经是起作用了。 但是由于啊他这个内部有一个这个定时器。 这个应该是叫做啊。 我们常平时是叫做滴答定时器。 滴答定时器。 然后啊它周期性的那个触发终端。 一触发终端的话。 它又换新了。 所以我们要用的话。 就需要把这个定时器给关掉啊。 到这里好把这个关掉。 然后啊等它恢复完之后又把它启动。 要不你在你程序运行会有问题啊。 就是这样子啊。 然后我现在在编译。 啊然后按住再下载。 好现在就跟那边有点一样了。 就是啊他进来的时候中断这里标志位还没有。 然后他这里就闪了一下。 闪了一下。 然后啊就进入了睡眠模式啊。 现在已经是进入了睡眠模式。 然后我把啊窗口给他发一个数据啊。 因为呃我这边help库跟标注框那边使用的窗口。 是一样的。 所以我这里就不用改了。 试用啊。 Com6。 然后我发一个五过去。 然后注意一下。 看一下。 这边他应该是收到了数据之后又闪一下啊。 啊没问题啊。 这个就跟标准库那边是一样的啊。 跟标准库那边是有点不一样的话。 就是啊这个地方需要手动把这个定时器给关掉。 要不它就啊你刚进入睡眠模式啊。 你不关掉这个定时器又触发了这种乱。 他又跳出来了啊。 就看不到我们要的那个效果好。 这个视频就到这里了。
32. 好现在我们来录下一个视频。 打开标准库。 这边呃还是电源控制嗯。 前面已经录了一个睡眠模式。 然后这个视频的话就录停机模式啊。 停机模式的话就是啊他需要任意的外部中断啊。 前面啊睡眠模式的话是任是任意中断。 内部还有外部都可以啊。 但是这个停机模式的话只能是外部的中断啊。 还有它要啊被关闭的电路的话。 是1.8伏的时钟区域啊。 还有一个比较重要的话就是他会把Y速啊。 外外部的高速失踪给关掉啊。 所以他等一下会恢复完之后。 需要手动通过代码来把这个时钟给恢复回来。 好现在我们看下它的一个实际的一个效果啊。 先大概标准库这边的一个例子就是。 啊停机模式啊。 这个例子的话是在前面的啊。 一个红外对射传感器。 计次的一个基础上修改的啊。 就是碰一下它啊。 那个感应器我们看一下摄像头啊。 碰一下这个感应器。 就这个对射感应器啊。 这个数据加一啊。 我是这样装的。 这个灯有点亮啊。 这是他的这个红外对射程。 还是碰一下这边计数的加一。 我们是在这个例子的基础上修改的啊。 加了哪些代码呢啊第一个就是啊只能停机啊。 模式的一个PWRPWR时钟啊。 然后后面的话它就呃显示那个计数的值。 然后闪啊闪烁一下这个learning。 然后就进入了停止停机模式。 然后停止模式。 然后代码就啊卡在这里了。 然后这个啊芯片就进入了停止模式。 它就不会再执行这个外循环了啊。 当我们去触碰这个感应器的时候。 它就会触发啊这个pp14的外部中断引脚。 然后触发它的话。 这个就啊立刻唤醒了。 就接着程序代码就接着运行啊。 运行的时候就是恢复啊。 恢复它的呃。 那个系统的外部高速时钟啊。 恢恢复完之后再进入这这里啊。 这这这读取它的值啊。 这个就得到了一技术一。 然后继续循环循环下去。 然后又进入停机模式。 它大概的啊这个运行过程是这样的。 我们把它编译下载进去看一下啊。 编译下载进去啊。 因为我现在已经是这个啊停机模式了啊。 停机模式下预下载的话需要按住这个。 然后啊按下复位键。 然后在那个点下载啊。 刚刚看到他一次闪闪烁了一下。 那我们在啊让他重启一下。 看下这里啊。 这个learning闪了一下啊。 意思是说这个代码是正常执行了。 已经执行到这个地方已经闪过了。 然后他已经到这里来了。 已经啊进入了停止模式啊。 现在我去碰一下啊。 它这个感应器啊。 把它移过来一点。 再放大一点嘛啊这个移开一点啊。 把它去碰一下它啊。 这是加1+1之后他又闪了一下。 闪了之后呢。 他又会进入这个啊停机模式啊。 我再来一次啊。 去闪一下。 它就会触发PB14的外部总装。 触发完之后他就会唤醒这个停机模式。 唤醒之后啊。 这个代码就就接着运行。 而且运行就恢复系统时钟。 然后重新啊重新这样循环啊。 这个就是它的一个实际效果好。 现在我们用help库来实现一遍这个功能啊。 先打开这边。 然后是38。 PWR停止模式。 stop model嗯。 然后我们的这个例子的话是在前面的啊。 中断啊。 也是在这个基础上修改的。 就是红红外对射传感器计次的那个基础上修改。 我们先打开它。 然后他打开点慢。 在他打开的时候啊。 我们啊打开我help库这边呃。 这边的一个文档。 然后的应该是啊停止模式啊。 这个非代码非常简单。 就找几句代码行了。 我看这边打开没有。 应该是嗯几次那个在哪里。 这里太多了。 啊这里啊外部中断计次的。 我看一下是不是这里是不是这个这个代码。 打开OC里面看它是不是pp14引脚啊。 做那个配置为外部中断就知道了。 啊就是就是这里啊。 就是这个代码这个没问题的。 所以说我们在这个代码的基础上修改。 把它copy1份。 然后在底下啊找个地方把它粘贴。 然后粘贴的地方的话。 就是刚刚我新建的那个文件夹这里嗯。 然后这个叫做PWR停止模式。 啊让他复制。 PWR停止模式应该是在这个地方啊。 然后接着改一下他的那个IOS名字。 这个已经操作过好多遍了。 啊这个代码就不去解读它了。 因为这个在前面呃已经说过这个例子了。 然后我们只需要把啊相关的进入停止模式的呃。 那个函数给加进去啊。 第一个的话啊进入停止模式啊。 需要哦我们在进入停止模式之前。 显示一下它的时钟啊。 当前的时钟啊。 当前时钟是这样获取的。 就是在这里啊。 调用这个啊这个这个函数的话。 就可以获取它的当前使用的那个频率啊。 这个应该是获取出来应该是72兆赫兹啊。 然后啊闪烁一下这个learning啊。 那边也是也有标准库。 那边也有。 我就闪烁一下啊。 散了之后。 我就说明它散了之后的下一步就是进入了停啊。 停止停止模式啊。 再进入停止模式。 停止模式就是用这个啊函数就行了啊。 然后他就停在停。 进入停止模式代码就会卡在这里啊。 但他就去检测它的唤醒引脚啊。 等它唤醒之后呢。 再继续往下执行。 就是恢复它的时钟。 好。 这个应该就完了。 然后我现在把它编译嗯。 打开下摄像头诶。 不是这个这个啊。 再下载进去PR停止模式。 确定。 呃这个下载的时候也是要按下这个启动键啊。 等它报错下。 好像下载之后咱不报错的话。 再点下载的话。 下载不了了啊。 报错了之后。 我就啊因为进入了上一次已经定义。 进入了停止模式。 它是下载不进去的。 所以我们按一下啊复位键。 然后再点下载。 啊已经可以了。 好我们重重启重启下。 看一下它它是怎么样的啊。 闪了下这个learning闪完之后啊。 它就会进入这个停机模式。 好现在我去挡一下它。 啊这个正常的挡一下就是一嘛要再去打一下。 二把它翻过来一点。 最大化。 342这里加完之后呢。 底下就会闪烁一下这个learning的那个字样。 闪完之后它就会会再次进入这个停止模式啊。 这个时钟始终是不变的。 只是二兆赫兹啊。 假如说你把这个不回复时钟的话。 这里肯定是不是超12兆的。 大家可以验证一下。 好。 这个视频就到这里了。 演示了一个停止模式。
33. 好现在来录制下一个视频啊。 标准库这边呃。 这个应该是到pd8电源控制的。 最后一个例子就是待机模式。 而待机模式的话。 它关闭的外设是最多的。 它唤醒的这个办法也是啊越越麻烦了呃。 待机模式需要啊这个wake up引脚试试。 我们开发板上的一个pa01脚。 还有RTC闹钟时间啊。 就是我们IDC实时时钟的时候。 给他设置一个闹钟。 它到达那里的时候。 他他就会触发这个闹钟给事件啊。 还有后面这两个啊。 他才能唤醒待机模式啊。 因为代子模式它关闭东西太多了。 所以它寄存器的数据是全全部丢失。 它恢复之后啊。 不像前面那那两个模式一样啊。 代码接着运行。 而是啊从头开始。 就相当于按按下了那个复位键啊。 但程序是从头开始的。 而不是代码接着运行好。 现在我们看一下这个标准库这边的一个效果啊。 就是啊待机模式上的RTC实时时钟还用。 我这里是用他的啊。 那个外部外部化形引脚。 这是PA0引脚。 好我们把它下载进去好。 打开摄像头。 变异啊。 这个也要按一下。 啊已经下载进去了。 我这里只是单单把他的一个时间戳。 给显示了出来啊。 没有把这个时间戳转换成对应的时间好。 我们看这个时间戳就可以了。 然后首先它进来的话。 他就啊打开了这个待机模式。 需要的这个PWR时钟啊。 然后后面这个应该是闪烁。 雷声闪了之后呢。 他就会进入进入待机模式。 我们把这个时间闪的时间改长一点吧。 因为100ms的话。 你很难看到它在闪烁。 好我们编译再重新下载进去。 啊看到了底下会闪了一下。 我再看一下啊。 会闪上learning好。 现在这个计数器已经被写到那个时间戳里面了。 这个时间戳是呃它的一个后备区域啊。 它是由呃VBA提供电的。 现在我这个开发板上也也给这个VBA啊。 备用电池可以供电的。 所以这个数据是一直保存上来的啊。 然后它指的是它内部的这个啊。 时钟还是在走时的。 我们把它唤醒一下。 看下啊。 就是在这个PA0引脚这里给它一个高电平啊。 就是这个高电平我换一个啊。 九五再换一下啊。 现在计时是698。 后面那几位数啊。 再换再唤醒一次啊。 705。 然后708啊。 就是说他现在啊即使进入了这个待机模式。 它里面的那个时钟仍然是走私的啊。 然后啊唤醒了之后呢。 他又闪烁了他这个learning字样。 闪烁完之后又继再次进入了待机模式啊。 这个就是啊他一个唤醒待机模式的一个例子。 然后我们现在在呃help库总实现一遍这个功能嗯。 首先啊在这边新建一个文件夹。 39。 PW哈。 Stm by s t a n d a y。 啊这个应该是这个例子是在实时时钟。 RTC实时时中的这个基础上修改的。 我们打开第444中这个例子。 啊打开打开的时候。 我们打开时候我这边的这个说明文档嘛。 就低功耗的standby待机模式。 好打开没有好。 我们再找下RTC实时中的呃。 那个例子刚我已经打开了。 这里太多了。 找起来有点麻烦。 RT14中应该是在这里啊。 没没错。 就在这里。 我看一下是不是这个看清楚一点。 啊没问题。 就是这个喂。 啊这里把它复制。 然后在最底下把它粘贴。 然后把它放在我的刚新建的这个文件夹。 这里复制。 然后呢就在这边位置这里。 然后把名字搞一下。 A p w r stop model。 在这里38就在这个地方啊。 错了应该是点by这个地方。 把这个名字给弄上来。 然后呢把这个名字改一下。 好然后按照我这边的这个操作步骤来啊。 第一个是需要配置pa0引脚啊。 把pa0角设置为唤醒唤醒引脚啊。 我直接打开IOC这边就行了。 啊PA0啊。 就这个地方哎。 左键点击它。 然后就可以看到呃。 应该是这个系统换新引脚啊。 然后这样点就行了。 然后我们点下保存。 保存之后编译有可能是不通过的。 因为前面哎可以通过哦。 我再看一下。 有可能我配置了那个不修改。 假如说不通过的话。 他肯定是RTC啊。 这个去读那个计数器的时候啊。 前面变成了CSTATI啊。 这个还可以编译成功吗。 我再看一下。 再重新打回这里。 看是不是刚刚不是编译的。 不是这个还可以。 哦看一下啊。 啊可以就先不管它了啊。 然后呢啊底下是我们看下载。 看下它的一个实际效果啊。 就说我现在还不加啊。 还没有启用进入啊待机模式。 我就看下啊。 他在史诗中啊。 史诗中的那个啊代码的一个效果。 确定。 啊下载应该按下这个复位键。 啊目前的话我们只是在实时中。 实时时钟那个基础上改了啊。 新增了那个引脚。 初始化引脚。 但是我还没使用。 到目前为止。 按理说现在的这个程序效果。 应该跟实时时钟那个效果应该是一模一样的。 and that要让他下展。 啊这个是没问题。 2023年12月27呃。 然后我这里设置二是2023年吗。 我看一下。 也是2024年了。 我把它电断一下。 再让他重启一遍。 有可能里面有那个啊保存的功能了。 那个GC计时器保存的功能。 我把它断电。 好现在是2024年11月1号的这个。 所以这个是没问题啊。 这个跟RT c44中的那个效果是一模一样的。 然后现在我就开始改它。 进入啊待机模式的代码啊。 进入待机模式的代码也是非常简单。 第一步的话就是呃死能失踪。 然后使啊使能他的啊化形引脚啊。 就这两行代码就可以了。 我们把它放在这里啊。 这这两个代码的就是使能那个引脚。 让它啊作为唤醒唤醒单机模式上的引脚。 然后底下就是啊进入它的一个。 啊待机模式进入待机模式前。 我们要啊使用使能这个PWR的RCC时钟啊。 就这两这就这两个地方改一下就行了啊。 现在我们直接看一下。 效果好呃。 我们去里面检查下。 按理说在RTC实时时钟那边的话啊。 这个地方里面的设置时钟我们是要关掉的。 我们不使不使用它的。 给我们自带的那个设置时钟啊。 没问题。 这里还是原来的if f0。 就是说这一段是不执行的。 我们是用啊自己写的这卡出来给他设置时钟。 在啊RT c c14中那边我们已经讲过了啊。 就是加了这个两个代码。 然后我们看一下效果。 然后编译。 然后按住复位键。 然后再下载。 好现在他应该我们把它重启一下吧。 因为里面有一个那个刚可能遗留是呃。 上一个程序弄出来的一些状态。 就是他这个啊BKP寄存器里面有数据。 诶等一下。 嗯啊他现在已经下载进去了。 要下载进去之后呢。 啊他这里就停下来了。 因为我们已经进入了这个待机模式。 所以这个看到的数据是不会再闪烁了。 因为代码已经啊已经卡在这里了。 然后我们去把pa01角给它一个高低平。 让他啊复啊。 让它复位一下。 就相当于唤醒。 然后它会程序会从头进行啊。 点一下还是30。 然后再点啊。 32。 32啊。 33。 所以这个时钟仍然是在走势的啊。 跟那边的效果是一样的。 3.63.6啊。 38。 所以说这个就验证了它进入待机模式。 这样的话这个RTC其实中仍然是在走私的。 而且的话进入之后再点这个。 它是从头开始执行的。 只要不是接着代码运行。 它是从头执行啊。 因为从头执行。 我前面已经写了这个BKB寄存器啊。 假说里面的数据是还是1234的话。 他不会再去设置我的时间。 所以这个时间是啊接着走的接着走的。 而不是重新设置成啊。 我这里刚开始设定的这个默认的时间好。 这个就是啊待机模式上啊。 呃关于这个袋子模式啊。 有时候啊这个RTC时钟。 有时候啊这个因为我们是使用了呃。 一个外外部的底数低速时钟。 我看一下啊。 打开时钟。 这里好。 我使用这个时钟。 这个时钟的话其实就是啊。 在这个地方的这个硬件啊。 就在这里啊。 就是这里有一个黑色的一个硬件。 有时候他不起正不起。 正的话就是他看了效果的话啊。 就是呃这个什么动作都没有啊。 这个不起正的话。 我试了好几款。 这个好几个单片机的话都有这个现象哦。 我目前暂时也不知道为什么啊。 呃有时候行。 有时候又不行。 我有时候那个尝试的时候不行的时候。 我对它啊吹一下气啊。 又他又可以了。 我不知道这个办法是不适用。 普遍的情况。 就是对这个STM到这个地方啊。 哈一下哈一下气。 吹一下气。 它就啊又正常的工作了啊。 就是啊这是一个呃小小问题。 目前我也不知道他为什么会不起。 正起证不成功啊。 好这个视频就到这里了。
34. 好下面来录制下一个视频。 先打开标准库。 这边呃应该是到看门狗呃。 看门狗里面的话。 它有两个例子啊。 一个是独立看门狗。 还有一个是窗口看门狗啊。 我们先看独立看门狗呃。 独立宽门狗的话主要是要理解它的一个原理。 它的原理它跟定时器的原理是差不多的啊。 首先的话是一个低速内部时钟啊。 进来这里啊。 进到这里的话。 它有一个啊预分频器。 就是把时钟的频率降降低啊。 按这个预分频器的一个啊降降到多少分屏啊。 见底之后呢。 这个时钟就会啊传入到这个递减计数器这里啊。 每来一个脉冲的话。 这个递减计数器就减一啊。 当它减到零的时候啊。 它就会产生这个IWDG复位啊。 就是独立卡门口的复位。 就是单片机就会重新复位啊。 当没有减到零的时候。 才减到一半的时候。 你去喂狗喂狗。 就是操作这个键寄存器啊。 它就会把啊最大值就是重装载值。 重新赋值给这个递减计数器啊。 使它永远减减不到零。 就是每次准备减到零的时候。 减到一半的时候啊。 你就去喂狗喂狗的话。 就是实实际上的话就是操作啊这个降气存器。 然后他就会把啊重装载值的最大值赋值给啊。 这个递减计数器啊。 让它永远啊不要减减到零啊。 减不到零的话。 他就不会产生IWTG复位额。 他的溢出时间啊。 他的溢出时间跟定时器那边计算也是一样的啊。 然后啊他根据这个公式的话。 他就额列出了一个这样的一个表啊。 这个键子键寄存器设置多少的话。 他预啊这个PR寄存器设置多少。 然后这里对应的是几分屏啊。 然后呃设置多少分屏。 然后这边它就有一个对应的最小时间最大时间。 这个最小时间。 最大时间是根据呃前面的这个啊12位。 重装载值这个寄存器来的。 这个12位它最小的话是零嘛。 最大是4095。 然后这里就可以计算出来一个。 他的一个最小和最大时间啊。 这个计算我们就原理了。 上的计算我们就不看了。 我们直接看他的一个例子啊。 江西那边的话计算出来用16分屏。 然后重装暂时用2499的话啊。 就可以啊计算出它的呃喂狗时长是1000ms啊。 再晚于1000ms去喂狗的话。 再进再进行去喂狗的话是无效的。 就晚于1000ms啊。 它就会产生IWD去复位了。 还有我们需要喂狗时间。 需要在1000ms以内去喂狗。 它就啊不会产生IWG复位好。 我们看一下它的在标准库这边的一个效果。 打开测试例子应该是这里打开。 额然后额这边的话就是首先是刚程序。 刚进来的话。 他是判断啊当前的这个复位是什么造成的啊。 假如说是IWG造成的复位的话。 他就会在这个OLLED屏幕上闪烁一个IWG。 IST啊的字样。 假如说正常按reset啊。 控控制板上的那个复位按钮加长的话。 它就会显示这个。 然后底下就是设置它独立开门口的两个参数啊。 这两个参数还有时能啊。 然后这里while循环里面的话就进行喂狗。 因为我现在是间隔800毫800ms啊。 喂一次狗啊。 在这个时间内。 在这个时在这最晚时间被狗时间以内。 所以他这个就不会产生啊。 IW去复位好。 我们看一下它的一个实际效果啊。 打开摄像头好。 等一会我先打开摄像头好。 摄像头打开了。 我把它这个编译重新下载进去看一下。 好现在是编译下载。 啊下载下载的时候呢。 刚可以看到额。 首次进来的话。 他是这个闪烁了一个RST啊。 就相当于我按下了开发板上的一个付费按钮啊。 然后他这个静止这里啊。 他就没有去不断的去产生IWDG位啊。 说明他一直在这个外循环里面跑啊。 这是没产生嗯。 因为我在指定的时间内喂狗。 它没有去产生啊啊啊这个IWDG复位的。 所以我现在我让它产生IWDDG复位啊。 就是把这个喂狗时间晚于1000ms。 现在我把它改成1100啊。 1100ms。 我现在再编一张三打进去啊。 这时候他肯定会啊。 每次都会产生一个IWG复位的。 因为我这个喂狗时间太晚了。 好首次的话他是那个的首次我下载进去。 它是闪烁那个IRST的。 因为啊首次的话。 他还没有执行到这个底下这个代码。 所以他首次进来的话。 他是进这里的。 然后后面后面执行到这里的。 喂狗时间晚于啊1000ms的话。 他就不断的去产生IW去复位了。 所以这里看到的话屏幕闪一下啊。 就说明它是啊复位了。 然后底下的话就是说啊。 就是闪烁到底上啊。 这个是标准库这边的啊。 一个效果好。 现在我们啊用help库来实现一遍这个功能啊。 这边试应该是40了。 IWDG啊。 测试吧。 要我打开Q版电影。 然后呢我这边对应打开word这边的一个操作文档。 要是独立看门狗。 独立com门口操作实施。 在cube ide中也是操作。 也是非常方便的。 好等一会。 我还是在我这个OLED的这个项目基础上修改复制。 然后这里整点。 Paste。 然后呢。 路径的话就是放在我刚刚新建的那个文件夹。 那里啊。 用的名字是IW g test。 应该有可能是在前面。 IW dj test就在这里。 用后重命名。 把这个。 重命名。 啊我们接到里面去打开啊。 它的一个IWD区啊。 就是这里啊配置。 然后这里激活它。 然后底下就需要设置预分频器。 还有一个重装载值啊。 我们直接用这边就行了。 我们这里是16分屏。 还有2499好。 直接填到这边就行了。 16分屏哎呀。 我这个好像这个QIDE每次都是这样。 有时候又选不上。 很难选。 啊等一会我这个。 嗯sleeping有时候能很易选。 有时候是很难选啊。 然后底下的话我再根据这边是2499。 把它填在这里。 2499啊。 然后保存就可以了啊。 这个时钟的话它默认就是用啊。 那个呃内部的一个低速时钟。 我们可以打开这里啊。 在这里IWD区的话。 它默认已经使用这个啊。 四十四十千赫兹这个时钟了啊。 时钟说这边我就不需要多配置。 然后我直接用就行了啊。 然后底下的代码的话。 我直接从我这个说明文档这边拷过来。 因为我之前已经还对它进行一个测试了。 啊首先首先的话我这里就啊先把这个给拷过来。 先把这个拷过来。 呃这个是显示此次造成是什么复位的。 假如说是IWDG造成的复位的话。 它就在屏幕上闪烁这个嘛。 然后正常的那个复位的话。 它就闪烁这个啊。 这里我还多做了一个操作啊。 我这就进行了一次喂狗啊。 这个跟江贤那边稍微有点不一样啊。 为什么要这样子做呢。 啊因为他执行的这个操作之后啊。 他就马上就开始计计时了啊。 我这里只是一个喂狗。 就是为了等一下我这里的延时啊。 已经超过它的喂狗时间了。 所以我在这里先执行一次喂狗。 然后底下的话就是额正常的喂喂狗就行了。 在外循环里面。 啊假如说你这里等一下。 你这里的延时已经超过它的最晚延时的话啊。 它在在显示这个字符串这里这个地方的时候呢。 它就已经执行复位了啊。 我这里演示的是1000ms啊。 这里500+100啊。 500100的话大概是600ms。 他还没到那个1000ms。 所以说呢这个地方啊执行完这个地方的话。 他还不会啊产生IWDG的这个复位啊。 到底下的话呢它就啊间隔呃。 我先建个800ms。 让他喂一次狗。 然后这个是在1000ms以内。 所以这个是不会产生IWG复位的。 我在编辑把它下载进去看一下效果。 好先打开摄像头。 然后下载IWDG。 诶等一会这个怎么没显示呢。 啊这个屏幕上面怎么没显示的哦。 他其实已经是显示过了。 我们这里还少了一行代码。 就是前面的这个地方啊。 IW dj test啊。 这个地方要显示一下出来啊。 然后我们再把它编译下载进去看一次。 啊看下这边的效果。 应该是闪一下rs t。 这里啊没问题。 这里闪一下s st。 然后后面的话就不会有那个了。 啊我们再看一下效果。 再重启一下。 它好。 IST啊。 这边是IST没问题。 就说我现在的一个喂狗时间是800ms。 然后小于的是1000ms。 所以他就不会不断的执行复位。 现在假设我把时间改为1100啊。 这个是啊这晚于他的最最最最晚胃口事件了。 然后我现在再把它编译上去。 好现在就不断的去产生它的啊。 IW地区复位了。 这是独立开门口的啊。 这个效果就跟标准库那边是一样的好。 然后这个独立看门狗就到这里了。
35. 好现在接着录下一个视频呃。 打开标准库。 这边还是看门口啊。 前面已经说了。 独立看门狗这个视频的话。 就剪下窗口看门狗啊。 窗口看门狗的话。 它主要的作用就是啊。 V口时间是固定一个窗口窗口值啊。 意思是多少毫秒到多少毫秒内啊。 直接喂狗。 假如说你太早或者太晚喂狗的话。 它都会产生IWD啊。 那个WWD去复位啊。 他跟独立看门狗那个稍微有一点点不一样啊。 这个独立看门狗的话只是规定的最晚时间啊。 他啊他们也规定啊最早时间啊。 这个窗口看门狗的话啊。 窗口看门狗的话。 它主要就是根据这个啊。 看看懂这个原理图就可以了啊。 他是前面的T0到T5位。 就是啊控制它最晚的喂狗时间啊。 这个体力位是一个标志位啊。 然后上面的W0到W5的话。 它是确定它的最早回口时间啊。 他的这个胃口时间呃。 可以由底下的这个。 他把所有的预分频器。 被对应的每一个预分频器的系数啊。 他能控制的最把它都列出来了。 就最早最最小跟最大的时间都它都列出。 列出这里啊。 这个你就可以根据这个表格来选。 对应的预分频器。 假如说你啊。 你希望你的那个喂狗时间是30ms。 到50ms的话啊。 你只能选择这个八分屏。 因为前面的这个他都不符合啊。 这个原理方面的话。 这里就不过多介绍了。 我们直接看下它的代码是怎么样的吧。 啊标准库这边根据前面的这个公式啊。 假如说你需要控制在30到50ms的话啊。 你需要计计算出它的啊。 前面的这个T0到T5这个值。 还有W0到W5的值啊。 他算出来的话就是一个是啊21。 一个是54啊。 他前面要货上的这个是0X40。 就是啊前面的这个标志位啊。 他设置的话是要设置七位的啊。 设置的话要把这个T0到T6都设置进去啊。 但计算时间的话。 我们是指啊只用T0到T5来进行一个啊。 时间来计算啊。 上面也是一样。 也是七位都设进去的。 设置进去的啊。 这个跟help库那边有稍微有一点一点不一样啊。 他计算最晚跟最早时间的话。 只是用啊T0到T5。 还有W0到W5啊。 第六位的话啊。 第七位的话就是W6跟T6的话。 它是通过啊这个for啊。 前面这个数据去改变它的第七位。 然后把它写进去了啊。 help库那边有点不一样。 他是直接啊用啊七位来计算。 就是啊他是W0到W6都参与额。 那个最晚跟最早时间的计算。 所以这个计算方法稍微有一点不一样。 等一下在help库那边我们就可以看到了啊。 这样设置完之后呢。 他就是他的喂狗时间的话就是30到50ms。 然后你执行40的话啊。 他是满足30~50的。 所以40ms的话。 他就不会产生那个啊WWDG复位啊。 上面的话它就正常显示好。 现在我们打开这边标准库。 看下它的一个实际的效果。 应该是窗口看不够。 啊变异。 然后现在我设定的是29ms。 29ms不在30~50之间。 所以他这个应该是不断的去产生啊。 WWD去复位的啊。 前面也是跟独立看门狗一样。 这里需要改一下。 看WWDG复位。 它就会进入到这里面去闪烁一下这个字符串啊。 假如说是普通的复位的话。 它就会进入底下。 好现在我看一下。 把它下载进去。 看下实际效果。 啊在不在30到50ms的话。 他就一直产生WW地区复位。 所以啊看到他的话不断在闪啊。 闪一次。 意思就是它正在执行复位啊。 然后显示底下这个字符的。 说明他走的是上面的这一步。 产生WWDG复位的话。 他就会闪闪一下这个字符啊。 所以这个是不在窗口时间内的啊。 现在我再改一个在窗口时间内的。 就是嗯四十四十毫秒。 在就在30到50ms之内。 好像我编辑下载进去。 这个它就不会啊不断的直接复位了。 因为我这个喂狗时间是在窗口窗口内的好。 他只会闪烁一下这个啊正常复位的这个字样。 然后后面他就不会每次去啊。 重启产生WW的D去复位。 每每次进行复位了。 因为我这个时间在窗口期内好。 这个是标准库这边了。 现在我用help库来实现一遍这个功能。 然后打开还是打开QYD1啊。 先新建一个文件夹吧。 下面然后叫做WWWDGTTS嘛。 然后打开QYD啊。 打开同时我先打开我这边的一个操作步骤。 窗口看门狗。 呃先完善一下这边吧。 先把还是从OLED这个项目基础上修改。 然后粘贴。 然后放在我刚刚这个地方。 4441。 然后放在这里。 负责。 嗯在这里。 好我们呃按照我这边的一个提供的一个步骤啊。 呃首先的话是需要打开啊WWDG啊。 窗口看门狗。 然后把它激活啊。 然后这里有几个参数啊。 第一个是预分频器。 然后第二个的话是啊控制它啊。 一个窗口时间的数字数数据。 然后第三个的话是控制它的一个啊。 最晚喂狗时间的数据啊。 这个跟标准库那边是对应的。 它也是需要设置这三个参数啊。 但是这里的这三个参数的话。 他是从呃TT0到T6位都参与计算的啊。 标准库那边的话稍微有点不一样。 我们给打开标准库这边再看一下啊。 他只是啊用T0到T5进行计算。 你看这个公式这里他都是用T0到T5啊。 还有T0到T5。 W0W0到W5啊。 这几位几位参与这个最晚跟最迟时间的计算。 但是标准库这边啊就不一样。 因为它这里给你输入的话。 它都是啊从T0到T6。 W0W到到W6。 呃。 这全部都参与计算的啊。 计算方法稍微有一点不一样。 呃他这个是怎么样呢。 他这个啊他这里需需要设置三个参数。 然后啊这个最晚最晚的时间的话。 就是其实就是设置的这个初始值。 T0到T6的这个初始值。 然后窗口值的话就是啊。 你需要最早的喂狗时间的话。 它是需要设置这个啊。 Windows value。 windows value的话啊。 他应该是额设置到W0到W6啊。 他就是一个递减数据。 减减减一直减到呃。 减减到这个0X400X四零的话。 就是呃啊它会产生一个死死。 前中段就是标准库那边也有说了。 然后到这里的话啊。 再再多减一的话。 它就产生一个复位了啊。 所以我们主要是确定一。 需要确定的是T0到T6。 还有W到W6就行了啊。 他这个计算公式是怎么样的啊。 我也写出来了啊。 TWDG这个是时间啊。 窗口好。 最晚的时间。 然后这个时钟频率还有4÷4096。 还有八分频啊。 这个啊分频系数我也跟那边是选择是一样的。 然后T0到T6就可以算出T0到T6啊。 这里是需要减去63的。 这个63应该是啊0X40的值。 我们看一下0X40应该是是应该就是63。 查看程序员16进制0A40。 幺十进制六十六十三哦。 应该是哦。 应该是3F是他以最大值一减减到3F。 这里的时候呢。 它才会产生那个WWZG复位。 所以我们是需要上F。 应该就是六十三三。 F这个时间记忆的话是零三啊。 只需要记住这个公式就可以了。 我们主要是需要算出TT0。 T0到T6位的数值。 还有W0到W6啊。 首先我们确定嗯最晚的时间是50秒。 通过上面的公式啊。 已代入的话就可以算出T0到T6是啊。 117.93啊。 然后再通过底下这个窗口。 这个时间的话。 我们也可以算出W0到W64814.97啊。 30。 然后代入上面公式。 我就不一一计算了。 我们直接用算出来这个结果啊。 T0到T6是117.93。 我们就认为他是118吧。 118就需要填到这个地方啊。 还有这个填这里需要注意的。 我们先填小了。 小的是在上面。 小的是80。 用85吧。 84.97。 我用85。 哦这里需要先需要选择的是八分屏。 要不它就报错了。 然后这里的话是需要选择100。 选择118吧啊。 这是这个窗口值。 它填的就是W0WW6的值。 然后上面的话就是填的是T0到T6的值啊。 这样计算之后。 他的窗口时间就跟标准库那边是一样的。 是30到50ms好。 然后这样就可以了。 把它保存代码保存。 然后就会生成给我们生成相应的代码。 还是一样。 在这边M点C这边的话。 按照我这个操作步骤来。 应该是在这里。 诶等会我调整下这个窗口。 好可以了。 然后呢这里就初始化那个窗口看门狗呃。 然后初始化窗口看门狗之后。 我们显示一个啊WWDG的一个字样。 就是说就在第一行显示这个字符串嘛啊。 然后底下的话还是跟那边一样啊。 判断的是当前是什么造成的复位。 啊因为我这里闪烁了一个字符啊。 这里就啊已经超出了它它它的窗口时间了。 因为我这里需要跟JC那边做同样的效果。 因为他那边的话啊。 他是需要闪烁一个字符。 闪烁这里的用了六百六百毫秒。 我们的窗口时间是30到50ms。 所以他执行到这里。 执行到这里。 然后他就肯定执行那个啊WWD就复位了。 所以我们把初始化WW的初始化。 需要放在这些代码了之后。 然需要把这个放在代码之后啊。 这样子的话。 因为我前面还没开始。 还没初始化这个窗口看门狗。 所以它执行耗时长的话。 也没问题啊。 执行完这些之后呢。 再执行啊。 这个WW地区的初始化。 初始化完成之后。 我们再从在外循环里面进行喂狗。 啊就是这样。 啊30~50。 现在我是40ms。 他按正常说是在窗口之间内喂狗。 这个应该是没问题的。 现在啊按理说他不会啊。 循环的去产生WWD去复位好。 现在我来看一下实际效果。 把它放大一点。 然后下载进去。 Wwdg。 好这个WWJ他刚刚只闪烁了一次啊。 只闪烁了一次这个正常复位的字样啊。 我再按重启啊。 这里是正常复位。 删错了。 然后后面就它不复位了。 就代码一直在外循环里面。 不断的隔40ms进行一次被勾好。 现在假如说我超出他的时间50的话。 改成60啊。 这个已经额大于最晚的喂狗时间了。 这时候他肯定会啊不断的产生WWDG复位。 啊这个就不断的参与长沙W对。 因为我不在这个窗口期啊之内。 这个是网大于最晚时间。 现在现在我早如早于最早时间30。 我改成10ms吧。 我就提前喂狗。 他应该也会进入这个WW地址复位。 啊是一样的啊。 所以这个就是窗口看不懂啊。 这里有几个需要注意的话。 就是跟标准库那边。 它的计算最早跟最晚时间有点差别啊。 标准库那边计算最早跟最晚时间的话。 他只用了啊W0到W5。 还有T0到T5啊。 它的一个标志位。 T6的标志位。 它是每代进去计算的啊。 它写入的时候是通过for的这种办法啊。 去修改它的啊。 T6位还有W6位啊。 就通过这个货的办法去修改它。 然后把它写到这里面去了啊。 但是BO总库这边的话。 它是啊W0到W6。 他是参与去计算它的。 最晚还有最早的时间了啊。 这个公式的话就跟那边一样啊。 啊差不多啊。 稍微有一点不一样。 就是后面的这里啊。 后面的这里啊。 你假如说你想那个最晚跟最早时间。 你把它啊设置这里。 然后啊写在前面。 然后就可以算入T0T0到T6。 还有W0到W6这两个数据。 然后根据这个数据的话就可以填入啊。 这里两个数就可以了。 填入啊这个IOC这里啊。 这两个数对应填。 还有一个填要注意的话。 需要填小了再填大的。 因为这个你啥时候想填大。 再填小的话啊。 他有时候输入不进去啊。 这个大的话它是它的取值范围。 是需要根据小的去确定的啊。 他说你这样反的话。 有时候有可能是写不进去的啊。 这个就是窗口看门狗好。 这个视频就到这里了。
36. 啊上面来录制下一个视频啊。 这个视频的话应该是到flash闪存了。 这里的flash闪存啊。 并不是我们前面啊说了这个WQ25Q64啊。 这个是外接一个小的这种芯片在外外外面来啊。 作为它的一个存储器。 而这里的我们今天要说的flash闪存的话啊。 是它芯片内部的一个存储器啊。 是它自己在它芯片内部的呃。 这个扫除的话。 它跟前面的额这个有很多是相似的地方啊。 读操作。 写操作。 还有一些擦除的插座都很相似啊。 我们这里的flash删除的话。 它也是按页来啊区分的啊。 最小单位就是页嗯。 你擦除的话最小单位只能擦除一页。 然后写数据的话也是按页来啊。 写入呃。 我们这个呃C八T六FF103C八T六的话。 它只有64K啊。 这是我们在前面啊介绍的他的型号。 这里啊F103C8T六啊。 主要看这个八。 这里我们这八这里并表示说它有64k flash啊。 64K啊。 它分成啊64页。 每一页每一页的话就是1KB啊。 所以说呃它64K的话。 它其实地址是0S8啊。 后面000000啊。 到最后一页的话就是底下的这个地址啊。 然后我们会可以结合一个啊s st line啊。 UUDISTINGUTIITY啊。 这个软件啊。 来查看它内部的这个呃。 在这个存储器的一个数据啊。 我们先把它连接起来啊。 连接起来的话就可以啊。 看到啊看到所有flash的一个数据啊。 前面这部分的话啊。 肯定是我们啊扫入进去的一个程序啊。 一直往下拉往下拉往下拉啊。 我们发现它并没有这个地址。 并没有达到这个零X8.0FC零零啊。 这是一个比较少的。 因为它这里还没显示全啊。 那它要多少才能显示全呢啊。 我们可以来算一下啊。 要设置这个size。 我们可以算一下。 大概要设置多大呃。 打开一个计算器嗯。 我们是64KBKB的千啊。 64k。 然后呃64K乘以1024啊。 就等于65535个啊。 by然后这个by的话要转换为16进制。 因为这里输入的是16进制。 然后我们转转换16进制啊。 所以是1万。 所以我们要啊这个软件需要读取1万个字节好。 现在我们先把它断掉。 然后读取1万个字节。 然后再把它连接起来啊。 现在就把整个的啊flash64K的都读取出来了。 我们可以看一下啊。 这个数据比刚刚是要多的。 然后前后面的ff f是表示还没用到的。 啊意思就是我们现在目前给这个C8T6。 这个STM32下载的程序的话。 它只占用了前面这部分的内存。 后部后面一大部分内存的话都是FF。 他都是还没用到的好。 然后呃接着往上嗯。 今天晚上应该就没什么了。 呃。 然后我们直接用help库来实现它这边啊的一个啊。 删除操作读取。 还有写入擦除啊。 这些功能我们直接用help库来实现一遍啊。 首先在这边啊新建一个flash的一个文件夹。 用来存放42哎。 哎要么打开cube版电音。 啊打开之后。 还是在这个OLED的这个项目基础上修改哇。 这里太多了。 啊这里。 复制。 然后再粘贴。 然后存放路径的话就写我刚刚新建的文件夹。 这里。 然后名称就是flash要复制。 啊就在这里。 然后把这个名改一下。 好我打开我help库这边的一个操作流程啊。 在这里。 啊第一个是读取啊。 读取的话可以直接拷贝那个。 填写那边的代码过来就可以了。 其实他们是读取。 这个是通用的。 好在我把这个代码给啊继续拷过来。 然后卖点C这边要直接把它读取代码放在这里。 然后点上的话就可以直接对它进行读了。 我们直接读几个来看一下。 然后自己把它放在啊。 放在这里。 然后读取出来之后把它显示出来啊。 编译。 要把它下载进去。 我再打开一个摄像头。 哎没有嘛。 帮他拔插一下。 那个没没没显示到。 还是要把这边先断掉。 正常好像是不用断的。 我们来再试一次。 啊这是已经读取下来了。 我们可以去验证一次。 验证一下。 看它读取出来的是不是对的。 那我们看打开代码。 我现在读取的是它首地址啊。 读取八呃。 读取八位。 然后这里也是读取四位。 然后这里读取两位都是首地址。 读取不同的位数。 我们可以来这边验证一下啊。 把它连接起来。 啊只有八位的话。 就这里嘛2003个053个零。 然后这边也是啊。 这个应该是读取32位。 然后这个是读取16位。 16位的话就这里啊。 这我卡下可这边读取出来是一样的。 16位我们可以把这里选成16位的话。 好打。 前面就是51320嘛。 要读取八位的话啊。 最前面的话就是零零啊。 所以这个是啊能对应的上的。 就说他这边存储的跟我们读取出来的数据。 是一样的啊。 这个是读取好。 我们来演示下一个。 呃擦除。 啊擦除的话他建协那边的标准库的话。 它是有两两个擦除。 第一个是按页擦除啊。 另一个另外一个的话是全擦除。 全擦除它有一个线程的函数啊。 但是help库这边的话它是没有这个全擦除的啊。 一个相关函数它只有一个按页擦除的。 但是按页查出这里它可以指定啊year的个数。 就是你给定一个啊G的地址给他。 然后再给定一个啊要需要擦除的页数。 它就会按照啊从基地址开始。 然后往后查出多少页好。 就是其实就是用了它里面的这个函数来啊。 我直接把封装了下。 把把它拷过去。 直接用了哎。 有一次放在这边。 呃然后呢啊这个代码给注释一下。 这个读取注释下。 然后底下就是按页查出啊。 现在我先断断开这边。 然后的话呢。 嗯啊比如说我这里从基地址开始。 查出的是第一页啊。 然后这个基地址它其实里面是有一个宏定义的。 我们可以转到定义。 其实就是我们的啊这个800000啊。 我们这个八零就是它的一个接地址。 我们也可以直接写这个800000。 也可以用它里面的一个宏定义啊。 直接写这里好。 现在我们验证下。 看他是否能查出第一页。 好像我把它编译啊。 要把它下载。 好发现已经下载进去了。 要被这个屏幕也熄灭了。 因为它已经删除了啊。 第一页啊。 然后额这边我们看一下。 然后再把它连接上去啊。 发现前面的第一页数据已经全部清空了啊。 然后这里是第二页的首地址。 所以底下的这些是没有清空的啊。 他只是查出了第一页啊。 然后我们来再来验证一下啊。 他出第二页。 啊白衣。 Sa。 啊现在已经下载进去了。 就是下载进去之后它擦除前面两页。 我们看一下它前面两页的地址是指是什么。 嗯应该是在这边啊。 呃就是第一页的末尾是零零。 第二页的啊。 地址末尾是400。 第三页的地址是800。 我们刚刚的程序插插出了前两页啊。 也是说前面这两页是擦除了。 但是800啊。 以800结尾的这个地址。 这个数据是没有查出的。 我们验证一下。 看是不是这样啊。 在这边。 然后再把它连接上。 啊400占了。 然后到后面800啊。 800。 这个没插。 这个是正常的好。 我们继续验证。 这里发现了一个问题。 我们继续验证。 然后查出第三页。 编译下载好的。 它有时候查出之后要重启一下。 就把这个电断一下。 因为他这个程序已经损坏了。 你插除了前面两页。 前面两页肯定用来重放这个程序的。 我们要把断电一下。 然后嗯便宜要继续下载。 现在查出三页了。 好已经下载进去。 并且插出了。 我们再把它这个断掉。 再连上呃。 还是看这边擦除一页。 两页三页。 就是说800这种全部都查了。 就说C00啊。 C00这里啊是没差的。 我们再来验证一片。 再绑着它往上拉。 一直往拉啊。 到目前为止都是正常的。 然后我们再尝试把这一页也擦出。 也擦出。 看一下好。 我现在把这页也擦除。 然后到第四了啊。 发展。 由A编译。 然后再下载进去。 好我们再去嗯。 这里看一下我们查的四页1234。 按理说C00结尾的他应该也是要擦除的。 我们来看一下验证一次。 啊发现他并没有插图嗯。 所以说他这里我目前也还没搞懂是什么问题。 就是说他连续查出多页的时候。 有时候又查出不完。 所以这边的话想做那个全擦除的功能的话。 目前还做不了。 目前我也还没找到办法呃。 但是你单独擦除。 从这个地址开始擦除这一页的话。 它又可以擦除。 但是连续查出多页的话。 这边就查出不了。 目前我还没找到原因啊。 后面再看有没有找到原因。 再要找到原因的话再做。 对这里做一个补充啊。 这个。 但是呃这里的缺陷并不影响我们后面的代码。 我们接着往后往后面来写。 然后就是写了。 写操作的话也是啊。 用的是这个函数啊。 这个函数我们直接拿过去用就行了啊。 简写那边标准库的话。 它是分为两个函数去那个呃。 写入了一个是字。 一个是半字啊。 但是help库这边已经整合到一个函数了。 你先你想用啊字写的话。 就把这个弄个这个啊。 写成这个枚举。 然后半字的话是写成这个枚举。 就是说他用的是图形函数啊。 你用第一个参数来区分。 是字写入还是半字写入啊。 比如比如说我这样子呃。 但是写入之前的话需要做一个擦除。 然后还有一个解锁要解锁。 写完之后再然后一个加锁的一个功能。 好比如说我现在就啊把这段代码给拷过去。 然后呢我把它写在这里嗯。 先擦除最后一页啊。 这个FC00我们可以看下这篇FC00。 就是他的最后一页啊。 最后一页擦除之后呢啊同归要同一个解锁。 这个一定要加的。 不加的话它有它写不进去。 然后擦除也是要加。 不加的话。 他有时候也是写不进去的啊。 然后首先我们先写入一个字的。 往这个最后一页的啊。 写入呃这个1236666啊。 然后啊再写入一个半字的这个FC啊。 要零这个地址写入这个ABCE好。 现在我们来验证一遍。 把它编译啊。 把它下载进去啊。 刚插出来。 我现在把它这个断电再重启一遍啊。 断掉了之后呢。 哎打开摄像头。 然后编译下载。 好可以了啊。 现在已经写进去了。 我们直接来这边验证。 先再点击连接。 我们去找到最后一页。 就是呃FC00结尾的啊。 在这里FC0连接位的。 我们因为我这里全把全部读完了。 我们先把它拉到最后。 然后再往往前面找。 找到FC00。 C50C20啊。 C00在这里啊。 再看一下这个就是我们刚刚写入的数据。 这是FC00写入这个吧。 12345666嘛。 这个是写入字的。 要写入半字的话。 就是在这个FC010这个地址写入半字。 半字的就说啊只写前面几位ABCE啊。 后这里的话他是还是FF。 因为我这个是写入的是半字啊。 这个是写入的一个操作。 好下面继续哎继续往下。 啊往上面的话应该是到啊。 一个小批量的数据存储啊。 这个简写那边啊。 我们可以打开它标准库。 这边看他具体一个实现过程。 A blessed。 啊他就是把最后一页作为我们的用户数据。 作为呃。 啊就是把最后一页作为我们的一个用户数据啊。 他去初始化最后一页啊。 要编译一次才能转到定义。 它的主要原理呢就是把最后一页啊啊设置为诶。 我们的用户数据。 然后他的首地址存一个比较特殊的标志位啊。 假设这个标志位把不是这个的话就全部清空。 假如是这个的话。 就把这一页的所有数据给读取到这个。 数组里面去啊。 保存的时候也是一样啊。 保存先把这一页全部删除。 然后再把这个数据写到这一页里啊。 这个这个的原理就有点像那个RTC。 其实是是是是中那里一样啊。 就是给某一个地址弄一个标志位啊。 就判断这个标志位啊。 是不是我们指定的。 不是的话就清除四的话就读取啊。 就这个是可以做到那个调调掉。 电保持的一个功能好。 我们可以下载编译看一下。 这边要重新重新断一下电。 要看下摄像头便宜下载。 啊这个我们特殊的标志位是A5A5啊。 读取出来。 然后我们数组的第一个数设置的1234啊。 然后就把它存到最后一页里面去。 我们可以去里面找一下。 最后一页的那个数据的格式是怎么样的。 好我们我拿我拿拿到之后也在找到FC400啊。 在这里啊。 我用八位看吧。 哎用16位看。 再把它拉到最后要找到FC00。 啊这里啊第一个第一个的话。 16位的话就是我们A5A5。 就是特殊的一个标志位。 第二个的话就是我们的数据啊。 假如说现在我断电再重启的话。 因为它这个数据它是还是存在我们的flash里面。 他去读到了这个A5A5。 就说明我们已经对这一块一整块。 最后一最后一整块内存已初始化过。 然后后面他就会把1234。 读到我们这个数组里面啊。 它就通过这个原理的话。 就可以做一个掉电保持的啊。 一个功能好。 现在我就把这个STM上的电给断掉。 好。 再把它插上去啊。 他还是能读到1234啊。 所以这个就验证了啊。 flash啊。 通过这种方式来实现一个掉电。 数据不丢失的一个功能功能好。 现在我们来用help库来实现一遍这个这个功能。 啊我们还是直接在这个不新建一个项目了。 就直接在这个项目上完成就行了啊。 首先的话呢呃要把它里面的这个逻辑啊。 给拷过来。 就是呃简写这边的这个store。 这个直接拷过来啊。 现在我去它里面找到这个。 然后把它拷过来。 拷到我这边。 Tm321。 这例子应该是读取lash呃。 应该在flash啊。 就这个地方把这个点C的话拷到我这边来。 有点H的话考到这里来。 啊然后好拷过来之后呢。 参考下我的这个help扣文档啊。 第一个先考过了吗。 现在已经拷过来了。 呃然后第二步呢就是啊引入头文件。 这个要在要在这里面引入一个头文件。 要不他有一些啊。 这种可能找不到。 我们要把这个头文件给引过来。 啊然后呃这边点C的话引入要引入我这个点H。 就是说这个点C的话要引入这边的点H文件。 把这两个删掉啊。 然后继续底下啊。 然后呢因为这里涉及到这个读取。 还有擦除。 我们把刚刚我们写在媚点C里面的那个啊。 擦除跟读写都考到这边来啊。 这个插出跟读写blase图写。 把这个剪切啊。 然后把它拷到我这边啊。 专门这个点C这边来啊。 放在底下吧。 放在宏定义的底下啊。 就这个地方。 好可以了之后呢。 然后就对它里面进行啊擦除。 还有修改。 进行对应的修改就行了。 比如说啊。 比如说这里诶。 初始化这里啊。 他需要查出一个首地址。 然后我们插出一个首地址。 用我们的函数是怎么做的。 就是把这个拷过来啊。 只擦除一页嘛。 收地址。 然后把这里擦除。 啊把首地址写在这里。 然后只查出一页。 然后后面我写一啊。 就这样子。 然后底下的话就是啊写入半字。 那这个我也是要对应改成我的格式。 我想把这个先注释掉。 然后底下写入半字的话也是一样啊。 写入半字我们前面是怎么操作呢。 啊先对它进行一个呃擦除。 然后再解锁。 然后再重新写入好。 我们参考这边啊。 先解锁嘛。 先解锁。 哦前面擦除已经有了。 然后再在写入。 写入完之后呢。 我们在最底下进行一个解锁。 因为这里也还有写入的操作。 好我们在这里再解说。 然后就说我这一行是代替前面这行的啊。 改这个地址。 然后往这个写入半字。 这里指定。 因为前面这个函数写入半字的啊。 然后这里这个地址写入0SA55啊。 就说这个已经替换完成了。 然后继续我们这个也是写入半字。 解压替换掉这个我把这个注释掉。 然后用我的函数。 我的函数是应该是这里把这个拷过来啊。 写入半字。 这里写入半字半字。 然后这个地址也拷过来。 地址搞到这里来。 然后写入的是这个数据就好。 啊这个就是呃擦除要用我的函数help库函数。 然后呃这个写入也是一样啊。 底下的都是一样。 我这里就啊不一个写的。 我就把我写好的接复制过来的。 其实底下的处理方式也是一样的啊。 涉及到写入的话就是啊先解锁。 然后啊再用help库这边的写入。 然后写完之后再加锁啊。 擦除的话就是啊。 他这里直接调用了他的查除函数。 我这边要用我的。 我这里还需要指定一个啊擦除的页数。 好的。 我就直接把它拷过来了。 所以这边是额写完之后就跟我这个一样了。 我就把我这边的这个写好的拷过来。 然后这个。 啊然后再编译一次。 看有没有报错啊。 现在是没报错的啊。 然后底下的话我们就可以直接用了。 在min点C这边啊。 他是怎么用呢啊。 首先肯定要保完头文件嘛。 没点C这边要把我刚刚的这个啊。 store点H的头文件。 要把它放在这个地方吧。 然后呢底下这就可以直接用了。 用法是跟之前那边一模一样的啊。 就是这里。 好偏移。 然后呢看下摄像头。 把它下载进去。 啊效果是一样的。 1234。 我先把这个1234改一下。 123live吧。 要把它变异啊。 车展。 啊也是一样的。 现在我我啊验证一下断电保持的功能。 好把它这个电给断掉。 然后再插上去啊。 还是一样。 就说啊它掉电还是可以保持的。 我们可以去这个unity里面去看他的数据啊。 是不是也是跟我那个是一样的啊。 把他拉到最后。 然后就找这基本找到FC。 哈就这个地方A5A5嘛。 11236啊。 这个数据也是保存到这里了。 好这个就是啊跟之前那边一样的。 就是掉电保保持啊。 一个小批量的一个数据好。 最底下就还剩啊读取他的芯片id啊。 这边CPID是最简单的。 直接拷过来就可以用了。 因为啊读取跟那边是一模一样的。 地址也是一样。 然后通过指针读取好。 现在我再把他这个给屏蔽掉。 然后直接编译下载就可以看到效果了。 这个是直接从那边拷过来的。 一模一样的代码。 啊这个要重启一下。 有可能你刚连了那个sting unity。 然后呢便宜下载。 啊这个就可以读取里面的芯片id。 这个跟前面啊标准库的那个啊。 数据是一模一样的。 好这个视频就到这里了。